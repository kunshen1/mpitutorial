!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Abort	/usr/local/include/mpicxx.h	/^    virtual void Abort( int v2 ) const$/;"	f	class:MPI::Comm
Accept	/usr/local/include/mpicxx.h	/^    virtual Intercomm Accept( const char * v1, const Info &v2, int v3 ) const$/;"	f	class:MPI::Intracomm
Accumulate	/usr/local/include/mpicxx.h	/^    virtual void Accumulate( const void * v1, int v2, const Datatype &v3, int v4, Aint v5, int v6, const Datatype &v7, const Op &v8 ) const$/;"	f	class:MPI::Win
Aint	/usr/local/include/mpicxx.h	/^typedef MPI_Aint   Aint;$/;"	t	namespace:MPI
Allgather	/usr/local/include/mpicxx.h	/^    virtual void Allgather( const void * v1, int v2, const Datatype &v3, void * v4, int v5, const Datatype &v6 ) const$/;"	f	class:MPI::Comm
Allgatherv	/usr/local/include/mpicxx.h	/^    virtual void Allgatherv( const void * v1, int v2, const Datatype &v3, void * v4, const int v5[], const int v6[], const Datatype &v7 ) const$/;"	f	class:MPI::Comm
Allreduce	/usr/local/include/mpicxx.h	/^    virtual void Allreduce( const void * v1, void * v2, int v3, const Datatype &v4, const Op &v5 ) const$/;"	f	class:MPI::Comm
Alltoall	/usr/local/include/mpicxx.h	/^    virtual void Alltoall( const void * v1, int v2, const Datatype &v3, void * v4, int v5, const Datatype &v6 ) const$/;"	f	class:MPI::Comm
Alltoallv	/usr/local/include/mpicxx.h	/^    virtual void Alltoallv( const void * v1, const int v2[], const int v3[], const Datatype &v4, void * v5, const int v6[], const int v7[], const Datatype &v8 ) const$/;"	f	class:MPI::Comm
Alltoallw	/usr/local/include/mpicxx.h	/^    virtual void Alltoallw( const void * v1, const int v2[], const int v3[],  const Datatype v4[], void * v5, const int v6[], const int v7[],  const Datatype v8[] ) const$/;"	f	class:MPI::Comm
Barrier	/usr/local/include/mpicxx.h	/^    virtual void Barrier( void ) const$/;"	f	class:MPI::Comm
Bcast	/usr/local/include/mpicxx.h	/^    virtual void Bcast( void * v1, int v2, const Datatype &v3, int v4 ) const$/;"	f	class:MPI::Comm
Bsend	/usr/local/include/mpicxx.h	/^    virtual void Bsend( const void * v1, int v2, const Datatype &v3, int v4, int v5 ) const$/;"	f	class:MPI::Comm
Bsend_init	/usr/local/include/mpicxx.h	/^    virtual Prequest Bsend_init( const void * v1, int v2, const Datatype &v3, int v4, int v5 ) const$/;"	f	class:MPI::Comm
Cancel	/usr/local/include/mpicxx.h	/^    virtual void Cancel( void ) const$/;"	f	class:MPI::Request
Cancel_function	/usr/local/include/mpicxx.h	/^    typedef int Cancel_function( void *, bool );$/;"	t	class:MPI::Grequest
Cartcomm	/usr/local/include/mpicxx.h	/^    Cartcomm(const Cartcomm &obj) : Intracomm(obj) {}$/;"	f	class:MPI::Cartcomm
Cartcomm	/usr/local/include/mpicxx.h	/^    inline Cartcomm(MPI_Comm obj) : Intracomm(obj) {}$/;"	f	class:MPI::Cartcomm
Cartcomm	/usr/local/include/mpicxx.h	/^    inline Cartcomm(void) : Intracomm() {}$/;"	f	class:MPI::Cartcomm
Cartcomm	/usr/local/include/mpicxx.h	/^class Cartcomm : public Intracomm {$/;"	c	namespace:MPI
Clone	/usr/local/include/mpicxx.h	/^    virtual Cartcomm & Clone(void) const { $/;"	f	class:MPI::Cartcomm
Clone	/usr/local/include/mpicxx.h	/^    virtual Comm & Clone(void) const { $/;"	f	class:MPI::Cartcomm
Clone	/usr/local/include/mpicxx.h	/^    virtual Comm & Clone(void) const { $/;"	f	class:MPI::Graphcomm
Clone	/usr/local/include/mpicxx.h	/^    virtual Comm & Clone(void) const { $/;"	f	class:MPI::Intercomm
Clone	/usr/local/include/mpicxx.h	/^    virtual Comm & Clone(void) const { $/;"	f	class:MPI::Intracomm
Clone	/usr/local/include/mpicxx.h	/^    virtual Comm & Clone(void) const { $/;"	f	class:MPI::Nullcomm
Clone	/usr/local/include/mpicxx.h	/^    virtual Graphcomm & Clone(void) const { $/;"	f	class:MPI::Graphcomm
Clone	/usr/local/include/mpicxx.h	/^    virtual Intercomm & Clone(void) const { $/;"	f	class:MPI::Intercomm
Clone	/usr/local/include/mpicxx.h	/^    virtual Intracomm & Clone(void) const { $/;"	f	class:MPI::Intracomm
Clone	/usr/local/include/mpicxx.h	/^    virtual Nullcomm & Clone(void) const { $/;"	f	class:MPI::Nullcomm
Close	/usr/local/include/mpicxx.h	/^    virtual void Close( void ) $/;"	f	class:MPI::File
Comm	/usr/local/include/mpicxx.h	/^    Comm(const Comm &obj) : the_real_comm(obj.the_real_comm){}$/;"	f	class:MPI::Comm
Comm	/usr/local/include/mpicxx.h	/^    inline Comm(MPI_Comm obj) : the_real_comm(obj) {}$/;"	f	class:MPI::Comm
Comm	/usr/local/include/mpicxx.h	/^    inline Comm(void) : the_real_comm(MPI_COMM_NULL) {}$/;"	f	class:MPI::Comm
Comm	/usr/local/include/mpicxx.h	/^class Comm  {$/;"	c	namespace:MPI
Commit	/usr/local/include/mpicxx.h	/^    virtual void Commit( void ) $/;"	f	class:MPI::Datatype
Compare	/usr/local/include/mpicxx.h	/^    static int Compare( const Comm &v1, const Comm &v2 ) $/;"	f	class:MPI::Comm
Compare	/usr/local/include/mpicxx.h	/^    static int Compare( const Group &v1, const Group &v2 ) $/;"	f	class:MPI::Group
Complete	/usr/local/include/mpicxx.h	/^    virtual void Complete( void ) $/;"	f	class:MPI::Grequest
Complete	/usr/local/include/mpicxx.h	/^    virtual void Complete( void ) const$/;"	f	class:MPI::Win
Connect	/usr/local/include/mpicxx.h	/^    virtual Intercomm Connect( const char * v1, const Info &v2, int v3 ) const$/;"	f	class:MPI::Intracomm
Copy_attr_function	/usr/local/include/mpicxx.h	/^    typedef int Copy_attr_function(const Comm& oldcomm, int comm_keyval, void* extra_state, void* attribute_val_in, void* attribute_val_out, bool& flag); $/;"	t	class:MPI::Comm
Copy_attr_function	/usr/local/include/mpicxx.h	/^    typedef int Copy_attr_function(const Datatype& oldtype, int type_keyval, void* extra_state, void* attribute_val_in, void* attribute_val_out, bool& flag); $/;"	t	class:MPI::Datatype
Copy_attr_function	/usr/local/include/mpicxx.h	/^    typedef int Copy_attr_function(const Win& oldwin, int win_keyval, void* extra_state, void* attribute_val_in, void* attribute_val_out, bool& flag); $/;"	t	class:MPI::Win
Create	/usr/local/include/mpicxx.h	/^    static Info Create( void ) $/;"	f	class:MPI::Info
Create	/usr/local/include/mpicxx.h	/^    static Win Create( const void * v1, Aint v2, int v3, const Info &v4, const Intracomm &v5 ) $/;"	f	class:MPI::Win
Create	/usr/local/include/mpicxx.h	/^    virtual Intracomm Create( const Group &v2 ) const$/;"	f	class:MPI::Intracomm
Create_contiguous	/usr/local/include/mpicxx.h	/^    virtual Datatype Create_contiguous( int v1 ) const$/;"	f	class:MPI::Datatype
Create_darray	/usr/local/include/mpicxx.h	/^    virtual Datatype Create_darray( int v1, int v2, int v3, const int v4[], const int v5[], const int v6[], const int v7[], int v8 ) const$/;"	f	class:MPI::Datatype
Create_f90_complex	/usr/local/include/mpicxx.h	/^    static Datatype Create_f90_complex( int v1, int v2 ) $/;"	f	class:MPI::Datatype
Create_f90_integer	/usr/local/include/mpicxx.h	/^    static Datatype Create_f90_integer( int v1 ) $/;"	f	class:MPI::Datatype
Create_f90_real	/usr/local/include/mpicxx.h	/^    static Datatype Create_f90_real( int v1, int v2 ) $/;"	f	class:MPI::Datatype
Create_hindexed	/usr/local/include/mpicxx.h	/^    virtual Datatype Create_hindexed( int v1, const int v2[], const Aint v3[] ) const$/;"	f	class:MPI::Datatype
Create_hvector	/usr/local/include/mpicxx.h	/^    virtual Datatype Create_hvector( int v1, int v2, Aint v3 ) const$/;"	f	class:MPI::Datatype
Create_indexed	/usr/local/include/mpicxx.h	/^    virtual Datatype Create_indexed( int v1, const int v2[], const int v3[] ) const$/;"	f	class:MPI::Datatype
Create_indexed_block	/usr/local/include/mpicxx.h	/^    virtual Datatype Create_indexed_block( int v1, int v2, const int v3[] ) const$/;"	f	class:MPI::Datatype
Create_intercomm	/usr/local/include/mpicxx.h	/^    virtual Intercomm Create_intercomm( int v2, const Comm &v3, int v4, int v5 ) const$/;"	f	class:MPI::Intracomm
Create_resized	/usr/local/include/mpicxx.h	/^    virtual Datatype Create_resized( const Aint v2, const Aint v3 ) const$/;"	f	class:MPI::Datatype
Create_struct	/usr/local/include/mpicxx.h	/^    static Datatype Create_struct( int v1, const int v2[], const Aint v3[],  const Datatype v4[] ) $/;"	f	class:MPI::Datatype
Create_struct	/usr/local/include/mpicxx.h	/^    static Datatype Create_struct( int v1, int v2[], Aint v3[],  const Datatype v4[] ) $/;"	f	class:MPI::Datatype
Create_subarray	/usr/local/include/mpicxx.h	/^    virtual Datatype Create_subarray( int v1, const int v2[], const int v3[], const int v4[], const int v5 ) const$/;"	f	class:MPI::Datatype
Create_vector	/usr/local/include/mpicxx.h	/^    virtual Datatype Create_vector( int v1, int v2, int v3 ) const$/;"	f	class:MPI::Datatype
DUP_FN	/usr/local/include/mpicxx.h	/^    static int DUP_FN( const Comm &oldcomm MPIR_ARGUNUSED, $/;"	f	class:MPI::Comm
DUP_FN	/usr/local/include/mpicxx.h	/^    static int DUP_FN( const Datatype &oldtype MPIR_ARGUNUSED, $/;"	f	class:MPI::Datatype
DUP_FN	/usr/local/include/mpicxx.h	/^    static int DUP_FN( const Win &oldwin MPIR_ARGUNUSED, $/;"	f	class:MPI::Win
Datarep_conversion_function	/usr/local/include/mpicxx.h	/^typedef int Datarep_conversion_function( void *, Datatype &, int, void *,$/;"	t	namespace:MPI
Datarep_extent_function	/usr/local/include/mpicxx.h	/^typedef int Datarep_extent_function( const Datatype&, Aint&, void *);$/;"	t	namespace:MPI
Datatype	/usr/local/include/mpicxx.h	/^    Datatype(const Datatype &obj) : the_real_datatype(obj.the_real_datatype){}$/;"	f	class:MPI::Datatype
Datatype	/usr/local/include/mpicxx.h	/^    inline Datatype(MPI_Datatype obj) : the_real_datatype(obj) {}$/;"	f	class:MPI::Datatype
Datatype	/usr/local/include/mpicxx.h	/^    inline Datatype(void) : the_real_datatype(MPI_DATATYPE_NULL) {}$/;"	f	class:MPI::Datatype
Datatype	/usr/local/include/mpicxx.h	/^class Datatype  {$/;"	c	namespace:MPI
Delete	/usr/local/include/mpicxx.h	/^    static void Delete( const char * v1, const Info &v2 ) $/;"	f	class:MPI::File
Delete	/usr/local/include/mpicxx.h	/^    virtual void Delete( const char * v2 ) $/;"	f	class:MPI::Info
Delete_attr	/usr/local/include/mpicxx.h	/^    virtual void Delete_attr( int v2 ) $/;"	f	class:MPI::Comm
Delete_attr	/usr/local/include/mpicxx.h	/^    virtual void Delete_attr( int v2 ) $/;"	f	class:MPI::Datatype
Delete_attr	/usr/local/include/mpicxx.h	/^    virtual void Delete_attr( int v2 ) $/;"	f	class:MPI::Win
Delete_attr_function	/usr/local/include/mpicxx.h	/^    typedef int Delete_attr_function(Comm& comm, int comm_keyval, void* attribute_val, void* extra_state); $/;"	t	class:MPI::Comm
Delete_attr_function	/usr/local/include/mpicxx.h	/^    typedef int Delete_attr_function(Datatype& type, int type_keyval, void* attribute_val, void* extra_state); $/;"	t	class:MPI::Datatype
Delete_attr_function	/usr/local/include/mpicxx.h	/^    typedef int Delete_attr_function(Win& win, int win_keyval, void* attribute_val, void* extra_state); $/;"	t	class:MPI::Win
Difference	/usr/local/include/mpicxx.h	/^    static Group Difference( const Group &v1, const Group &v2 ) $/;"	f	class:MPI::Group
Disconnect	/usr/local/include/mpicxx.h	/^    virtual void Disconnect( void ) $/;"	f	class:MPI::Comm
Dup	/usr/local/include/mpicxx.h	/^    Cartcomm Dup( void ) const$/;"	f	class:MPI::Cartcomm
Dup	/usr/local/include/mpicxx.h	/^    Datatype Dup( void ) const$/;"	f	class:MPI::Datatype
Dup	/usr/local/include/mpicxx.h	/^    Graphcomm Dup( void ) const$/;"	f	class:MPI::Graphcomm
Dup	/usr/local/include/mpicxx.h	/^    Info Dup( void ) const$/;"	f	class:MPI::Info
Dup	/usr/local/include/mpicxx.h	/^    Intercomm Dup( void ) const$/;"	f	class:MPI::Intercomm
Dup	/usr/local/include/mpicxx.h	/^    Intracomm Dup( void ) const$/;"	f	class:MPI::Intracomm
Errhandler	/usr/local/include/mpicxx.h	/^    Errhandler(const Errhandler &obj) : the_real_errhandler(obj.the_real_errhandler){}$/;"	f	class:MPI::Errhandler
Errhandler	/usr/local/include/mpicxx.h	/^    inline Errhandler(MPI_Errhandler obj) : the_real_errhandler(obj) {}$/;"	f	class:MPI::Errhandler
Errhandler	/usr/local/include/mpicxx.h	/^    inline Errhandler(void) : the_real_errhandler(MPI_ERRHANDLER_NULL) {}$/;"	f	class:MPI::Errhandler
Errhandler	/usr/local/include/mpicxx.h	/^class Errhandler  {$/;"	c	namespace:MPI
Errhandler_fn	/usr/local/include/mpicxx.h	/^    typedef Errhandler_function Errhandler_fn;$/;"	t	class:MPI::Comm
Errhandler_fn	/usr/local/include/mpicxx.h	/^    typedef Errhandler_function Errhandler_fn;$/;"	t	class:MPI::File
Errhandler_fn	/usr/local/include/mpicxx.h	/^    typedef Errhandler_function Errhandler_fn;$/;"	t	class:MPI::Win
Errhandler_function	/usr/local/include/mpicxx.h	/^    typedef void Errhandler_function(Comm &, int *, ... );$/;"	t	class:MPI::Comm
Errhandler_function	/usr/local/include/mpicxx.h	/^    typedef void Errhandler_function(File &, int *, ... );$/;"	t	class:MPI::File
Errhandler_function	/usr/local/include/mpicxx.h	/^    typedef void Errhandler_function(Win &, int *, ... );$/;"	t	class:MPI::Win
Exception	/usr/local/include/mpicxx.h	/^    Exception(const Exception &obj) : the_real_exception(obj.the_real_exception){}$/;"	f	class:MPI::Exception
Exception	/usr/local/include/mpicxx.h	/^    inline Exception(int obj) : the_real_exception(obj) {}$/;"	f	class:MPI::Exception
Exception	/usr/local/include/mpicxx.h	/^    inline Exception(void) : the_real_exception(0) {}$/;"	f	class:MPI::Exception
Exception	/usr/local/include/mpicxx.h	/^class Exception  {$/;"	c	namespace:MPI
Excl	/usr/local/include/mpicxx.h	/^    virtual Group Excl( int v2, const int v3[] ) const$/;"	f	class:MPI::Group
Exscan	/usr/local/include/mpicxx.h	/^    virtual void Exscan( const void * v1, void * v2, int v3, const Datatype &v4, const Op &v5 ) const$/;"	f	class:MPI::Intracomm
Fence	/usr/local/include/mpicxx.h	/^    virtual void Fence( int v1 ) const$/;"	f	class:MPI::Win
File	/usr/local/include/mpicxx.h	/^    File(const File &obj) : the_real_file(obj.the_real_file){}$/;"	f	class:MPI::File
File	/usr/local/include/mpicxx.h	/^    inline File(MPI_File obj) : the_real_file(obj) {}$/;"	f	class:MPI::File
File	/usr/local/include/mpicxx.h	/^    inline File(void) : the_real_file(MPI_FILE_NULL) {}$/;"	f	class:MPI::File
File	/usr/local/include/mpicxx.h	/^class File  {$/;"	c	namespace:MPI
Fint	/usr/local/include/mpicxx.h	/^typedef MPI_Fint   Fint;$/;"	t	namespace:MPI
Free	/usr/local/include/mpicxx.h	/^    virtual void Free( void ) $/;"	f	class:MPI::Comm
Free	/usr/local/include/mpicxx.h	/^    virtual void Free( void ) $/;"	f	class:MPI::Datatype
Free	/usr/local/include/mpicxx.h	/^    virtual void Free( void ) $/;"	f	class:MPI::Errhandler
Free	/usr/local/include/mpicxx.h	/^    virtual void Free( void ) $/;"	f	class:MPI::Group
Free	/usr/local/include/mpicxx.h	/^    virtual void Free( void ) $/;"	f	class:MPI::Info
Free	/usr/local/include/mpicxx.h	/^    virtual void Free( void ) $/;"	f	class:MPI::Op
Free	/usr/local/include/mpicxx.h	/^    virtual void Free( void ) $/;"	f	class:MPI::Request
Free	/usr/local/include/mpicxx.h	/^    virtual void Free( void ) $/;"	f	class:MPI::Win
Free_function	/usr/local/include/mpicxx.h	/^    typedef int Free_function( void * );$/;"	t	class:MPI::Grequest
Free_keyval	/usr/local/include/mpicxx.h	/^    static void Free_keyval( int &v1 ) $/;"	f	class:MPI::Comm
Free_keyval	/usr/local/include/mpicxx.h	/^    static void Free_keyval( int &v1 ) $/;"	f	class:MPI::Datatype
Free_keyval	/usr/local/include/mpicxx.h	/^    static void Free_keyval( int &v1 ) $/;"	f	class:MPI::Win
Gather	/usr/local/include/mpicxx.h	/^    virtual void Gather( const void * v1, int v2, const Datatype &v3, void * v4, int v5, const Datatype &v6, int v7 ) const$/;"	f	class:MPI::Comm
Gatherv	/usr/local/include/mpicxx.h	/^    virtual void Gatherv( const void * v1, int v2, const Datatype &v3, void * v4, const int v5[], const int v6[], const Datatype &v7, int v8 ) const$/;"	f	class:MPI::Comm
Get	/usr/local/include/mpicxx.h	/^    virtual bool Get( const char * v2, int v3, char * v4 ) const$/;"	f	class:MPI::Info
Get	/usr/local/include/mpicxx.h	/^    virtual void Get( void * v1, int v2, const Datatype &v3, int v4, Aint v5, int v6, const Datatype &v7 ) const$/;"	f	class:MPI::Win
Get_amode	/usr/local/include/mpicxx.h	/^    virtual int Get_amode( void ) const$/;"	f	class:MPI::File
Get_atomicity	/usr/local/include/mpicxx.h	/^    virtual bool Get_atomicity( void ) const$/;"	f	class:MPI::File
Get_attr	/usr/local/include/mpicxx.h	/^    virtual bool Get_attr( int v2, void * v3 ) const$/;"	f	class:MPI::Comm
Get_attr	/usr/local/include/mpicxx.h	/^    virtual bool Get_attr( int v2, void * v3 ) const$/;"	f	class:MPI::Datatype
Get_attr	/usr/local/include/mpicxx.h	/^    virtual bool Get_attr( int v2, void * v3 ) const$/;"	f	class:MPI::Win
Get_byte_offset	/usr/local/include/mpicxx.h	/^    virtual Offset Get_byte_offset( const Offset v2 ) const$/;"	f	class:MPI::File
Get_cart_rank	/usr/local/include/mpicxx.h	/^    virtual int Get_cart_rank( const int v2[] ) const$/;"	f	class:MPI::Cartcomm
Get_contents	/usr/local/include/mpicxx.h	/^    virtual void Get_contents( int v2, int v3, int v4, int v5[], Aint v6[], Datatype v7[] ) const$/;"	f	class:MPI::Datatype
Get_coords	/usr/local/include/mpicxx.h	/^    virtual void Get_coords( int v2, int v3, int v4[] ) const$/;"	f	class:MPI::Cartcomm
Get_count	/usr/local/include/mpicxx.h	/^    virtual int Get_count( const Datatype &v2 ) const$/;"	f	class:MPI::Status
Get_dim	/usr/local/include/mpicxx.h	/^    virtual int Get_dim( void ) const$/;"	f	class:MPI::Cartcomm
Get_dims	/usr/local/include/mpicxx.h	/^    virtual void Get_dims( int * v2, int * v3 ) const$/;"	f	class:MPI::Graphcomm
Get_elements	/usr/local/include/mpicxx.h	/^    virtual int Get_elements( const Datatype &v2 ) const$/;"	f	class:MPI::Status
Get_envelope	/usr/local/include/mpicxx.h	/^    virtual void Get_envelope( int &v2, int &v3, int &v4, int &v5 ) const$/;"	f	class:MPI::Datatype
Get_errhandler	/usr/local/include/mpicxx.h	/^    virtual Errhandler Get_errhandler( void ) const$/;"	f	class:MPI::Comm
Get_errhandler	/usr/local/include/mpicxx.h	/^    virtual Errhandler Get_errhandler( void ) const$/;"	f	class:MPI::File
Get_errhandler	/usr/local/include/mpicxx.h	/^    virtual Errhandler Get_errhandler( void ) const$/;"	f	class:MPI::Win
Get_error	/usr/local/include/mpicxx.h	/^    int Get_error(void) const { return the_real_status.MPI_ERROR; }$/;"	f	class:MPI::Status
Get_error_class	/usr/local/include/mpicxx.h	/^    int Get_error_class(void) { return MPI::Get_error_class(the_real_exception); } $/;"	f	class:MPI::Exception
Get_error_code	/usr/local/include/mpicxx.h	/^    int Get_error_code(void) { return the_real_exception; } $/;"	f	class:MPI::Exception
Get_error_string	/usr/local/include/mpicxx.h	/^    const char *Get_error_string(void)$/;"	f	class:MPI::Exception
Get_extent	/usr/local/include/mpicxx.h	/^    virtual void Get_extent( Aint & v2, Aint & v3 ) const$/;"	f	class:MPI::Datatype
Get_group	/usr/local/include/mpicxx.h	/^    virtual Group Get_group( void ) const$/;"	f	class:MPI::Comm
Get_group	/usr/local/include/mpicxx.h	/^    virtual Group Get_group( void ) const$/;"	f	class:MPI::File
Get_group	/usr/local/include/mpicxx.h	/^    virtual Group Get_group( void ) const$/;"	f	class:MPI::Win
Get_info	/usr/local/include/mpicxx.h	/^    virtual Info Get_info( void ) const$/;"	f	class:MPI::File
Get_name	/usr/local/include/mpicxx.h	/^    virtual void Get_name( char * v2, int &v3 ) const$/;"	f	class:MPI::Comm
Get_name	/usr/local/include/mpicxx.h	/^    virtual void Get_name( char * v2, int &v3 ) const$/;"	f	class:MPI::Datatype
Get_name	/usr/local/include/mpicxx.h	/^    virtual void Get_name( char * v2, int &v3 ) const$/;"	f	class:MPI::Win
Get_neighbors	/usr/local/include/mpicxx.h	/^    virtual void Get_neighbors( int v2, int v3, int v4[] ) const$/;"	f	class:MPI::Graphcomm
Get_neighbors_count	/usr/local/include/mpicxx.h	/^    virtual int Get_neighbors_count( int v2 ) const$/;"	f	class:MPI::Graphcomm
Get_nkeys	/usr/local/include/mpicxx.h	/^    virtual int Get_nkeys( void ) const$/;"	f	class:MPI::Info
Get_nthkey	/usr/local/include/mpicxx.h	/^    virtual void Get_nthkey( int v2, char * v3 ) const$/;"	f	class:MPI::Info
Get_position	/usr/local/include/mpicxx.h	/^    virtual Offset Get_position( void ) const$/;"	f	class:MPI::File
Get_position_shared	/usr/local/include/mpicxx.h	/^    virtual Offset Get_position_shared( void ) const$/;"	f	class:MPI::File
Get_rank	/usr/local/include/mpicxx.h	/^    virtual int Get_rank( void ) const$/;"	f	class:MPI::Comm
Get_rank	/usr/local/include/mpicxx.h	/^    virtual int Get_rank( void ) const$/;"	f	class:MPI::Group
Get_remote_group	/usr/local/include/mpicxx.h	/^    virtual Group Get_remote_group( void ) const$/;"	f	class:MPI::Intercomm
Get_remote_size	/usr/local/include/mpicxx.h	/^    virtual int Get_remote_size( void ) const$/;"	f	class:MPI::Intercomm
Get_size	/usr/local/include/mpicxx.h	/^    virtual Offset Get_size( void ) const$/;"	f	class:MPI::File
Get_size	/usr/local/include/mpicxx.h	/^    virtual int Get_size( void ) const$/;"	f	class:MPI::Comm
Get_size	/usr/local/include/mpicxx.h	/^    virtual int Get_size( void ) const$/;"	f	class:MPI::Datatype
Get_size	/usr/local/include/mpicxx.h	/^    virtual int Get_size( void ) const$/;"	f	class:MPI::Group
Get_source	/usr/local/include/mpicxx.h	/^    int Get_source(void) const { return the_real_status.MPI_SOURCE; }$/;"	f	class:MPI::Status
Get_status	/usr/local/include/mpicxx.h	/^    virtual bool Get_status( Status & v3 ) const$/;"	f	class:MPI::Request
Get_status	/usr/local/include/mpicxx.h	/^    virtual bool Get_status( void ) const$/;"	f	class:MPI::Request
Get_tag	/usr/local/include/mpicxx.h	/^    int Get_tag(void) const { return the_real_status.MPI_TAG; }$/;"	f	class:MPI::Status
Get_topo	/usr/local/include/mpicxx.h	/^    virtual void Get_topo( int v2, int v3, int v4[], int v5[] ) const$/;"	f	class:MPI::Graphcomm
Get_topo	/usr/local/include/mpicxx.h	/^    virtual void Get_topo( int v2, int v3[], bool v4[], int v5[] ) const$/;"	f	class:MPI::Cartcomm
Get_topology	/usr/local/include/mpicxx.h	/^    virtual int Get_topology( void ) const$/;"	f	class:MPI::Comm
Get_true_extent	/usr/local/include/mpicxx.h	/^    virtual void Get_true_extent( Aint & v2, Aint & v3 ) const$/;"	f	class:MPI::Datatype
Get_type_extent	/usr/local/include/mpicxx.h	/^    virtual Aint Get_type_extent( const Datatype &v2 ) const$/;"	f	class:MPI::File
Get_valuelen	/usr/local/include/mpicxx.h	/^    virtual bool Get_valuelen( const char * v2, int &v3 ) const$/;"	f	class:MPI::Info
Get_view	/usr/local/include/mpicxx.h	/^    virtual void Get_view( Offset & v2, Datatype &v3, Datatype &v4, char * v5 ) const$/;"	f	class:MPI::File
Graphcomm	/usr/local/include/mpicxx.h	/^    Graphcomm(const Graphcomm &obj) : Intracomm(obj) {}$/;"	f	class:MPI::Graphcomm
Graphcomm	/usr/local/include/mpicxx.h	/^    inline Graphcomm(MPI_Comm obj) : Intracomm(obj) {}$/;"	f	class:MPI::Graphcomm
Graphcomm	/usr/local/include/mpicxx.h	/^    inline Graphcomm(void) : Intracomm() {}$/;"	f	class:MPI::Graphcomm
Graphcomm	/usr/local/include/mpicxx.h	/^class Graphcomm : public Intracomm {$/;"	c	namespace:MPI
Grequest	/usr/local/include/mpicxx.h	/^    Grequest(const Grequest &obj) : Request(obj) {}$/;"	f	class:MPI::Grequest
Grequest	/usr/local/include/mpicxx.h	/^    inline Grequest(MPI_Request obj) : Request(obj) {}$/;"	f	class:MPI::Grequest
Grequest	/usr/local/include/mpicxx.h	/^    inline Grequest(void) : Request() {}$/;"	f	class:MPI::Grequest
Grequest	/usr/local/include/mpicxx.h	/^class Grequest : public Request {$/;"	c	namespace:MPI
Group	/usr/local/include/mpicxx.h	/^    Group(const Group &obj) : the_real_group(obj.the_real_group){}$/;"	f	class:MPI::Group
Group	/usr/local/include/mpicxx.h	/^    inline Group(MPI_Group obj) : the_real_group(obj) {}$/;"	f	class:MPI::Group
Group	/usr/local/include/mpicxx.h	/^    inline Group(void) : the_real_group(MPI_GROUP_NULL) {}$/;"	f	class:MPI::Group
Group	/usr/local/include/mpicxx.h	/^class Group  {$/;"	c	namespace:MPI
HAVE_MPI_DARRAY_SUBARRAY	/usr/local/include/mpio.h	117;"	d
HAVE_MPI_DATAREP_FUNCTIONS	/usr/local/include/mpio.h	54;"	d
HAVE_MPI_GREQUEST	/usr/local/include/mpio.h	32;"	d
HAVE_MPI_INFO	/usr/local/include/mpio.h	75;"	d
HAVE_MPI_OFFSET	/usr/local/include/mpi.h	345;"	d
Ibsend	/usr/local/include/mpicxx.h	/^    virtual Request Ibsend( const void * v1, int v2, const Datatype &v3, int v4, int v5 ) const$/;"	f	class:MPI::Comm
Incl	/usr/local/include/mpicxx.h	/^    virtual Group Incl( int v2, const int v3[] ) const$/;"	f	class:MPI::Group
Info	/usr/local/include/mpicxx.h	/^    Info(const Info &obj) : the_real_info(obj.the_real_info){}$/;"	f	class:MPI::Info
Info	/usr/local/include/mpicxx.h	/^    inline Info(MPI_Info obj) : the_real_info(obj) {}$/;"	f	class:MPI::Info
Info	/usr/local/include/mpicxx.h	/^    inline Info(void) : the_real_info(MPI_INFO_NULL) {}$/;"	f	class:MPI::Info
Info	/usr/local/include/mpicxx.h	/^class Info  {$/;"	c	namespace:MPI
Intercomm	/usr/local/include/mpicxx.h	/^    Intercomm(const Intercomm &obj) : Comm(obj) {}$/;"	f	class:MPI::Intercomm
Intercomm	/usr/local/include/mpicxx.h	/^    inline Intercomm(MPI_Comm obj) : Comm(obj) {}$/;"	f	class:MPI::Intercomm
Intercomm	/usr/local/include/mpicxx.h	/^    inline Intercomm(void) : Comm() {}$/;"	f	class:MPI::Intercomm
Intercomm	/usr/local/include/mpicxx.h	/^class Intercomm : public Comm {$/;"	c	namespace:MPI
Intersect	/usr/local/include/mpicxx.h	/^    static Group Intersect( const Group &v1, const Group &v2 ) $/;"	f	class:MPI::Group
Intracomm	/usr/local/include/mpicxx.h	/^    Intracomm(const Intracomm &obj) : Comm(obj) {}$/;"	f	class:MPI::Intracomm
Intracomm	/usr/local/include/mpicxx.h	/^    inline Intracomm(MPI_Comm obj) : Comm(obj) {}$/;"	f	class:MPI::Intracomm
Intracomm	/usr/local/include/mpicxx.h	/^    inline Intracomm(void) : Comm() {}$/;"	f	class:MPI::Intracomm
Intracomm	/usr/local/include/mpicxx.h	/^class Intracomm : public Comm {$/;"	c	namespace:MPI
Iprobe	/usr/local/include/mpicxx.h	/^    virtual bool Iprobe( int v1, int v2 ) const$/;"	f	class:MPI::Comm
Iprobe	/usr/local/include/mpicxx.h	/^    virtual bool Iprobe( int v1, int v2, Status & v5 ) const$/;"	f	class:MPI::Comm
Iread	/usr/local/include/mpicxx.h	/^    virtual Request Iread( void * v2, int v3, const Datatype &v4 ) $/;"	f	class:MPI::File
Iread_at	/usr/local/include/mpicxx.h	/^    virtual Request Iread_at( Offset v2, void * v3, int v4, const Datatype &v5 ) $/;"	f	class:MPI::File
Iread_shared	/usr/local/include/mpicxx.h	/^    virtual Request Iread_shared( void * v2, int v3, const Datatype &v4 ) $/;"	f	class:MPI::File
Irecv	/usr/local/include/mpicxx.h	/^    virtual Request Irecv( void * v1, int v2, const Datatype &v3, int v4, int v5 ) const$/;"	f	class:MPI::Comm
Irsend	/usr/local/include/mpicxx.h	/^    virtual Request Irsend( const void * v1, int v2, const Datatype &v3, int v4, int v5 ) const$/;"	f	class:MPI::Comm
Is_cancelled	/usr/local/include/mpicxx.h	/^    virtual bool Is_cancelled( void ) const$/;"	f	class:MPI::Status
Is_commutative	/usr/local/include/mpicxx.h	/^    virtual bool Is_commutative( void ) const$/;"	f	class:MPI::Op
Is_inter	/usr/local/include/mpicxx.h	/^    virtual bool Is_inter( void ) const$/;"	f	class:MPI::Comm
Isend	/usr/local/include/mpicxx.h	/^    virtual Request Isend( const void * v1, int v2, const Datatype &v3, int v4, int v5 ) const$/;"	f	class:MPI::Comm
Issend	/usr/local/include/mpicxx.h	/^    virtual Request Issend( const void * v1, int v2, const Datatype &v3, int v4, int v5 ) const$/;"	f	class:MPI::Comm
Iwrite	/usr/local/include/mpicxx.h	/^    virtual Request Iwrite( const void * v2, int v3, const Datatype &v4 ) $/;"	f	class:MPI::File
Iwrite_at	/usr/local/include/mpicxx.h	/^    virtual Request Iwrite_at( Offset v2, const void * v3, int v4, const Datatype &v5 ) $/;"	f	class:MPI::File
Iwrite_shared	/usr/local/include/mpicxx.h	/^    virtual Request Iwrite_shared( const void * v2, int v3, const Datatype &v4 ) $/;"	f	class:MPI::File
LOCK_SHARED	/usr/local/include/mpicxx.h	/^    , LOCK_SHARED = MPIR_LOCK_SHARED$/;"	e	enum:MPIR_Dummy_seek_type
LOCK_SHARED	/usr/local/include/mpicxx.h	63;"	d
Lock	/usr/local/include/mpicxx.h	/^    virtual void Lock( int v1, int v2, int v3 ) const$/;"	f	class:MPI::Win
MPI	/usr/local/include/mpicxx.h	/^namespace MPI {$/;"	n
MPICH	/usr/local/include/mpi.h	21;"	d
MPICH_API_PUBLIC	/usr/local/include/mpi.h	13;"	d
MPICH_API_PUBLIC	/usr/local/include/mpi.h	15;"	d
MPICH_ATTR_POINTER_WITH_TYPE_TAG	/usr/local/include/mpi.h	71;"	d
MPICH_ATTR_POINTER_WITH_TYPE_TAG	/usr/local/include/mpi.h	80;"	d
MPICH_ATTR_TYPE_TAG	/usr/local/include/mpi.h	72;"	d
MPICH_ATTR_TYPE_TAG	/usr/local/include/mpi.h	81;"	d
MPICH_ATTR_TYPE_TAG_C99	/usr/local/include/mpi.h	113;"	d
MPICH_ATTR_TYPE_TAG_C99	/usr/local/include/mpi.h	115;"	d
MPICH_ATTR_TYPE_TAG_C99	/usr/local/include/mpi.h	118;"	d
MPICH_ATTR_TYPE_TAG_CXX	/usr/local/include/mpi.h	122;"	d
MPICH_ATTR_TYPE_TAG_CXX	/usr/local/include/mpi.h	124;"	d
MPICH_ATTR_TYPE_TAG_LAYOUT_COMPATIBLE	/usr/local/include/mpi.h	73;"	d
MPICH_ATTR_TYPE_TAG_LAYOUT_COMPATIBLE	/usr/local/include/mpi.h	82;"	d
MPICH_ATTR_TYPE_TAG_MUST_BE_NULL	/usr/local/include/mpi.h	74;"	d
MPICH_ATTR_TYPE_TAG_MUST_BE_NULL	/usr/local/include/mpi.h	83;"	d
MPICH_ATTR_TYPE_TAG_STDINT	/usr/local/include/mpi.h	106;"	d
MPICH_ATTR_TYPE_TAG_STDINT	/usr/local/include/mpi.h	108;"	d
MPICH_CALC_VERSION	/usr/local/include/mpi.h	55;"	d
MPICH_DEFINE_ATTR_TYPE_TYPES	/usr/local/include/mpi.h	64;"	d
MPICH_DEFINE_ATTR_TYPE_TYPES	/usr/local/include/mpi.h	70;"	d
MPICH_ERR_FIRST_MPIX	/usr/local/include/mpi.h	706;"	d
MPICH_ERR_LAST_CLASS	/usr/local/include/mpi.h	703;"	d
MPICH_ERR_LAST_MPIX	/usr/local/include/mpi.h	720;"	d
MPICH_HAS_C2F	/usr/local/include/mpi.h	22;"	d
MPICH_NAME	/usr/local/include/mpi.h	20;"	d
MPICH_NUMVERSION	/usr/local/include/mpi.h	48;"	d
MPICH_RELEASE_TYPE_ALPHA	/usr/local/include/mpi.h	50;"	d
MPICH_RELEASE_TYPE_BETA	/usr/local/include/mpi.h	51;"	d
MPICH_RELEASE_TYPE_PATCH	/usr/local/include/mpi.h	53;"	d
MPICH_RELEASE_TYPE_RC	/usr/local/include/mpi.h	52;"	d
MPICH_VERSION	/usr/local/include/mpi.h	47;"	d
MPIIMPL_ADVERTISES_FEATURES	/usr/local/include/mpi.h	730;"	d
MPIIMPL_HAVE_MPI_COMBINER_DARRAY	/usr/local/include/mpi.h	732;"	d
MPIIMPL_HAVE_MPI_COMBINER_DUP	/usr/local/include/mpi.h	736;"	d
MPIIMPL_HAVE_MPI_COMBINER_SUBARRAY	/usr/local/include/mpi.h	734;"	d
MPIIMPL_HAVE_MPI_GREQUEST	/usr/local/include/mpi.h	737;"	d
MPIIMPL_HAVE_MPI_INFO	/usr/local/include/mpi.h	731;"	d
MPIIMPL_HAVE_MPI_TYPE_CREATE_DARRAY	/usr/local/include/mpi.h	733;"	d
MPIIMPL_HAVE_MPI_TYPE_CREATE_DARRAY	/usr/local/include/mpi.h	735;"	d
MPIIMPL_HAVE_STATUS_SET_BYTES	/usr/local/include/mpi.h	738;"	d
MPIIMPL_HAVE_STATUS_SET_INFO	/usr/local/include/mpi.h	739;"	d
MPIO_INCLUDE	/usr/local/include/mpio.h	9;"	d
MPIO_REQUEST_DEFINED	/usr/local/include/mpio.h	45;"	d
MPIO_REQUEST_NULL	/usr/local/include/mpio.h	103;"	d
MPIO_Request	/usr/local/include/mpio.h	/^typedef struct ADIOI_RequestD *MPIO_Request;  $/;"	t	typeref:struct:ADIOI_RequestD
MPIO_Request	/usr/local/include/mpio.h	37;"	d
MPIO_Test	/usr/local/include/mpio.h	41;"	d
MPIO_USES_MPI_REQUEST	/usr/local/include/mpio.h	38;"	d
MPIO_Wait	/usr/local/include/mpio.h	40;"	d
MPIR_ARGUNUSED	/usr/local/include/mpicxx.h	24;"	d
MPIR_ARGUNUSED	/usr/local/include/mpicxx.h	26;"	d
MPIR_Combiner_enum	/usr/local/include/mpi.h	/^enum MPIR_Combiner_enum {$/;"	g
MPIR_DUMMY_SEEK_COMMA_VAL	/usr/local/include/mpicxx.h	/^    MPIR_DUMMY_SEEK_COMMA_VAL = -1  \/\/ permits cleaner comma logic$/;"	e	enum:MPIR_Dummy_seek_type
MPIR_Dummy_seek_type	/usr/local/include/mpicxx.h	/^enum MPIR_Dummy_seek_type {$/;"	g
MPIR_ERRORS_THROW_EXCEPTIONS	/usr/local/include/mpi.h	288;"	d
MPIR_LOCK_SHARED	/usr/local/include/mpicxx.h	/^    , MPIR_LOCK_SHARED = LOCK_SHARED$/;"	e	enum:MPIR_Dummy_seek_type
MPIR_SEEK_CUR	/usr/local/include/mpicxx.h	/^    , MPIR_SEEK_CUR = SEEK_CUR$/;"	e	enum:MPIR_Dummy_seek_type
MPIR_SEEK_END	/usr/local/include/mpicxx.h	/^    , MPIR_SEEK_END = SEEK_END$/;"	e	enum:MPIR_Dummy_seek_type
MPIR_SEEK_SET	/usr/local/include/mpicxx.h	/^    , MPIR_SEEK_SET = SEEK_SET$/;"	e	enum:MPIR_Dummy_seek_type
MPIR_T_PVAR_CLASS_FIRST	/usr/local/include/mpi.h	/^    MPIR_T_PVAR_CLASS_FIRST = 240,$/;"	e	enum:MPIR_T_pvar_class_t
MPIR_T_PVAR_CLASS_LAST	/usr/local/include/mpi.h	/^    MPIR_T_PVAR_CLASS_LAST,$/;"	e	enum:MPIR_T_pvar_class_t
MPIR_T_PVAR_CLASS_NUMBER	/usr/local/include/mpi.h	/^    MPIR_T_PVAR_CLASS_NUMBER = MPIR_T_PVAR_CLASS_LAST - MPIR_T_PVAR_CLASS_FIRST$/;"	e	enum:MPIR_T_pvar_class_t
MPIR_T_bind_t	/usr/local/include/mpi.h	/^typedef enum MPIR_T_bind_t {$/;"	g
MPIR_T_bind_t	/usr/local/include/mpi.h	/^} MPIR_T_bind_t;$/;"	t	typeref:enum:MPIR_T_bind_t
MPIR_T_pvar_class_t	/usr/local/include/mpi.h	/^typedef enum MPIR_T_pvar_class_t {$/;"	g
MPIR_T_pvar_class_t	/usr/local/include/mpi.h	/^} MPIR_T_pvar_class_t;$/;"	t	typeref:enum:MPIR_T_pvar_class_t
MPIR_T_scope_t	/usr/local/include/mpi.h	/^typedef enum MPIR_T_scope_t {$/;"	g
MPIR_T_scope_t	/usr/local/include/mpi.h	/^} MPIR_T_scope_t;$/;"	t	typeref:enum:MPIR_T_scope_t
MPIR_T_verbosity_t	/usr/local/include/mpi.h	/^typedef enum MPIR_T_verbosity_t {$/;"	g
MPIR_T_verbosity_t	/usr/local/include/mpi.h	/^} MPIR_T_verbosity_t;$/;"	t	typeref:enum:MPIR_T_verbosity_t
MPIR_Topo_type	/usr/local/include/mpi.h	/^typedef enum MPIR_Topo_type { MPI_GRAPH=1, MPI_CART=2, MPI_DIST_GRAPH=3 } MPIR_Topo_type;$/;"	g
MPIR_Topo_type	/usr/local/include/mpi.h	/^typedef enum MPIR_Topo_type { MPI_GRAPH=1, MPI_CART=2, MPI_DIST_GRAPH=3 } MPIR_Topo_type;$/;"	t	typeref:enum:MPIR_Topo_type
MPIR_Win_flavor	/usr/local/include/mpi.h	/^typedef enum MPIR_Win_flavor {$/;"	g
MPIR_Win_flavor_t	/usr/local/include/mpi.h	/^} MPIR_Win_flavor_t;$/;"	t	typeref:enum:MPIR_Win_flavor
MPIR_Win_model	/usr/local/include/mpi.h	/^typedef enum MPIR_Win_model {$/;"	g
MPIR_Win_model_t	/usr/local/include/mpi.h	/^} MPIR_Win_model_t;$/;"	t	typeref:enum:MPIR_Win_model
MPIU_DLL_SPEC	/usr/local/include/mpi.h	127;"	d
MPIX_ALLREDUCE_ENQUEUE_C_T	/usr/local/include/mpi_proto.h	/^    MPIX_ALLREDUCE_ENQUEUE_C_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_ALLREDUCE_ENQUEUE_T	/usr/local/include/mpi_proto.h	/^    MPIX_ALLREDUCE_ENQUEUE_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_CALLOBJ	/usr/local/include/mpicxx.h	73;"	d
MPIX_CALLREF	/usr/local/include/mpicxx.h	71;"	d
MPIX_CALLWORLD	/usr/local/include/mpicxx.h	75;"	d
MPIX_COMM_AGREE_T	/usr/local/include/mpi_proto.h	/^    MPIX_COMM_AGREE_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_COMM_FAILURE_ACK_T	/usr/local/include/mpi_proto.h	/^    MPIX_COMM_FAILURE_ACK_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_COMM_FAILURE_GET_ACKED_T	/usr/local/include/mpi_proto.h	/^    MPIX_COMM_FAILURE_GET_ACKED_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_COMM_GET_FAILED_T	/usr/local/include/mpi_proto.h	/^    MPIX_COMM_GET_FAILED_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_COMM_GET_STREAM_T	/usr/local/include/mpi_proto.h	/^    MPIX_COMM_GET_STREAM_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_COMM_REVOKE_T	/usr/local/include/mpi_proto.h	/^    MPIX_COMM_REVOKE_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_COMM_SHRINK_T	/usr/local/include/mpi_proto.h	/^    MPIX_COMM_SHRINK_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_COMM_TEST_THREADCOMM_T	/usr/local/include/mpi_proto.h	/^    MPIX_COMM_TEST_THREADCOMM_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_COMM_TYPE_NEIGHBORHOOD	/usr/local/include/mpi.h	582;"	d
MPIX_C_FLOAT16	/usr/local/include/mpi.h	220;"	d
MPIX_EQUAL	/usr/local/include/mpi.h	275;"	d
MPIX_ERR_EAGAIN	/usr/local/include/mpi.h	715;"	d
MPIX_ERR_NOREQ	/usr/local/include/mpi.h	716;"	d
MPIX_ERR_PROC_FAILED	/usr/local/include/mpi.h	711;"	d
MPIX_ERR_PROC_FAILED_PENDING	/usr/local/include/mpi.h	712;"	d
MPIX_ERR_REVOKED	/usr/local/include/mpi.h	714;"	d
MPIX_ERR_STREAM	/usr/local/include/mpi.h	717;"	d
MPIX_ERR_TIMEOUT	/usr/local/include/mpi.h	718;"	d
MPIX_GPU_QUERY_SUPPORT_T	/usr/local/include/mpi_proto.h	/^    MPIX_GPU_QUERY_SUPPORT_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_GPU_SUPPORT_CUDA	/usr/local/include/mpi.h	725;"	d
MPIX_GPU_SUPPORT_HIP	/usr/local/include/mpi.h	727;"	d
MPIX_GPU_SUPPORT_ZE	/usr/local/include/mpi.h	726;"	d
MPIX_GREQUEST_CLASS_ALLOCATE_T	/usr/local/include/mpi_proto.h	/^    MPIX_GREQUEST_CLASS_ALLOCATE_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_GREQUEST_CLASS_CREATE_T	/usr/local/include/mpi_proto.h	/^    MPIX_GREQUEST_CLASS_CREATE_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_GREQUEST_START_T	/usr/local/include/mpi_proto.h	/^    MPIX_GREQUEST_START_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_Grequest_class	/usr/local/include/mpi.h	/^typedef int MPIX_Grequest_class;$/;"	t
MPIX_Grequest_poll_function	/usr/local/include/mpi.h	/^typedef int (MPIX_Grequest_poll_function)(void *, MPI_Status *);$/;"	t
MPIX_Grequest_wait_function	/usr/local/include/mpi.h	/^typedef int (MPIX_Grequest_wait_function)(int, void **, double, MPI_Status *);$/;"	t
MPIX_INFO_SET_HEX_T	/usr/local/include/mpi_proto.h	/^    MPIX_INFO_SET_HEX_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_IRECV_ENQUEUE_C_T	/usr/local/include/mpi_proto.h	/^    MPIX_IRECV_ENQUEUE_C_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_IRECV_ENQUEUE_T	/usr/local/include/mpi_proto.h	/^    MPIX_IRECV_ENQUEUE_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_ISEND_ENQUEUE_C_T	/usr/local/include/mpi_proto.h	/^    MPIX_ISEND_ENQUEUE_C_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_ISEND_ENQUEUE_T	/usr/local/include/mpi_proto.h	/^    MPIX_ISEND_ENQUEUE_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_Iov	/usr/local/include/mpi.h	/^typedef struct MPIX_Iov {$/;"	s
MPIX_Iov	/usr/local/include/mpi.h	/^} MPIX_Iov;$/;"	t	typeref:struct:MPIX_Iov
MPIX_QUERY_CUDA_SUPPORT_T	/usr/local/include/mpi_proto.h	/^    MPIX_QUERY_CUDA_SUPPORT_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_QUERY_HIP_SUPPORT_T	/usr/local/include/mpi_proto.h	/^    MPIX_QUERY_HIP_SUPPORT_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_QUERY_ZE_SUPPORT_T	/usr/local/include/mpi_proto.h	/^    MPIX_QUERY_ZE_SUPPORT_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_RECV_ENQUEUE_C_T	/usr/local/include/mpi_proto.h	/^    MPIX_RECV_ENQUEUE_C_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_RECV_ENQUEUE_T	/usr/local/include/mpi_proto.h	/^    MPIX_RECV_ENQUEUE_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_SEND_ENQUEUE_C_T	/usr/local/include/mpi_proto.h	/^    MPIX_SEND_ENQUEUE_C_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_SEND_ENQUEUE_T	/usr/local/include/mpi_proto.h	/^    MPIX_SEND_ENQUEUE_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_START_PROGRESS_THREAD_T	/usr/local/include/mpi_proto.h	/^    MPIX_START_PROGRESS_THREAD_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_STOP_PROGRESS_THREAD_T	/usr/local/include/mpi_proto.h	/^    MPIX_STOP_PROGRESS_THREAD_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_STREAM_COMM_CREATE_MULTIPLEX_T	/usr/local/include/mpi_proto.h	/^    MPIX_STREAM_COMM_CREATE_MULTIPLEX_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_STREAM_COMM_CREATE_T	/usr/local/include/mpi_proto.h	/^    MPIX_STREAM_COMM_CREATE_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_STREAM_CREATE_T	/usr/local/include/mpi_proto.h	/^    MPIX_STREAM_CREATE_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_STREAM_FREE_T	/usr/local/include/mpi_proto.h	/^    MPIX_STREAM_FREE_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_STREAM_IRECV_C_T	/usr/local/include/mpi_proto.h	/^    MPIX_STREAM_IRECV_C_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_STREAM_IRECV_T	/usr/local/include/mpi_proto.h	/^    MPIX_STREAM_IRECV_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_STREAM_ISEND_C_T	/usr/local/include/mpi_proto.h	/^    MPIX_STREAM_ISEND_C_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_STREAM_ISEND_T	/usr/local/include/mpi_proto.h	/^    MPIX_STREAM_ISEND_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_STREAM_NULL	/usr/local/include/mpi.h	138;"	d
MPIX_STREAM_PROGRESS_T	/usr/local/include/mpi_proto.h	/^    MPIX_STREAM_PROGRESS_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_STREAM_RECV_C_T	/usr/local/include/mpi_proto.h	/^    MPIX_STREAM_RECV_C_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_STREAM_RECV_T	/usr/local/include/mpi_proto.h	/^    MPIX_STREAM_RECV_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_STREAM_SEND_C_T	/usr/local/include/mpi_proto.h	/^    MPIX_STREAM_SEND_C_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_STREAM_SEND_T	/usr/local/include/mpi_proto.h	/^    MPIX_STREAM_SEND_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_Stream	/usr/local/include/mpi.h	/^typedef int MPIX_Stream;$/;"	t
MPIX_THREADCOMM_FINISH_T	/usr/local/include/mpi_proto.h	/^    MPIX_THREADCOMM_FINISH_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_THREADCOMM_FREE_T	/usr/local/include/mpi_proto.h	/^    MPIX_THREADCOMM_FREE_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_THREADCOMM_INIT_T	/usr/local/include/mpi_proto.h	/^    MPIX_THREADCOMM_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_THREADCOMM_START_T	/usr/local/include/mpi_proto.h	/^    MPIX_THREADCOMM_START_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_TYPE_IOV_LEN_T	/usr/local/include/mpi_proto.h	/^    MPIX_TYPE_IOV_LEN_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_TYPE_IOV_T	/usr/local/include/mpi_proto.h	/^    MPIX_TYPE_IOV_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_WAITALL_ENQUEUE_T	/usr/local/include/mpi_proto.h	/^    MPIX_WAITALL_ENQUEUE_T,$/;"	e	enum:QMPI_Functions_enum
MPIX_WAIT_ENQUEUE_T	/usr/local/include/mpi_proto.h	/^    MPIX_WAIT_ENQUEUE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_2DOUBLE_PRECISION	/usr/local/include/mpi.h	187;"	d
MPI_2DOUBLE_PRECISION	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_2DOUBLE_PRECISION <a name="MPI_2DOUBLE_PRECISION"><\/a><\/B> <DD> <tt>DOUBLE PRECISION, DOUBLE PRECISION$/;"	a
MPI_2INT	/usr/local/include/mpi.h	175;"	d
MPI_2INT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_2INT       <a name="MPI_2INT"><\/a><\/B> <DD> <tt>struct { int, int }$/;"	a
MPI_2INTEGER	/usr/local/include/mpi.h	185;"	d
MPI_2INTEGER	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_2INTEGER <a name="MPI_2INTEGER"><\/a><\/B> <DD> <tt>INTEGER,INTEGER$/;"	a
MPI_2REAL	/usr/local/include/mpi.h	186;"	d
MPI_2REAL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_2REAL    <a name="MPI_2REAL"><\/a><\/B> <DD> <tt>REAL, REAL$/;"	a
MPI_ABORT_T	/usr/local/include/mpi_proto.h	/^    MPI_ABORT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ACCUMULATE_C_T	/usr/local/include/mpi_proto.h	/^    MPI_ACCUMULATE_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ACCUMULATE_T	/usr/local/include/mpi_proto.h	/^    MPI_ACCUMULATE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ADDRESS_T	/usr/local/include/mpi_proto.h	/^    MPI_ADDRESS_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ADD_ERROR_CLASS_T	/usr/local/include/mpi_proto.h	/^    MPI_ADD_ERROR_CLASS_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ADD_ERROR_CODE_T	/usr/local/include/mpi_proto.h	/^    MPI_ADD_ERROR_CODE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ADD_ERROR_STRING_T	/usr/local/include/mpi_proto.h	/^    MPI_ADD_ERROR_STRING_T,$/;"	e	enum:QMPI_Functions_enum
MPI_AINT	/usr/local/include/mpi.h	223;"	d
MPI_AINT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_AINT <a name="MPI_AINT"><\/a><\/B> <DD> Datatype for an <tt>MPI_Aint$/;"	a
MPI_AINT_ADD_T	/usr/local/include/mpi_proto.h	/^    MPI_AINT_ADD_T,$/;"	e	enum:QMPI_Functions_enum
MPI_AINT_DIFF_T	/usr/local/include/mpi_proto.h	/^    MPI_AINT_DIFF_T,$/;"	e	enum:QMPI_Functions_enum
MPI_AINT_FMT_DEC_SPEC	/usr/local/include/mpi.h	465;"	d
MPI_AINT_FMT_HEX_SPEC	/usr/local/include/mpi.h	466;"	d
MPI_ALLGATHERV_C_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLGATHERV_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ALLGATHERV_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLGATHERV_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ALLGATHERV_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLGATHERV_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ALLGATHERV_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLGATHERV_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ALLGATHER_C_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLGATHER_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ALLGATHER_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLGATHER_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ALLGATHER_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLGATHER_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ALLGATHER_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLGATHER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ALLOC_MEM_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLOC_MEM_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ALLREDUCE_C_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLREDUCE_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ALLREDUCE_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLREDUCE_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ALLREDUCE_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLREDUCE_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ALLREDUCE_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLREDUCE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ALLTOALLV_C_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLTOALLV_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ALLTOALLV_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLTOALLV_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ALLTOALLV_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLTOALLV_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ALLTOALLV_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLTOALLV_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ALLTOALLW_C_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLTOALLW_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ALLTOALLW_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLTOALLW_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ALLTOALLW_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLTOALLW_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ALLTOALLW_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLTOALLW_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ALLTOALL_C_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLTOALL_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ALLTOALL_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLTOALL_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ALLTOALL_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLTOALL_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ALLTOALL_T	/usr/local/include/mpi_proto.h	/^    MPI_ALLTOALL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ANY_SOURCE	/usr/local/include/mpi.h	503;"	d
MPI_ANY_SOURCE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ANY_SOURCE                 <a name="MPI_ANY_SOURCE"><\/a><\/B> <DD> In a receive, accept a message from anyone.$/;"	a
MPI_ANY_TAG	/usr/local/include/mpi.h	505;"	d
MPI_ANY_TAG	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ANY_TAG                    <a name="MPI_ANY_TAG"><\/a><\/B> <DD> In a receive, accept a message with any tag value.$/;"	a
MPI_APPNUM	/usr/local/include/mpi.h	329;"	d
MPI_APPNUM	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_APPNUM <a name="MPI_APPNUM"><\/a><\/B> <DD> Application number, starting from 0.  See the standard for$/;"	a
MPI_ARGVS_NULL	/usr/local/include/mpi.h	520;"	d
MPI_ARGVS_NULL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ARGVS_NULL         <a name="MPI_ARGVS_NULL"><\/a><\/B> <DD> Empty ARGV array for spawn-multiple command$/;"	a
MPI_ARGV_NULL	/usr/local/include/mpi.h	519;"	d
MPI_ARGV_NULL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ARGV_NULL          <a name="MPI_ARGV_NULL"><\/a><\/B> <DD> Empty ARGV value for spawn commands$/;"	a
MPI_ATTR_DELETE_T	/usr/local/include/mpi_proto.h	/^    MPI_ATTR_DELETE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ATTR_GET_T	/usr/local/include/mpi_proto.h	/^    MPI_ATTR_GET_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ATTR_PUT_T	/usr/local/include/mpi_proto.h	/^    MPI_ATTR_PUT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_Aint	/usr/local/include/mpi.h	/^static const MPI_Datatype mpich_mpi_aint   MPICH_ATTR_TYPE_TAG(MPI_Aint)   = MPI_AINT;$/;"	v
MPI_Aint	/usr/local/include/mpi.h	/^typedef long MPI_Aint;$/;"	t
MPI_Aint	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_Aint   <a name="MPI_Aint"><\/a><\/B> <DD> C type that holds any valid address.$/;"	a
MPI_BAND	/usr/local/include/mpi.h	266;"	d
MPI_BAND	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_BAND <a name="MPI_BAND"><\/a><\/B> <DD> return the bitwise and$/;"	a
MPI_BARRIER_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_BARRIER_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_BARRIER_T	/usr/local/include/mpi_proto.h	/^    MPI_BARRIER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_BCAST_C_T	/usr/local/include/mpi_proto.h	/^    MPI_BCAST_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_BCAST_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_BCAST_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_BCAST_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_BCAST_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_BCAST_T	/usr/local/include/mpi_proto.h	/^    MPI_BCAST_T,$/;"	e	enum:QMPI_Functions_enum
MPI_BOR	/usr/local/include/mpi.h	268;"	d
MPI_BOR	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_BOR <a name="MPI_BOR"><\/a><\/B> <DD> return the bitwise of$/;"	a
MPI_BOTTOM	/usr/local/include/mpi.h	507;"	d
MPI_BOTTOM	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_BOTTOM                     <a name="MPI_BOTTOM"><\/a><\/B> <DD> May be used to indicate the bottom of the address space$/;"	a
MPI_BSEND_C_T	/usr/local/include/mpi_proto.h	/^    MPI_BSEND_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_BSEND_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_BSEND_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_BSEND_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_BSEND_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_BSEND_OVERHEAD	/usr/local/include/mpi.h	494;"	d
MPI_BSEND_OVERHEAD	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_BSEND_OVERHEAD             <a name="MPI_BSEND_OVERHEAD"><\/a><\/B> <DD> Add this to the size of a <tt>MPI_BSEND$/;"	a
MPI_BSEND_T	/usr/local/include/mpi_proto.h	/^    MPI_BSEND_T,$/;"	e	enum:QMPI_Functions_enum
MPI_BUFFER_ATTACH_C_T	/usr/local/include/mpi_proto.h	/^    MPI_BUFFER_ATTACH_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_BUFFER_ATTACH_T	/usr/local/include/mpi_proto.h	/^    MPI_BUFFER_ATTACH_T,$/;"	e	enum:QMPI_Functions_enum
MPI_BUFFER_AUTOMATIC	/usr/local/include/mpi.h	509;"	d
MPI_BUFFER_AUTOMATIC	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_BUFFER_AUTOMATIC           <a name="MPI_BUFFER_AUTOMATIC"><\/a><\/B> <DD> Use automatic (unlimited) buffering in buffered send$/;"	a
MPI_BUFFER_DETACH_C_T	/usr/local/include/mpi_proto.h	/^    MPI_BUFFER_DETACH_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_BUFFER_DETACH_T	/usr/local/include/mpi_proto.h	/^    MPI_BUFFER_DETACH_T,$/;"	e	enum:QMPI_Functions_enum
MPI_BUFFER_FLUSH_T	/usr/local/include/mpi_proto.h	/^    MPI_BUFFER_FLUSH_T,$/;"	e	enum:QMPI_Functions_enum
MPI_BUFFER_IFLUSH_T	/usr/local/include/mpi_proto.h	/^    MPI_BUFFER_IFLUSH_T,$/;"	e	enum:QMPI_Functions_enum
MPI_BXOR	/usr/local/include/mpi.h	270;"	d
MPI_BXOR	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_BXOR <a name="MPI_BXOR"><\/a><\/B> <DD> return the bitwise exclusive or$/;"	a
MPI_BYTE	/usr/local/include/mpi.h	144;"	d
MPI_BYTE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_BYTE <a name="MPI_BYTE"><\/a><\/B> <DD> See standard; like unsigned char$/;"	a
MPI_CANCEL_T	/usr/local/include/mpi_proto.h	/^    MPI_CANCEL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_CART	/usr/local/include/mpi.h	/^typedef enum MPIR_Topo_type { MPI_GRAPH=1, MPI_CART=2, MPI_DIST_GRAPH=3 } MPIR_Topo_type;$/;"	e	enum:MPIR_Topo_type
MPI_CART	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_CART       <a name="MPI_CART"><\/a><\/B> <DD> Cartesian grid$/;"	a
MPI_CARTDIM_GET_T	/usr/local/include/mpi_proto.h	/^    MPI_CARTDIM_GET_T,$/;"	e	enum:QMPI_Functions_enum
MPI_CART_COORDS_T	/usr/local/include/mpi_proto.h	/^    MPI_CART_COORDS_T,$/;"	e	enum:QMPI_Functions_enum
MPI_CART_CREATE_T	/usr/local/include/mpi_proto.h	/^    MPI_CART_CREATE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_CART_GET_T	/usr/local/include/mpi_proto.h	/^    MPI_CART_GET_T,$/;"	e	enum:QMPI_Functions_enum
MPI_CART_MAP_T	/usr/local/include/mpi_proto.h	/^    MPI_CART_MAP_T,$/;"	e	enum:QMPI_Functions_enum
MPI_CART_RANK_T	/usr/local/include/mpi_proto.h	/^    MPI_CART_RANK_T,$/;"	e	enum:QMPI_Functions_enum
MPI_CART_SHIFT_T	/usr/local/include/mpi_proto.h	/^    MPI_CART_SHIFT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_CART_SUB_T	/usr/local/include/mpi_proto.h	/^    MPI_CART_SUB_T,$/;"	e	enum:QMPI_Functions_enum
MPI_CHAR	/usr/local/include/mpi.h	141;"	d
MPI_CHAR	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_CHAR <a name="MPI_CHAR"><\/a><\/B> <DD> char$/;"	a
MPI_CHARACTER	/usr/local/include/mpi.h	188;"	d
MPI_CLOSE_PORT_T	/usr/local/include/mpi_proto.h	/^    MPI_CLOSE_PORT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMBINER_CONTIGUOUS	/usr/local/include/mpi.h	/^    MPI_COMBINER_CONTIGUOUS       = 3,$/;"	e	enum:MPIR_Combiner_enum
MPI_COMBINER_CONTIGUOUS	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMBINER_CONTIGUOUS       <a name="MPI_COMBINER_CONTIGUOUS"><\/a><\/B> <DD> MPI_TYPE_CONTIGUOUS$/;"	a
MPI_COMBINER_DARRAY	/usr/local/include/mpi.h	/^    MPI_COMBINER_DARRAY           = 14,$/;"	e	enum:MPIR_Combiner_enum
MPI_COMBINER_DARRAY	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMBINER_DARRAY           <a name="MPI_COMBINER_DARRAY"><\/a><\/B> <DD> MPI_TYPE_CREATE_DARRAY$/;"	a
MPI_COMBINER_DUP	/usr/local/include/mpi.h	/^    MPI_COMBINER_DUP              = 2,$/;"	e	enum:MPIR_Combiner_enum
MPI_COMBINER_DUP	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMBINER_DUP              <a name="MPI_COMBINER_DUP"><\/a><\/B> <DD> MPI_TYPE_DUP$/;"	a
MPI_COMBINER_F90_COMPLEX	/usr/local/include/mpi.h	/^    MPI_COMBINER_F90_COMPLEX      = 16,$/;"	e	enum:MPIR_Combiner_enum
MPI_COMBINER_F90_COMPLEX	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMBINER_F90_COMPLEX      <a name="MPI_COMBINER_F90_COMPLEX"><\/a><\/B> <DD> MPI_TYPE_CREATE_F90_COMPLEX$/;"	a
MPI_COMBINER_F90_INTEGER	/usr/local/include/mpi.h	/^    MPI_COMBINER_F90_INTEGER      = 17,$/;"	e	enum:MPIR_Combiner_enum
MPI_COMBINER_F90_INTEGER	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMBINER_F90_INTEGER      <a name="MPI_COMBINER_F90_INTEGER"><\/a><\/B> <DD> MPI_TYPE_CREATE_F90_INTEGER$/;"	a
MPI_COMBINER_F90_REAL	/usr/local/include/mpi.h	/^    MPI_COMBINER_F90_REAL         = 15,$/;"	e	enum:MPIR_Combiner_enum
MPI_COMBINER_F90_REAL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMBINER_F90_REAL         <a name="MPI_COMBINER_F90_REAL"><\/a><\/B> <DD> MPI_TYPE_CREATE_F90_REAL$/;"	a
MPI_COMBINER_HINDEXED	/usr/local/include/mpi.h	/^    MPI_COMBINER_HINDEXED         = 9,$/;"	e	enum:MPIR_Combiner_enum
MPI_COMBINER_HINDEXED	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMBINER_HINDEXED         <a name="MPI_COMBINER_HINDEXED"><\/a><\/B> <DD> MPI_TYPE_CREATE_HINDEXED$/;"	a
MPI_COMBINER_HINDEXED_BLOCK	/usr/local/include/mpi.h	/^    MPI_COMBINER_HINDEXED_BLOCK   = 19,$/;"	e	enum:MPIR_Combiner_enum
MPI_COMBINER_HINDEXED_BLOCK	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMBINER_HINDEXED_BLOCK   <a name="MPI_COMBINER_HINDEXED_BLOCK"><\/a><\/B> <DD> MPI_TYPE_CREATE_HINDEXED_BLOCK$/;"	a
MPI_COMBINER_HINDEXED_INTEGER	/usr/local/include/mpi.h	/^    MPI_COMBINER_HINDEXED_INTEGER = 8,$/;"	e	enum:MPIR_Combiner_enum
MPI_COMBINER_HINDEXED_INTEGER	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMBINER_HINDEXED_INTEGER <a name="MPI_COMBINER_HINDEXED_INTEGER"><\/a><\/B> <DD> Removed in MPI-3$/;"	a
MPI_COMBINER_HVECTOR	/usr/local/include/mpi.h	/^    MPI_COMBINER_HVECTOR          = 6,$/;"	e	enum:MPIR_Combiner_enum
MPI_COMBINER_HVECTOR	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMBINER_HVECTOR          <a name="MPI_COMBINER_HVECTOR"><\/a><\/B> <DD> MPI_TYPE_CREATE_HVECTOR$/;"	a
MPI_COMBINER_HVECTOR_INTEGER	/usr/local/include/mpi.h	/^    MPI_COMBINER_HVECTOR_INTEGER  = 5,$/;"	e	enum:MPIR_Combiner_enum
MPI_COMBINER_HVECTOR_INTEGER	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMBINER_HVECTOR_INTEGER  <a name="MPI_COMBINER_HVECTOR_INTEGER"><\/a><\/B> <DD> Removed in MPI-3$/;"	a
MPI_COMBINER_INDEXED	/usr/local/include/mpi.h	/^    MPI_COMBINER_INDEXED          = 7,$/;"	e	enum:MPIR_Combiner_enum
MPI_COMBINER_INDEXED	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMBINER_INDEXED          <a name="MPI_COMBINER_INDEXED"><\/a><\/B> <DD> MPI_TYPE_INDEXED$/;"	a
MPI_COMBINER_INDEXED_BLOCK	/usr/local/include/mpi.h	/^    MPI_COMBINER_INDEXED_BLOCK    = 10,$/;"	e	enum:MPIR_Combiner_enum
MPI_COMBINER_INDEXED_BLOCK	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMBINER_INDEXED_BLOCK    <a name="MPI_COMBINER_INDEXED_BLOCK"><\/a><\/B> <DD> MPI_TYPE_CREATE_INDEXED_BLOCK$/;"	a
MPI_COMBINER_NAMED	/usr/local/include/mpi.h	/^    MPI_COMBINER_NAMED            = 1,$/;"	e	enum:MPIR_Combiner_enum
MPI_COMBINER_NAMED	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMBINER_NAMED            <a name="MPI_COMBINER_NAMED"><\/a><\/B> <DD> a named predefined datatype$/;"	a
MPI_COMBINER_RESIZED	/usr/local/include/mpi.h	/^    MPI_COMBINER_RESIZED          = 18,$/;"	e	enum:MPIR_Combiner_enum
MPI_COMBINER_RESIZED	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMBINER_RESIZED          <a name="MPI_COMBINER_RESIZED"><\/a><\/B> <DD> MPI_TYPE_CREATE_RESIZED$/;"	a
MPI_COMBINER_STRUCT	/usr/local/include/mpi.h	/^    MPI_COMBINER_STRUCT           = 12,$/;"	e	enum:MPIR_Combiner_enum
MPI_COMBINER_STRUCT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMBINER_STRUCT           <a name="MPI_COMBINER_STRUCT"><\/a><\/B> <DD> MPI_TYPE_CREATE_STRUCT$/;"	a
MPI_COMBINER_STRUCT_INTEGER	/usr/local/include/mpi.h	/^    MPI_COMBINER_STRUCT_INTEGER   = 11,$/;"	e	enum:MPIR_Combiner_enum
MPI_COMBINER_STRUCT_INTEGER	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMBINER_STRUCT_INTEGER   <a name="MPI_COMBINER_STRUCT_INTEGER"><\/a><\/B> <DD> Removed in MPI-3$/;"	a
MPI_COMBINER_SUBARRAY	/usr/local/include/mpi.h	/^    MPI_COMBINER_SUBARRAY         = 13,$/;"	e	enum:MPIR_Combiner_enum
MPI_COMBINER_SUBARRAY	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMBINER_SUBARRAY         <a name="MPI_COMBINER_SUBARRAY"><\/a><\/B> <DD> MPI_TYPE_CREATE_SUBARRAY$/;"	a
MPI_COMBINER_VALUE_INDEX	/usr/local/include/mpi.h	/^    MPI_COMBINER_VALUE_INDEX      = 20$/;"	e	enum:MPIR_Combiner_enum
MPI_COMBINER_VECTOR	/usr/local/include/mpi.h	/^    MPI_COMBINER_VECTOR           = 4,$/;"	e	enum:MPIR_Combiner_enum
MPI_COMBINER_VECTOR	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMBINER_VECTOR           <a name="MPI_COMBINER_VECTOR"><\/a><\/B> <DD> MPI_TYPE_VECTOR$/;"	a
MPI_COMM_ACCEPT_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_ACCEPT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_ATTACH_BUFFER_C_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_ATTACH_BUFFER_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_ATTACH_BUFFER_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_ATTACH_BUFFER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_C2F_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_C2F_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_CALL_ERRHANDLER_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_CALL_ERRHANDLER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_COMPARE_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_COMPARE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_CONNECT_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_CONNECT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_CREATE_ERRHANDLER_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_CREATE_ERRHANDLER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_CREATE_FROM_GROUP_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_CREATE_FROM_GROUP_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_CREATE_GROUP_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_CREATE_GROUP_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_CREATE_KEYVAL_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_CREATE_KEYVAL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_CREATE_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_CREATE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_DELETE_ATTR_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_DELETE_ATTR_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_DETACH_BUFFER_C_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_DETACH_BUFFER_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_DETACH_BUFFER_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_DETACH_BUFFER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_DISCONNECT_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_DISCONNECT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_DUP_FN	/usr/local/include/mpi.h	796;"	d
MPI_COMM_DUP_FN	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMM_DUP_FN  <a name="MPI_COMM_DUP_FN"><\/a><\/B> <DD> Predefined attribute duplicate function for communicators$/;"	a
MPI_COMM_DUP_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_DUP_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_DUP_WITH_INFO_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_DUP_WITH_INFO_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_F2C_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_F2C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_FLUSH_BUFFER_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_FLUSH_BUFFER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_FREE_KEYVAL_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_FREE_KEYVAL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_FREE_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_FREE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_GET_ATTR_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_GET_ATTR_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_GET_ERRHANDLER_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_GET_ERRHANDLER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_GET_INFO_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_GET_INFO_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_GET_NAME_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_GET_NAME_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_GET_PARENT_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_GET_PARENT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_GROUP_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_GROUP_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_IDUP_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_IDUP_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_IDUP_WITH_INFO_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_IDUP_WITH_INFO_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_IFLUSH_BUFFER_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_IFLUSH_BUFFER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_JOIN_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_JOIN_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_NULL	/usr/local/include/mpi.h	130;"	d
MPI_COMM_NULL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMM_NULL          <a name="MPI_COMM_NULL"><\/a><\/B> <DD> Null communicator$/;"	a
MPI_COMM_NULL_COPY_FN	/usr/local/include/mpi.h	794;"	d
MPI_COMM_NULL_COPY_FN	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMM_NULL_COPY_FN <a name="MPI_COMM_NULL_COPY_FN"><\/a><\/B> <DD> Predefined attribute copy function for communicators$/;"	a
MPI_COMM_NULL_DELETE_FN	/usr/local/include/mpi.h	795;"	d
MPI_COMM_NULL_DELETE_FN	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMM_NULL_DELETE_FN <a name="MPI_COMM_NULL_DELETE_FN"><\/a><\/B> <DD> Predefined attribute delete function for communicators$/;"	a
MPI_COMM_RANK_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_RANK_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_REMOTE_GROUP_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_REMOTE_GROUP_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_REMOTE_SIZE_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_REMOTE_SIZE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_SELF	/usr/local/include/mpi.h	236;"	d
MPI_COMM_SELF	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMM_SELF <a name="MPI_COMM_SELF"><\/a><\/B> <DD> Contains only the calling process$/;"	a
MPI_COMM_SET_ATTR_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_SET_ATTR_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_SET_ERRHANDLER_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_SET_ERRHANDLER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_SET_INFO_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_SET_INFO_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_SET_NAME_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_SET_NAME_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_SIZE_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_SIZE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_SPAWN_MULTIPLE_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_SPAWN_MULTIPLE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_SPAWN_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_SPAWN_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_SPLIT_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_SPLIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_SPLIT_TYPE_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_SPLIT_TYPE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_TEST_INTER_T	/usr/local/include/mpi_proto.h	/^    MPI_COMM_TEST_INTER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMM_TYPE_HW_GUIDED	/usr/local/include/mpi.h	577;"	d
MPI_COMM_TYPE_HW_UNGUIDED	/usr/local/include/mpi.h	578;"	d
MPI_COMM_TYPE_RESOURCE_GUIDED	/usr/local/include/mpi.h	579;"	d
MPI_COMM_TYPE_SHARED	/usr/local/include/mpi.h	576;"	d
MPI_COMM_TYPE_SHARED	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMM_TYPE_SHARED <a name="MPI_COMM_TYPE_SHARED"><\/a><\/B> <DD> All processes that can share memory are grouped into$/;"	a
MPI_COMM_WORLD	/usr/local/include/mpi.h	235;"	d
MPI_COMM_WORLD	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMM_WORLD <a name="MPI_COMM_WORLD"><\/a><\/B> <DD> Contains all of the processes$/;"	a
MPI_COMPARE_AND_SWAP_T	/usr/local/include/mpi_proto.h	/^    MPI_COMPARE_AND_SWAP_T,$/;"	e	enum:QMPI_Functions_enum
MPI_COMPLEX	/usr/local/include/mpi.h	179;"	d
MPI_COMPLEX	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COMPLEX <a name="MPI_COMPLEX"><\/a><\/B> <DD> <tt>COMPLEX$/;"	a
MPI_COMPLEX16	/usr/local/include/mpi.h	195;"	d
MPI_COMPLEX32	/usr/local/include/mpi.h	196;"	d
MPI_COMPLEX8	/usr/local/include/mpi.h	194;"	d
MPI_CONGRUENT	/usr/local/include/mpi.h	524;"	d
MPI_CONGRUENT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_CONGRUENT  <a name="MPI_CONGRUENT"><\/a><\/B> <DD> (only for <tt>MPI_COMM_COMPARE<\/tt>) The groups are identical$/;"	a
MPI_CONVERSION_FN_NULL	/usr/local/include/mpi.h	804;"	d
MPI_CONVERSION_FN_NULL_C	/usr/local/include/mpi.h	805;"	d
MPI_COUNT	/usr/local/include/mpi.h	225;"	d
MPI_COUNT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_COUNT <a name="MPI_COUNT"><\/a><\/B> <DD> Datatype for an <tt>MPI_Count$/;"	a
MPI_CXX_BOOL	/usr/local/include/mpi.h	228;"	d
MPI_CXX_DOUBLE_COMPLEX	/usr/local/include/mpi.h	230;"	d
MPI_CXX_FLOAT_COMPLEX	/usr/local/include/mpi.h	229;"	d
MPI_CXX_LONG_DOUBLE_COMPLEX	/usr/local/include/mpi.h	231;"	d
MPI_C_BOOL	/usr/local/include/mpi.h	214;"	d
MPI_C_BOOL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_C_BOOL <a name="MPI_C_BOOL"><\/a><\/B> <DD> _Bool$/;"	a
MPI_C_COMPLEX	/usr/local/include/mpi.h	216;"	d
MPI_C_COMPLEX	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_C_COMPLEX <a name="MPI_C_COMPLEX"><\/a><\/B> <DD> float _Complex$/;"	a
MPI_C_DOUBLE_COMPLEX	/usr/local/include/mpi.h	217;"	d
MPI_C_DOUBLE_COMPLEX	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_C_DOUBLE_COMPLEX <a name="MPI_C_DOUBLE_COMPLEX"><\/a><\/B> <DD> double _Complex$/;"	a
MPI_C_FLOAT_COMPLEX	/usr/local/include/mpi.h	215;"	d
MPI_C_FLOAT_COMPLEX	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_C_FLOAT_COMPLEX <a name="MPI_C_FLOAT_COMPLEX"><\/a><\/B> <DD> float _Complex$/;"	a
MPI_C_LONG_DOUBLE_COMPLEX	/usr/local/include/mpi.h	218;"	d
MPI_C_LONG_DOUBLE_COMPLEX	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_C_LONG_DOUBLE_COMPLEX <a name="MPI_C_LONG_DOUBLE_COMPLEX"><\/a><\/B> <DD> long double _Complex$/;"	a
MPI_Comm	/usr/local/include/mpi.h	/^typedef int MPI_Comm;$/;"	t
MPI_Comm_copy_attr_function	/usr/local/include/mpi.h	/^typedef int (MPI_Comm_copy_attr_function)(MPI_Comm, int, void *, void *,$/;"	t
MPI_Comm_delete_attr_function	/usr/local/include/mpi.h	/^typedef int (MPI_Comm_delete_attr_function)(MPI_Comm, int, void *, void *);$/;"	t
MPI_Comm_errhandler_fn	/usr/local/include/mpi.h	/^typedef MPI_Comm_errhandler_function MPI_Comm_errhandler_fn;$/;"	t
MPI_Comm_errhandler_function	/usr/local/include/mpi.h	/^typedef void (MPI_Comm_errhandler_function)(MPI_Comm *, int *, ...);$/;"	t
MPI_Copy_function	/usr/local/include/mpi.h	/^typedef int (MPI_Copy_function) ( MPI_Comm, int, void *, void *, void *, int * );$/;"	t
MPI_Copy_function	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_Copy_function <a name="MPI_Copy_function"><\/a><\/B> <DD> Function to copy attributes (see <tt>MPI_Keyval_create<\/tt>)$/;"	a
MPI_Count	/usr/local/include/mpi.h	/^typedef long long MPI_Count;$/;"	t
MPI_Count	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_Count  <a name="MPI_Count"><\/a><\/B> <DD> C type that holds any valid count.$/;"	a
MPI_DATATYPE_NULL	/usr/local/include/mpi.h	133;"	d
MPI_DATATYPE_NULL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_DATATYPE_NULL      <a name="MPI_DATATYPE_NULL"><\/a><\/B> <DD> Null datatype$/;"	a
MPI_DIMS_CREATE_T	/usr/local/include/mpi_proto.h	/^    MPI_DIMS_CREATE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_DISPLACEMENT_CURRENT	/usr/local/include/mpio.h	95;"	d
MPI_DISPLACEMENT_CURRENT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_DISPLACEMENT_CURRENT <a name="MPI_DISPLACEMENT_CURRENT"><\/a><\/B> <DD> Use with files opened with mode$/;"	a
MPI_DISTRIBUTE_BLOCK	/usr/local/include/mpi.h	563;"	d
MPI_DISTRIBUTE_BLOCK	/usr/local/include/mpio.h	123;"	d
MPI_DISTRIBUTE_BLOCK	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_DISTRIBUTE_BLOCK     <a name="MPI_DISTRIBUTE_BLOCK"><\/a><\/B> <DD> Block distribution$/;"	a
MPI_DISTRIBUTE_CYCLIC	/usr/local/include/mpi.h	564;"	d
MPI_DISTRIBUTE_CYCLIC	/usr/local/include/mpio.h	124;"	d
MPI_DISTRIBUTE_CYCLIC	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_DISTRIBUTE_CYCLIC    <a name="MPI_DISTRIBUTE_CYCLIC"><\/a><\/B> <DD> Cyclic distribution$/;"	a
MPI_DISTRIBUTE_DFLT_DARG	/usr/local/include/mpi.h	566;"	d
MPI_DISTRIBUTE_DFLT_DARG	/usr/local/include/mpio.h	126;"	d
MPI_DISTRIBUTE_DFLT_DARG	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_DISTRIBUTE_DFLT_DARG <a name="MPI_DISTRIBUTE_DFLT_DARG"><\/a><\/B> <DD> Use the default distribution$/;"	a
MPI_DISTRIBUTE_NONE	/usr/local/include/mpi.h	565;"	d
MPI_DISTRIBUTE_NONE	/usr/local/include/mpio.h	125;"	d
MPI_DISTRIBUTE_NONE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_DISTRIBUTE_NONE      <a name="MPI_DISTRIBUTE_NONE"><\/a><\/B> <DD> This dimension is not distributed$/;"	a
MPI_DIST_GRAPH	/usr/local/include/mpi.h	/^typedef enum MPIR_Topo_type { MPI_GRAPH=1, MPI_CART=2, MPI_DIST_GRAPH=3 } MPIR_Topo_type;$/;"	e	enum:MPIR_Topo_type
MPI_DIST_GRAPH	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_DIST_GRAPH <a name="MPI_DIST_GRAPH"><\/a><\/B> <DD> General distributed graph$/;"	a
MPI_DIST_GRAPH_CREATE_ADJACENT_T	/usr/local/include/mpi_proto.h	/^    MPI_DIST_GRAPH_CREATE_ADJACENT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_DIST_GRAPH_CREATE_T	/usr/local/include/mpi_proto.h	/^    MPI_DIST_GRAPH_CREATE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_DIST_GRAPH_NEIGHBORS_COUNT_T	/usr/local/include/mpi_proto.h	/^    MPI_DIST_GRAPH_NEIGHBORS_COUNT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_DIST_GRAPH_NEIGHBORS_T	/usr/local/include/mpi_proto.h	/^    MPI_DIST_GRAPH_NEIGHBORS_T,$/;"	e	enum:QMPI_Functions_enum
MPI_DOUBLE	/usr/local/include/mpi.h	153;"	d
MPI_DOUBLE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_DOUBLE <a name="MPI_DOUBLE"><\/a><\/B> <DD> double$/;"	a
MPI_DOUBLE_COMPLEX	/usr/local/include/mpi.h	180;"	d
MPI_DOUBLE_COMPLEX	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_DOUBLE_COMPLEX <a name="MPI_DOUBLE_COMPLEX"><\/a><\/B> <DD> <tt>complex*16<\/tt> (or <tt>complex*32<\/tt>) where supported.$/;"	a
MPI_DOUBLE_INT	/usr/local/include/mpi.h	172;"	d
MPI_DOUBLE_INT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_DOUBLE_INT <a name="MPI_DOUBLE_INT"><\/a><\/B> <DD> <tt>struct { double, int }$/;"	a
MPI_DOUBLE_PRECISION	/usr/local/include/mpi.h	183;"	d
MPI_DOUBLE_PRECISION	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_DOUBLE_PRECISION <a name="MPI_DOUBLE_PRECISION"><\/a><\/B> <DD> <tt>DOUBLE PRECISION$/;"	a
MPI_DUP_FN	/usr/local/include/mpi.h	792;"	d
MPI_DUP_FN	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_DUP_FN <a name="MPI_DUP_FN"><\/a><\/B> <DD> Predefined duplication function$/;"	a
MPI_Datarep_conversion_function	/usr/local/include/mpi.h	/^typedef int (MPI_Datarep_conversion_function)(void *, MPI_Datatype, int,$/;"	t
MPI_Datarep_conversion_function	/usr/local/include/mpio.h	/^typedef int (MPI_Datarep_conversion_function)(void *, MPI_Datatype, int, $/;"	t
MPI_Datarep_conversion_function_c	/usr/local/include/mpi.h	/^typedef int (MPI_Datarep_conversion_function_c)(void *, MPI_Datatype, MPI_Count,$/;"	t
MPI_Datarep_conversion_function_c	/usr/local/include/mpio.h	/^typedef int (MPI_Datarep_conversion_function_c)(void *, MPI_Datatype, MPI_Count,$/;"	t
MPI_Datarep_extent_function	/usr/local/include/mpi.h	/^typedef int (MPI_Datarep_extent_function)(MPI_Datatype datatype, MPI_Aint *,$/;"	t
MPI_Datarep_extent_function	/usr/local/include/mpio.h	/^typedef int (MPI_Datarep_extent_function)(MPI_Datatype datatype, MPI_Aint *,$/;"	t
MPI_Datatype	/usr/local/include/mpi.h	/^typedef int MPI_Datatype;$/;"	t
MPI_Delete_function	/usr/local/include/mpi.h	/^typedef int (MPI_Delete_function) ( MPI_Comm, int, void *, void * );$/;"	t
MPI_Delete_function	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_Delete_function <a name="MPI_Delete_function"><\/a><\/B> <DD> Function to delete attributes (see <tt>MPI_Keyval_create<\/tt>)$/;"	a
MPI_ERRCODES_IGNORE	/usr/local/include/mpi.h	515;"	d
MPI_ERRCODES_IGNORE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERRCODES_IGNORE <a name="MPI_ERRCODES_IGNORE"><\/a><\/B> <DD> Ignore an array of error codes$/;"	a
MPI_ERRHANDLER_C2F_T	/usr/local/include/mpi_proto.h	/^    MPI_ERRHANDLER_C2F_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ERRHANDLER_CREATE_T	/usr/local/include/mpi_proto.h	/^    MPI_ERRHANDLER_CREATE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ERRHANDLER_F2C_T	/usr/local/include/mpi_proto.h	/^    MPI_ERRHANDLER_F2C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ERRHANDLER_FREE_T	/usr/local/include/mpi_proto.h	/^    MPI_ERRHANDLER_FREE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ERRHANDLER_GET_T	/usr/local/include/mpi_proto.h	/^    MPI_ERRHANDLER_GET_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ERRHANDLER_NULL	/usr/local/include/mpi.h	135;"	d
MPI_ERRHANDLER_NULL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERRHANDLER_NULL    <a name="MPI_ERRHANDLER_NULL"><\/a><\/B> <DD> Null error handler$/;"	a
MPI_ERRHANDLER_SET_T	/usr/local/include/mpi_proto.h	/^    MPI_ERRHANDLER_SET_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ERROR	/usr/local/include/mpi.h	/^    MPI_Fint MPI_ERROR;$/;"	m	struct:__anon1
MPI_ERROR	/usr/local/include/mpi.h	/^    int MPI_ERROR;$/;"	m	struct:MPI_Status
MPI_ERROR	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERROR <a name="MPI_ERROR"><\/a><\/B> <DD> Any error return (only when the error returned by the routine$/;"	a
MPI_ERRORS_ABORT	/usr/local/include/mpi.h	289;"	d
MPI_ERRORS_ABORT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERRORS_ABORT <a name="MPI_ERRORS_ABORT"><\/a><\/B> <DD> Error handler that forces exit on error (only aborts local$/;"	a
MPI_ERRORS_ARE_FATAL	/usr/local/include/mpi.h	282;"	d
MPI_ERRORS_ARE_FATAL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERRORS_ARE_FATAL <a name="MPI_ERRORS_ARE_FATAL"><\/a><\/B> <DD> Error handler that forces exit on error$/;"	a
MPI_ERRORS_RETURN	/usr/local/include/mpi.h	283;"	d
MPI_ERRORS_RETURN	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERRORS_RETURN <a name="MPI_ERRORS_RETURN"><\/a><\/B> <DD> Error handler that returns error codes (as value of$/;"	a
MPI_ERROR_CLASS_T	/usr/local/include/mpi_proto.h	/^    MPI_ERROR_CLASS_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ERROR_STRING_T	/usr/local/include/mpi_proto.h	/^    MPI_ERROR_STRING_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ERR_ACCESS	/usr/local/include/mpi.h	625;"	d
MPI_ERR_ACCESS	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_ACCESS            <a name="MPI_ERR_ACCESS"><\/a><\/B> <DD> Permission denied$/;"	a
MPI_ERR_AMODE	/usr/local/include/mpi.h	626;"	d
MPI_ERR_AMODE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_AMODE             <a name="MPI_ERR_AMODE"><\/a><\/B> <DD> Error related to the amode passed to$/;"	a
MPI_ERR_ARG	/usr/local/include/mpi.h	612;"	d
MPI_ERR_ARG	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_ARG               <a name="MPI_ERR_ARG"><\/a><\/B> <DD> Invalid argument$/;"	a
MPI_ERR_ASSERT	/usr/local/include/mpi.h	663;"	d
MPI_ERR_ASSERT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_ASSERT            <a name="MPI_ERR_ASSERT"><\/a><\/B> <DD> Invalid assert argument$/;"	a
MPI_ERR_BAD_FILE	/usr/local/include/mpi.h	627;"	d
MPI_ERR_BAD_FILE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_BAD_FILE          <a name="MPI_ERR_BAD_FILE"><\/a><\/B> <DD> Invalid file name (e.g., path name too long)$/;"	a
MPI_ERR_BASE	/usr/local/include/mpi.h	656;"	d
MPI_ERR_BASE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_BASE              <a name="MPI_ERR_BASE"><\/a><\/B> <DD> Invalid base passed to MPI_FREE_MEM$/;"	a
MPI_ERR_BUFFER	/usr/local/include/mpi.h	593;"	d
MPI_ERR_BUFFER	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_BUFFER            <a name="MPI_ERR_BUFFER"><\/a><\/B> <DD> Invalid buffer pointer$/;"	a
MPI_ERR_COMM	/usr/local/include/mpi.h	597;"	d
MPI_ERR_COMM	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_COMM              <a name="MPI_ERR_COMM"><\/a><\/B> <DD> Invalid communicator$/;"	a
MPI_ERR_CONVERSION	/usr/local/include/mpi.h	628;"	d
MPI_ERR_CONVERSION	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_CONVERSION        <a name="MPI_ERR_CONVERSION"><\/a><\/B> <DD> An error occurred in a user supplied data$/;"	a
MPI_ERR_COUNT	/usr/local/include/mpi.h	594;"	d
MPI_ERR_COUNT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_COUNT             <a name="MPI_ERR_COUNT"><\/a><\/B> <DD> Invalid count argument$/;"	a
MPI_ERR_DIMS	/usr/local/include/mpi.h	609;"	d
MPI_ERR_DIMS	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_DIMS              <a name="MPI_ERR_DIMS"><\/a><\/B> <DD> Illegal dimension argument$/;"	a
MPI_ERR_DISP	/usr/local/include/mpi.h	662;"	d
MPI_ERR_DISP	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_DISP              <a name="MPI_ERR_DISP"><\/a><\/B> <DD> Invalid disp argument$/;"	a
MPI_ERR_DUP_DATAREP	/usr/local/include/mpi.h	629;"	d
MPI_ERR_DUP_DATAREP	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_DUP_DATAREP       <a name="MPI_ERR_DUP_DATAREP"><\/a><\/B> <DD> Conversion functions could not be registered$/;"	a
MPI_ERR_ERRHANDLER	/usr/local/include/mpi.h	699;"	d
MPI_ERR_ERRHANDLER	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_ERRHANDLER        <a name="MPI_ERR_ERRHANDLER"><\/a><\/B> <DD> Invalid error handler argument$/;"	a
MPI_ERR_FILE	/usr/local/include/mpi.h	632;"	d
MPI_ERR_FILE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_FILE              <a name="MPI_ERR_FILE"><\/a><\/B> <DD> Invalid file handle$/;"	a
MPI_ERR_FILE_EXISTS	/usr/local/include/mpi.h	630;"	d
MPI_ERR_FILE_EXISTS	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_FILE_EXISTS       <a name="MPI_ERR_FILE_EXISTS"><\/a><\/B> <DD> File exists$/;"	a
MPI_ERR_FILE_IN_USE	/usr/local/include/mpi.h	631;"	d
MPI_ERR_FILE_IN_USE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_FILE_IN_USE       <a name="MPI_ERR_FILE_IN_USE"><\/a><\/B> <DD> File operation could not be completed, as$/;"	a
MPI_ERR_GROUP	/usr/local/include/mpi.h	603;"	d
MPI_ERR_GROUP	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_GROUP             <a name="MPI_ERR_GROUP"><\/a><\/B> <DD> Null group passed to function$/;"	a
MPI_ERR_INFO	/usr/local/include/mpi.h	641;"	d
MPI_ERR_INFO	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_INFO              <a name="MPI_ERR_INFO"><\/a><\/B> <DD> Invalid info argument$/;"	a
MPI_ERR_INFO_KEY	/usr/local/include/mpi.h	642;"	d
MPI_ERR_INFO_KEY	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_INFO_KEY          <a name="MPI_ERR_INFO_KEY"><\/a><\/B> <DD> Key longer than MPI_MAX_INFO_KEY$/;"	a
MPI_ERR_INFO_NOKEY	/usr/local/include/mpi.h	644;"	d
MPI_ERR_INFO_NOKEY	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_INFO_NOKEY        <a name="MPI_ERR_INFO_NOKEY"><\/a><\/B> <DD> Invalid key passed to MPI_INFO_DELETE$/;"	a
MPI_ERR_INFO_VALUE	/usr/local/include/mpi.h	643;"	d
MPI_ERR_INFO_VALUE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_INFO_VALUE        <a name="MPI_ERR_INFO_VALUE"><\/a><\/B> <DD> Value longer than MPI_MAX_INFO_VAL$/;"	a
MPI_ERR_INTERN	/usr/local/include/mpi.h	618;"	d
MPI_ERR_INTERN	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_INTERN            <a name="MPI_ERR_INTERN"><\/a><\/B> <DD> Internal error code$/;"	a
MPI_ERR_IN_STATUS	/usr/local/include/mpi.h	621;"	d
MPI_ERR_IN_STATUS	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_IN_STATUS         <a name="MPI_ERR_IN_STATUS"><\/a><\/B> <DD> Look in status for error value$/;"	a
MPI_ERR_IO	/usr/local/include/mpi.h	633;"	d
MPI_ERR_IO	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_IO                <a name="MPI_ERR_IO"><\/a><\/B> <DD> Other I\/O error$/;"	a
MPI_ERR_KEYVAL	/usr/local/include/mpi.h	658;"	d
MPI_ERR_KEYVAL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_KEYVAL            <a name="MPI_ERR_KEYVAL"><\/a><\/B> <DD> Erroneous attribute key$/;"	a
MPI_ERR_LASTCODE	/usr/local/include/mpi.h	701;"	d
MPI_ERR_LASTCODE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_LASTCODE          <a name="MPI_ERR_LASTCODE"><\/a><\/B> <DD> Last error code -- always at end$/;"	a
MPI_ERR_LOCKTYPE	/usr/local/include/mpi.h	657;"	d
MPI_ERR_LOCKTYPE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_LOCKTYPE          <a name="MPI_ERR_LOCKTYPE"><\/a><\/B> <DD> Invalid locktype argument$/;"	a
MPI_ERR_NAME	/usr/local/include/mpi.h	646;"	d
MPI_ERR_NAME	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_NAME              <a name="MPI_ERR_NAME"><\/a><\/B> <DD> Invalid service name passed to MPI_LOOKUP_NAME$/;"	a
MPI_ERR_NOT_SAME	/usr/local/include/mpi.h	648;"	d
MPI_ERR_NOT_SAME	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_NOT_SAME          <a name="MPI_ERR_NOT_SAME"><\/a><\/B> <DD> Collective argument not identical on all$/;"	a
MPI_ERR_NO_MEM	/usr/local/include/mpi.h	647;"	d
MPI_ERR_NO_MEM	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_NO_MEM            <a name="MPI_ERR_NO_MEM"><\/a><\/B> <DD> Alloc_mem could not allocate memory$/;"	a
MPI_ERR_NO_SPACE	/usr/local/include/mpi.h	634;"	d
MPI_ERR_NO_SPACE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_NO_SPACE          <a name="MPI_ERR_NO_SPACE"><\/a><\/B> <DD> Not enough space$/;"	a
MPI_ERR_NO_SUCH_FILE	/usr/local/include/mpi.h	635;"	d
MPI_ERR_NO_SUCH_FILE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_NO_SUCH_FILE      <a name="MPI_ERR_NO_SUCH_FILE"><\/a><\/B> <DD> File does not exist$/;"	a
MPI_ERR_OP	/usr/local/include/mpi.h	604;"	d
MPI_ERR_OP	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_OP                <a name="MPI_ERR_OP"><\/a><\/B> <DD> Invalid operation$/;"	a
MPI_ERR_OTHER	/usr/local/include/mpi.h	615;"	d
MPI_ERR_OTHER	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_OTHER             <a name="MPI_ERR_OTHER"><\/a><\/B> <DD> Other error; use Error_string$/;"	a
MPI_ERR_PENDING	/usr/local/include/mpi.h	622;"	d
MPI_ERR_PENDING	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_PENDING           <a name="MPI_ERR_PENDING"><\/a><\/B> <DD> Pending request$/;"	a
MPI_ERR_PORT	/usr/local/include/mpi.h	649;"	d
MPI_ERR_PORT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_PORT              <a name="MPI_ERR_PORT"><\/a><\/B> <DD> Invalid port name passed to MPI_COMM_CONNECT$/;"	a
MPI_ERR_PROC_ABORTED	/usr/local/include/mpi.h	693;"	d
MPI_ERR_PROC_ABORTED	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_PROC_ABORTED      <a name="MPI_ERR_PROC_ABORTED"><\/a><\/B> <DD> Trying to communicate with aborted processes$/;"	a
MPI_ERR_QUOTA	/usr/local/include/mpi.h	650;"	d
MPI_ERR_QUOTA	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_QUOTA             <a name="MPI_ERR_QUOTA"><\/a><\/B> <DD> Quota exceeded$/;"	a
MPI_ERR_RANK	/usr/local/include/mpi.h	598;"	d
MPI_ERR_RANK	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_RANK              <a name="MPI_ERR_RANK"><\/a><\/B> <DD> Invalid rank$/;"	a
MPI_ERR_READ_ONLY	/usr/local/include/mpi.h	636;"	d
MPI_ERR_READ_ONLY	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_READ_ONLY         <a name="MPI_ERR_READ_ONLY"><\/a><\/B> <DD> Read-only file or file system$/;"	a
MPI_ERR_REQUEST	/usr/local/include/mpi.h	605;"	d
MPI_ERR_REQUEST	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_REQUEST           <a name="MPI_ERR_REQUEST"><\/a><\/B> <DD> Invalid mpi_request handle$/;"	a
MPI_ERR_RMA_ATTACH	/usr/local/include/mpi.h	666;"	d
MPI_ERR_RMA_ATTACH	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_RMA_ATTACH        <a name="MPI_ERR_RMA_ATTACH"><\/a><\/B> <DD> Memory cannot be attached (e.g., because of$/;"	a
MPI_ERR_RMA_CONFLICT	/usr/local/include/mpi.h	659;"	d
MPI_ERR_RMA_CONFLICT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_RMA_CONFLICT      <a name="MPI_ERR_RMA_CONFLICT"><\/a><\/B> <DD> Conflicting accesses to window$/;"	a
MPI_ERR_RMA_FLAVOR	/usr/local/include/mpi.h	668;"	d
MPI_ERR_RMA_FLAVOR	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_RMA_FLAVOR        <a name="MPI_ERR_RMA_FLAVOR"><\/a><\/B> <DD> Passed window has the wrong flavor for the$/;"	a
MPI_ERR_RMA_RANGE	/usr/local/include/mpi.h	665;"	d
MPI_ERR_RMA_RANGE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_RMA_RANGE         <a name="MPI_ERR_RMA_RANGE"><\/a><\/B> <DD> Target memory is not part of the window (in$/;"	a
MPI_ERR_RMA_SHARED	/usr/local/include/mpi.h	667;"	d
MPI_ERR_RMA_SHARED	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_RMA_SHARED        <a name="MPI_ERR_RMA_SHARED"><\/a><\/B> <DD> Memory cannot be shared (e.g., some process in$/;"	a
MPI_ERR_RMA_SYNC	/usr/local/include/mpi.h	660;"	d
MPI_ERR_RMA_SYNC	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_RMA_SYNC          <a name="MPI_ERR_RMA_SYNC"><\/a><\/B> <DD> Wrong synchronization of RMA calls$/;"	a
MPI_ERR_ROOT	/usr/local/include/mpi.h	599;"	d
MPI_ERR_ROOT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_ROOT              <a name="MPI_ERR_ROOT"><\/a><\/B> <DD> Invalid root$/;"	a
MPI_ERR_SERVICE	/usr/local/include/mpi.h	651;"	d
MPI_ERR_SERVICE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_SERVICE           <a name="MPI_ERR_SERVICE"><\/a><\/B> <DD> Invalid service name passed to MPI_UNPUBLISH_NAME$/;"	a
MPI_ERR_SESSION	/usr/local/include/mpi.h	692;"	d
MPI_ERR_SESSION	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_SESSION           <a name="MPI_ERR_SESSION"><\/a><\/B> <DD> Invalid session argument$/;"	a
MPI_ERR_SIZE	/usr/local/include/mpi.h	661;"	d
MPI_ERR_SIZE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_SIZE              <a name="MPI_ERR_SIZE"><\/a><\/B> <DD> Invalid size argument$/;"	a
MPI_ERR_SPAWN	/usr/local/include/mpi.h	652;"	d
MPI_ERR_SPAWN	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_SPAWN             <a name="MPI_ERR_SPAWN"><\/a><\/B> <DD> Error in spawning processes$/;"	a
MPI_ERR_TAG	/usr/local/include/mpi.h	596;"	d
MPI_ERR_TAG	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_TAG               <a name="MPI_ERR_TAG"><\/a><\/B> <DD> Invalid tag argument$/;"	a
MPI_ERR_TOPOLOGY	/usr/local/include/mpi.h	608;"	d
MPI_ERR_TOPOLOGY	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_TOPOLOGY          <a name="MPI_ERR_TOPOLOGY"><\/a><\/B> <DD> Invalid topology$/;"	a
MPI_ERR_TRUNCATE	/usr/local/include/mpi.h	600;"	d
MPI_ERR_TRUNCATE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_TRUNCATE          <a name="MPI_ERR_TRUNCATE"><\/a><\/B> <DD> Message truncated on receive$/;"	a
MPI_ERR_TYPE	/usr/local/include/mpi.h	595;"	d
MPI_ERR_TYPE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_TYPE              <a name="MPI_ERR_TYPE"><\/a><\/B> <DD> Invalid datatype argument$/;"	a
MPI_ERR_UNKNOWN	/usr/local/include/mpi.h	617;"	d
MPI_ERR_UNKNOWN	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_UNKNOWN           <a name="MPI_ERR_UNKNOWN"><\/a><\/B> <DD> Unknown error$/;"	a
MPI_ERR_UNSUPPORTED_DATAREP	/usr/local/include/mpi.h	637;"	d
MPI_ERR_UNSUPPORTED_DATAREP	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_UNSUPPORTED_DATAREP <a name="MPI_ERR_UNSUPPORTED_DATAREP"><\/a><\/B> <DD> Unsupported datarep passed to$/;"	a
MPI_ERR_UNSUPPORTED_OPERATION	/usr/local/include/mpi.h	653;"	d
MPI_ERR_UNSUPPORTED_OPERATION	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_UNSUPPORTED_OPERATION <a name="MPI_ERR_UNSUPPORTED_OPERATION"><\/a><\/B> <DD> Unsupported operation, such as seeking on$/;"	a
MPI_ERR_VALUE_TOO_LARGE	/usr/local/include/mpi.h	694;"	d
MPI_ERR_VALUE_TOO_LARGE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_VALUE_TOO_LARGE   <a name="MPI_ERR_VALUE_TOO_LARGE"><\/a><\/B> <DD> Value is too large to store$/;"	a
MPI_ERR_WIN	/usr/local/include/mpi.h	654;"	d
MPI_ERR_WIN	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ERR_WIN               <a name="MPI_ERR_WIN"><\/a><\/B> <DD> Invalid win argument$/;"	a
MPI_EXSCAN_C_T	/usr/local/include/mpi_proto.h	/^    MPI_EXSCAN_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_EXSCAN_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_EXSCAN_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_EXSCAN_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_EXSCAN_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_EXSCAN_T	/usr/local/include/mpi_proto.h	/^    MPI_EXSCAN_T,$/;"	e	enum:QMPI_Functions_enum
MPI_Errhandler	/usr/local/include/mpi.h	/^typedef int MPI_Errhandler;$/;"	t
MPI_F08_status	/usr/local/include/mpi.h	/^} MPI_F08_status;$/;"	t	typeref:struct:__anon1
MPI_FETCH_AND_OP_T	/usr/local/include/mpi_proto.h	/^    MPI_FETCH_AND_OP_T,$/;"	e	enum:QMPI_Functions_enum
MPI_FILE_CALL_ERRHANDLER_T	/usr/local/include/mpi_proto.h	/^    MPI_FILE_CALL_ERRHANDLER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_FILE_CREATE_ERRHANDLER_T	/usr/local/include/mpi_proto.h	/^    MPI_FILE_CREATE_ERRHANDLER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_FILE_DEFINED	/usr/local/include/mpi.h	252;"	d
MPI_FILE_GET_ERRHANDLER_T	/usr/local/include/mpi_proto.h	/^    MPI_FILE_GET_ERRHANDLER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_FILE_NULL	/usr/local/include/mpi.h	256;"	d
MPI_FILE_NULL	/usr/local/include/mpicxx.h	1921;"	d
MPI_FILE_NULL	/usr/local/include/mpio.h	101;"	d
MPI_FILE_NULL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_FILE_NULL          <a name="MPI_FILE_NULL"><\/a><\/B> <DD> Null file handle$/;"	a
MPI_FILE_SET_ERRHANDLER_T	/usr/local/include/mpi_proto.h	/^    MPI_FILE_SET_ERRHANDLER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_FINALIZED_T	/usr/local/include/mpi_proto.h	/^    MPI_FINALIZED_T,$/;"	e	enum:QMPI_Functions_enum
MPI_FINALIZE_T	/usr/local/include/mpi_proto.h	/^    MPI_FINALIZE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_FLOAT	/usr/local/include/mpi.h	152;"	d
MPI_FLOAT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_FLOAT <a name="MPI_FLOAT"><\/a><\/B> <DD> float$/;"	a
MPI_FLOAT_INT	/usr/local/include/mpi.h	171;"	d
MPI_FLOAT_INT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_FLOAT_INT <a name="MPI_FLOAT_INT"><\/a><\/B> <DD> <tt>struct { float, int }$/;"	a
MPI_FREE_MEM_T	/usr/local/include/mpi_proto.h	/^    MPI_FREE_MEM_T,$/;"	e	enum:QMPI_Functions_enum
MPI_F_ERROR	/usr/local/include/mpi.h	384;"	d
MPI_F_SOURCE	/usr/local/include/mpi.h	382;"	d
MPI_F_STATUS_SIZE	/usr/local/include/mpi.h	381;"	d
MPI_F_TAG	/usr/local/include/mpi.h	383;"	d
MPI_File	/usr/local/include/mpi.h	/^typedef struct ADIOI_FileD *MPI_File;$/;"	t	typeref:struct:ADIOI_FileD
MPI_File	/usr/local/include/mpicxx.h	/^typedef int MPI_File;$/;"	t	namespace:MPI
MPI_File	/usr/local/include/mpio.h	/^typedef struct ADIOI_FileD *MPI_File;$/;"	t	typeref:struct:ADIOI_FileD
MPI_File_c2f	/usr/local/include/mpio.h	368;"	d
MPI_File_errhandler_fn	/usr/local/include/mpi.h	/^typedef MPI_File_errhandler_function MPI_File_errhandler_fn;$/;"	t
MPI_File_errhandler_function	/usr/local/include/mpi.h	/^typedef void (MPI_File_errhandler_function)(MPI_File *, int *, ...);$/;"	t
MPI_File_f2c	/usr/local/include/mpio.h	365;"	d
MPI_Fint	/usr/local/include/mpi.h	/^typedef int MPI_Fint;$/;"	t
MPI_Fint	/usr/local/include/mpio.h	/^typedef int MPI_Fint; $/;"	t
MPI_GATHERV_C_T	/usr/local/include/mpi_proto.h	/^    MPI_GATHERV_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GATHERV_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_GATHERV_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GATHERV_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_GATHERV_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GATHERV_T	/usr/local/include/mpi_proto.h	/^    MPI_GATHERV_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GATHER_C_T	/usr/local/include/mpi_proto.h	/^    MPI_GATHER_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GATHER_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_GATHER_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GATHER_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_GATHER_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GATHER_T	/usr/local/include/mpi_proto.h	/^    MPI_GATHER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GET_ACCUMULATE_C_T	/usr/local/include/mpi_proto.h	/^    MPI_GET_ACCUMULATE_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GET_ACCUMULATE_T	/usr/local/include/mpi_proto.h	/^    MPI_GET_ACCUMULATE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GET_ADDRESS_T	/usr/local/include/mpi_proto.h	/^    MPI_GET_ADDRESS_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GET_COUNT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_GET_COUNT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GET_COUNT_T	/usr/local/include/mpi_proto.h	/^    MPI_GET_COUNT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GET_C_T	/usr/local/include/mpi_proto.h	/^    MPI_GET_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GET_ELEMENTS_C_T	/usr/local/include/mpi_proto.h	/^    MPI_GET_ELEMENTS_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GET_ELEMENTS_T	/usr/local/include/mpi_proto.h	/^    MPI_GET_ELEMENTS_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GET_ELEMENTS_X_T	/usr/local/include/mpi_proto.h	/^    MPI_GET_ELEMENTS_X_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GET_HW_RESOURCE_INFO_T	/usr/local/include/mpi_proto.h	/^    MPI_GET_HW_RESOURCE_INFO_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GET_LIBRARY_VERSION_T	/usr/local/include/mpi_proto.h	/^    MPI_GET_LIBRARY_VERSION_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GET_PROCESSOR_NAME_T	/usr/local/include/mpi_proto.h	/^    MPI_GET_PROCESSOR_NAME_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GET_T	/usr/local/include/mpi_proto.h	/^    MPI_GET_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GET_VERSION_T	/usr/local/include/mpi_proto.h	/^    MPI_GET_VERSION_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GRAPH	/usr/local/include/mpi.h	/^typedef enum MPIR_Topo_type { MPI_GRAPH=1, MPI_CART=2, MPI_DIST_GRAPH=3 } MPIR_Topo_type;$/;"	e	enum:MPIR_Topo_type
MPI_GRAPH	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_GRAPH      <a name="MPI_GRAPH"><\/a><\/B> <DD> General graph$/;"	a
MPI_GRAPHDIMS_GET_T	/usr/local/include/mpi_proto.h	/^    MPI_GRAPHDIMS_GET_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GRAPH_CREATE_T	/usr/local/include/mpi_proto.h	/^    MPI_GRAPH_CREATE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GRAPH_GET_T	/usr/local/include/mpi_proto.h	/^    MPI_GRAPH_GET_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GRAPH_MAP_T	/usr/local/include/mpi_proto.h	/^    MPI_GRAPH_MAP_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GRAPH_NEIGHBORS_COUNT_T	/usr/local/include/mpi_proto.h	/^    MPI_GRAPH_NEIGHBORS_COUNT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GRAPH_NEIGHBORS_T	/usr/local/include/mpi_proto.h	/^    MPI_GRAPH_NEIGHBORS_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GREQUEST_COMPLETE_T	/usr/local/include/mpi_proto.h	/^    MPI_GREQUEST_COMPLETE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GREQUEST_START_T	/usr/local/include/mpi_proto.h	/^    MPI_GREQUEST_START_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GROUP_C2F_T	/usr/local/include/mpi_proto.h	/^    MPI_GROUP_C2F_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GROUP_COMPARE_T	/usr/local/include/mpi_proto.h	/^    MPI_GROUP_COMPARE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GROUP_DIFFERENCE_T	/usr/local/include/mpi_proto.h	/^    MPI_GROUP_DIFFERENCE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GROUP_EMPTY	/usr/local/include/mpi.h	240;"	d
MPI_GROUP_EMPTY	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_GROUP_EMPTY <a name="MPI_GROUP_EMPTY"><\/a><\/B> <DD> A group containing no members.$/;"	a
MPI_GROUP_EXCL_T	/usr/local/include/mpi_proto.h	/^    MPI_GROUP_EXCL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GROUP_F2C_T	/usr/local/include/mpi_proto.h	/^    MPI_GROUP_F2C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GROUP_FREE_T	/usr/local/include/mpi_proto.h	/^    MPI_GROUP_FREE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GROUP_FROM_SESSION_PSET_T	/usr/local/include/mpi_proto.h	/^    MPI_GROUP_FROM_SESSION_PSET_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GROUP_INCL_T	/usr/local/include/mpi_proto.h	/^    MPI_GROUP_INCL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GROUP_INTERSECTION_T	/usr/local/include/mpi_proto.h	/^    MPI_GROUP_INTERSECTION_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GROUP_NULL	/usr/local/include/mpi.h	132;"	d
MPI_GROUP_NULL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_GROUP_NULL         <a name="MPI_GROUP_NULL"><\/a><\/B> <DD> Null group$/;"	a
MPI_GROUP_RANGE_EXCL_T	/usr/local/include/mpi_proto.h	/^    MPI_GROUP_RANGE_EXCL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GROUP_RANGE_INCL_T	/usr/local/include/mpi_proto.h	/^    MPI_GROUP_RANGE_INCL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GROUP_RANK_T	/usr/local/include/mpi_proto.h	/^    MPI_GROUP_RANK_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GROUP_SIZE_T	/usr/local/include/mpi_proto.h	/^    MPI_GROUP_SIZE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GROUP_TRANSLATE_RANKS_T	/usr/local/include/mpi_proto.h	/^    MPI_GROUP_TRANSLATE_RANKS_T,$/;"	e	enum:QMPI_Functions_enum
MPI_GROUP_UNION_T	/usr/local/include/mpi_proto.h	/^    MPI_GROUP_UNION_T,$/;"	e	enum:QMPI_Functions_enum
MPI_Grequest_cancel_function	/usr/local/include/mpi.h	/^typedef int (MPI_Grequest_cancel_function)(void *, int);$/;"	t
MPI_Grequest_free_function	/usr/local/include/mpi.h	/^typedef int (MPI_Grequest_free_function)(void *);$/;"	t
MPI_Grequest_query_function	/usr/local/include/mpi.h	/^typedef int (MPI_Grequest_query_function)(void *, MPI_Status *);$/;"	t
MPI_Group	/usr/local/include/mpi.h	/^typedef int MPI_Group;$/;"	t
MPI_HOST	/usr/local/include/mpi.h	324;"	d
MPI_HOST	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_HOST <a name="MPI_HOST"><\/a><\/B> <DD> Rank of process that is host, if any$/;"	a
MPI_Handler_function	/usr/local/include/mpi.h	/^typedef void (MPI_Handler_function) ( MPI_Comm *, int *, ... );$/;"	t
MPI_Handler_function	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_Handler_function <a name="MPI_Handler_function"><\/a><\/B> <DD> C function for handling errors (see$/;"	a
MPI_IALLGATHERV_C_T	/usr/local/include/mpi_proto.h	/^    MPI_IALLGATHERV_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IALLGATHERV_T	/usr/local/include/mpi_proto.h	/^    MPI_IALLGATHERV_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IALLGATHER_C_T	/usr/local/include/mpi_proto.h	/^    MPI_IALLGATHER_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IALLGATHER_T	/usr/local/include/mpi_proto.h	/^    MPI_IALLGATHER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IALLREDUCE_C_T	/usr/local/include/mpi_proto.h	/^    MPI_IALLREDUCE_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IALLREDUCE_T	/usr/local/include/mpi_proto.h	/^    MPI_IALLREDUCE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IALLTOALLV_C_T	/usr/local/include/mpi_proto.h	/^    MPI_IALLTOALLV_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IALLTOALLV_T	/usr/local/include/mpi_proto.h	/^    MPI_IALLTOALLV_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IALLTOALLW_C_T	/usr/local/include/mpi_proto.h	/^    MPI_IALLTOALLW_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IALLTOALLW_T	/usr/local/include/mpi_proto.h	/^    MPI_IALLTOALLW_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IALLTOALL_C_T	/usr/local/include/mpi_proto.h	/^    MPI_IALLTOALL_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IALLTOALL_T	/usr/local/include/mpi_proto.h	/^    MPI_IALLTOALL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IBARRIER_T	/usr/local/include/mpi_proto.h	/^    MPI_IBARRIER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IBCAST_C_T	/usr/local/include/mpi_proto.h	/^    MPI_IBCAST_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IBCAST_T	/usr/local/include/mpi_proto.h	/^    MPI_IBCAST_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IBSEND_C_T	/usr/local/include/mpi_proto.h	/^    MPI_IBSEND_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IBSEND_T	/usr/local/include/mpi_proto.h	/^    MPI_IBSEND_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IDENT	/usr/local/include/mpi.h	523;"	d
MPI_IDENT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_IDENT <a name="MPI_IDENT"><\/a><\/B> <DD> Identical$/;"	a
MPI_IEXSCAN_C_T	/usr/local/include/mpi_proto.h	/^    MPI_IEXSCAN_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IEXSCAN_T	/usr/local/include/mpi_proto.h	/^    MPI_IEXSCAN_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IGATHERV_C_T	/usr/local/include/mpi_proto.h	/^    MPI_IGATHERV_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IGATHERV_T	/usr/local/include/mpi_proto.h	/^    MPI_IGATHERV_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IGATHER_C_T	/usr/local/include/mpi_proto.h	/^    MPI_IGATHER_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IGATHER_T	/usr/local/include/mpi_proto.h	/^    MPI_IGATHER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IMPROBE_T	/usr/local/include/mpi_proto.h	/^    MPI_IMPROBE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IMRECV_C_T	/usr/local/include/mpi_proto.h	/^    MPI_IMRECV_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IMRECV_T	/usr/local/include/mpi_proto.h	/^    MPI_IMRECV_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INCLUDED	/usr/local/include/mpi.h	8;"	d
MPI_INEIGHBOR_ALLGATHERV_C_T	/usr/local/include/mpi_proto.h	/^    MPI_INEIGHBOR_ALLGATHERV_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INEIGHBOR_ALLGATHERV_T	/usr/local/include/mpi_proto.h	/^    MPI_INEIGHBOR_ALLGATHERV_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INEIGHBOR_ALLGATHER_C_T	/usr/local/include/mpi_proto.h	/^    MPI_INEIGHBOR_ALLGATHER_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INEIGHBOR_ALLGATHER_T	/usr/local/include/mpi_proto.h	/^    MPI_INEIGHBOR_ALLGATHER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INEIGHBOR_ALLTOALLV_C_T	/usr/local/include/mpi_proto.h	/^    MPI_INEIGHBOR_ALLTOALLV_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INEIGHBOR_ALLTOALLV_T	/usr/local/include/mpi_proto.h	/^    MPI_INEIGHBOR_ALLTOALLV_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INEIGHBOR_ALLTOALLW_C_T	/usr/local/include/mpi_proto.h	/^    MPI_INEIGHBOR_ALLTOALLW_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INEIGHBOR_ALLTOALLW_T	/usr/local/include/mpi_proto.h	/^    MPI_INEIGHBOR_ALLTOALLW_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INEIGHBOR_ALLTOALL_C_T	/usr/local/include/mpi_proto.h	/^    MPI_INEIGHBOR_ALLTOALL_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INEIGHBOR_ALLTOALL_T	/usr/local/include/mpi_proto.h	/^    MPI_INEIGHBOR_ALLTOALL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INFO_C2F_T	/usr/local/include/mpi_proto.h	/^    MPI_INFO_C2F_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INFO_CREATE_ENV_T	/usr/local/include/mpi_proto.h	/^    MPI_INFO_CREATE_ENV_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INFO_CREATE_T	/usr/local/include/mpi_proto.h	/^    MPI_INFO_CREATE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INFO_DELETE_T	/usr/local/include/mpi_proto.h	/^    MPI_INFO_DELETE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INFO_DUP_T	/usr/local/include/mpi_proto.h	/^    MPI_INFO_DUP_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INFO_ENV	/usr/local/include/mpi.h	306;"	d
MPI_INFO_ENV	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_INFO_ENV <a name="MPI_INFO_ENV"><\/a><\/B> <DD> Contains the execution environment$/;"	a
MPI_INFO_F2C_T	/usr/local/include/mpi_proto.h	/^    MPI_INFO_F2C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INFO_FREE_T	/usr/local/include/mpi_proto.h	/^    MPI_INFO_FREE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INFO_GET_NKEYS_T	/usr/local/include/mpi_proto.h	/^    MPI_INFO_GET_NKEYS_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INFO_GET_NTHKEY_T	/usr/local/include/mpi_proto.h	/^    MPI_INFO_GET_NTHKEY_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INFO_GET_STRING_T	/usr/local/include/mpi_proto.h	/^    MPI_INFO_GET_STRING_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INFO_GET_T	/usr/local/include/mpi_proto.h	/^    MPI_INFO_GET_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INFO_GET_VALUELEN_T	/usr/local/include/mpi_proto.h	/^    MPI_INFO_GET_VALUELEN_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INFO_NULL	/usr/local/include/mpi.h	305;"	d
MPI_INFO_NULL	/usr/local/include/mpio.h	80;"	d
MPI_INFO_NULL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_INFO_NULL          <a name="MPI_INFO_NULL"><\/a><\/B> <DD> Null info handle$/;"	a
MPI_INFO_SET_T	/usr/local/include/mpi_proto.h	/^    MPI_INFO_SET_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INITIALIZED_T	/usr/local/include/mpi_proto.h	/^    MPI_INITIALIZED_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INIT_THREAD_T	/usr/local/include/mpi_proto.h	/^    MPI_INIT_THREAD_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INT	/usr/local/include/mpi.h	148;"	d
MPI_INT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_INT   <a name="MPI_INT"><\/a><\/B> <DD> int$/;"	a
MPI_INT16_T	/usr/local/include/mpi.h	205;"	d
MPI_INT16_T	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_INT16_T <a name="MPI_INT16_T"><\/a><\/B> <DD> int16_t$/;"	a
MPI_INT32_T	/usr/local/include/mpi.h	206;"	d
MPI_INT32_T	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_INT32_T <a name="MPI_INT32_T"><\/a><\/B> <DD> int32_t$/;"	a
MPI_INT64_T	/usr/local/include/mpi.h	207;"	d
MPI_INT64_T	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_INT64_T <a name="MPI_INT64_T"><\/a><\/B> <DD> int64_t$/;"	a
MPI_INT8_T	/usr/local/include/mpi.h	204;"	d
MPI_INT8_T	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_INT8_T  <a name="MPI_INT8_T"><\/a><\/B> <DD> int8_t$/;"	a
MPI_INTEGER	/usr/local/include/mpi.h	184;"	d
MPI_INTEGER	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_INTEGER <a name="MPI_INTEGER"><\/a><\/B> <DD> <tt>INTEGER$/;"	a
MPI_INTEGER1	/usr/local/include/mpi.h	197;"	d
MPI_INTEGER1	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_INTEGER1  <a name="MPI_INTEGER1"><\/a><\/B> <DD> <tt>integer*1<\/tt> if supported$/;"	a
MPI_INTEGER16	/usr/local/include/mpi.h	201;"	d
MPI_INTEGER16	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_INTEGER16 <a name="MPI_INTEGER16"><\/a><\/B> <DD> <tt>integer*16<\/tt> if supported$/;"	a
MPI_INTEGER2	/usr/local/include/mpi.h	198;"	d
MPI_INTEGER2	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_INTEGER2  <a name="MPI_INTEGER2"><\/a><\/B> <DD> <tt>integer*2<\/tt> if supported$/;"	a
MPI_INTEGER4	/usr/local/include/mpi.h	199;"	d
MPI_INTEGER4	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_INTEGER4  <a name="MPI_INTEGER4"><\/a><\/B> <DD> <tt>integer*4<\/tt> if supported$/;"	a
MPI_INTEGER8	/usr/local/include/mpi.h	200;"	d
MPI_INTEGER8	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_INTEGER8  <a name="MPI_INTEGER8"><\/a><\/B> <DD> <tt>integer*8<\/tt> if supported$/;"	a
MPI_INTERCOMM_CREATE_FROM_GROUPS_T	/usr/local/include/mpi_proto.h	/^    MPI_INTERCOMM_CREATE_FROM_GROUPS_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INTERCOMM_CREATE_T	/usr/local/include/mpi_proto.h	/^    MPI_INTERCOMM_CREATE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_INTERCOMM_MERGE_T	/usr/local/include/mpi_proto.h	/^    MPI_INTERCOMM_MERGE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IN_PLACE	/usr/local/include/mpi.h	508;"	d
MPI_IN_PLACE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_IN_PLACE                   <a name="MPI_IN_PLACE"><\/a><\/B> <DD> Special location for buffer in some$/;"	a
MPI_IO	/usr/local/include/mpi.h	325;"	d
MPI_IO	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_IO <a name="MPI_IO"><\/a><\/B> <DD> Rank of process that can do I\/O$/;"	a
MPI_IPROBE_T	/usr/local/include/mpi_proto.h	/^    MPI_IPROBE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IRECV_C_T	/usr/local/include/mpi_proto.h	/^    MPI_IRECV_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IRECV_T	/usr/local/include/mpi_proto.h	/^    MPI_IRECV_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IREDUCE_C_T	/usr/local/include/mpi_proto.h	/^    MPI_IREDUCE_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IREDUCE_SCATTER_BLOCK_C_T	/usr/local/include/mpi_proto.h	/^    MPI_IREDUCE_SCATTER_BLOCK_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IREDUCE_SCATTER_BLOCK_T	/usr/local/include/mpi_proto.h	/^    MPI_IREDUCE_SCATTER_BLOCK_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IREDUCE_SCATTER_C_T	/usr/local/include/mpi_proto.h	/^    MPI_IREDUCE_SCATTER_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IREDUCE_SCATTER_T	/usr/local/include/mpi_proto.h	/^    MPI_IREDUCE_SCATTER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IREDUCE_T	/usr/local/include/mpi_proto.h	/^    MPI_IREDUCE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IRSEND_C_T	/usr/local/include/mpi_proto.h	/^    MPI_IRSEND_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IRSEND_T	/usr/local/include/mpi_proto.h	/^    MPI_IRSEND_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ISCAN_C_T	/usr/local/include/mpi_proto.h	/^    MPI_ISCAN_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ISCAN_T	/usr/local/include/mpi_proto.h	/^    MPI_ISCAN_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ISCATTERV_C_T	/usr/local/include/mpi_proto.h	/^    MPI_ISCATTERV_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ISCATTERV_T	/usr/local/include/mpi_proto.h	/^    MPI_ISCATTERV_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ISCATTER_C_T	/usr/local/include/mpi_proto.h	/^    MPI_ISCATTER_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ISCATTER_T	/usr/local/include/mpi_proto.h	/^    MPI_ISCATTER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ISENDRECV_C_T	/usr/local/include/mpi_proto.h	/^    MPI_ISENDRECV_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ISENDRECV_REPLACE_C_T	/usr/local/include/mpi_proto.h	/^    MPI_ISENDRECV_REPLACE_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ISENDRECV_REPLACE_T	/usr/local/include/mpi_proto.h	/^    MPI_ISENDRECV_REPLACE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ISENDRECV_T	/usr/local/include/mpi_proto.h	/^    MPI_ISENDRECV_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ISEND_C_T	/usr/local/include/mpi_proto.h	/^    MPI_ISEND_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ISEND_T	/usr/local/include/mpi_proto.h	/^    MPI_ISEND_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ISSEND_C_T	/usr/local/include/mpi_proto.h	/^    MPI_ISSEND_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ISSEND_T	/usr/local/include/mpi_proto.h	/^    MPI_ISSEND_T,$/;"	e	enum:QMPI_Functions_enum
MPI_IS_THREAD_MAIN_T	/usr/local/include/mpi_proto.h	/^    MPI_IS_THREAD_MAIN_T,$/;"	e	enum:QMPI_Functions_enum
MPI_Info	/usr/local/include/mpi.h	/^typedef int MPI_Info;$/;"	t
MPI_Info	/usr/local/include/mpio.h	/^  typedef struct MPIR_Info *MPI_Info;$/;"	t	typeref:struct:MPIR_Info
MPI_Info_c2f	/usr/local/include/mpio.h	418;"	d
MPI_Info_f2c	/usr/local/include/mpio.h	415;"	d
MPI_KEYVAL_CREATE_T	/usr/local/include/mpi_proto.h	/^    MPI_KEYVAL_CREATE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_KEYVAL_FREE_T	/usr/local/include/mpi_proto.h	/^    MPI_KEYVAL_FREE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_KEYVAL_INVALID	/usr/local/include/mpi.h	309;"	d
MPI_KEYVAL_INVALID	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_KEYVAL_INVALID             <a name="MPI_KEYVAL_INVALID"><\/a><\/B> <DD> Special keyval that may be used to detect$/;"	a
MPI_LAND	/usr/local/include/mpi.h	265;"	d
MPI_LAND	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_LAND <a name="MPI_LAND"><\/a><\/B> <DD> return the logical and$/;"	a
MPI_LASTUSEDCODE	/usr/local/include/mpi.h	328;"	d
MPI_LASTUSEDCODE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_LASTUSEDCODE <a name="MPI_LASTUSEDCODE"><\/a><\/B> <DD> Last used MPI error code (check - code or class?)$/;"	a
MPI_LAST_FUNC_T	/usr/local/include/mpi_proto.h	/^    MPI_LAST_FUNC_T$/;"	e	enum:QMPI_Functions_enum
MPI_LB	/usr/local/include/mpi.h	160;"	d
MPI_LB	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_LB <a name="MPI_LB"><\/a><\/B> <DD> For <tt>MPI_Type_struct<\/tt>; a lower-bound indicator. Removed in MPI 3$/;"	a
MPI_LOCK_EXCLUSIVE	/usr/local/include/mpi.h	533;"	d
MPI_LOCK_EXCLUSIVE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_LOCK_EXCLUSIVE <a name="MPI_LOCK_EXCLUSIVE"><\/a><\/B> <DD> Only one process at a time will execute accesses$/;"	a
MPI_LOCK_SHARED	/usr/local/include/mpi.h	534;"	d
MPI_LOCK_SHARED	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_LOCK_SHARED <a name="MPI_LOCK_SHARED"><\/a><\/B> <DD> Not exclusive; multiple processes may execute accesses$/;"	a
MPI_LOGICAL	/usr/local/include/mpi.h	181;"	d
MPI_LOGICAL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_LOGICAL <a name="MPI_LOGICAL"><\/a><\/B> <DD> <tt>LOGICAL$/;"	a
MPI_LONG	/usr/local/include/mpi.h	150;"	d
MPI_LONG	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_LONG <a name="MPI_LONG"><\/a><\/B> <DD> long$/;"	a
MPI_LONG_DOUBLE	/usr/local/include/mpi.h	154;"	d
MPI_LONG_DOUBLE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_LONG_DOUBLE  <a name="MPI_LONG_DOUBLE"><\/a><\/B> <DD> long double (some systems may not implement this)$/;"	a
MPI_LONG_DOUBLE_INT	/usr/local/include/mpi.h	176;"	d
MPI_LONG_DOUBLE_INT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_LONG_DOUBLE_INT <a name="MPI_LONG_DOUBLE_INT"><\/a><\/B> <DD> <tt>struct { long double, int }<\/tt>; this$/;"	a
MPI_LONG_INT	/usr/local/include/mpi.h	173;"	d
MPI_LONG_INT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_LONG_INT  <a name="MPI_LONG_INT"><\/a><\/B> <DD> <tt>struct { long, int }$/;"	a
MPI_LONG_LONG	/usr/local/include/mpi.h	157;"	d
MPI_LONG_LONG	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_LONG_LONG <a name="MPI_LONG_LONG"><\/a><\/B> <DD> synonyn for <tt>MPI_LONG_LONG_INT$/;"	a
MPI_LONG_LONG_INT	/usr/local/include/mpi.h	155;"	d
MPI_LONG_LONG_INT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_LONG_LONG_INT <a name="MPI_LONG_LONG_INT"><\/a><\/B> <DD> long long$/;"	a
MPI_LOOKUP_NAME_T	/usr/local/include/mpi_proto.h	/^    MPI_LOOKUP_NAME_T,$/;"	e	enum:QMPI_Functions_enum
MPI_LOR	/usr/local/include/mpi.h	267;"	d
MPI_LOR	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_LOR <a name="MPI_LOR"><\/a><\/B> <DD> return the logical or$/;"	a
MPI_LXOR	/usr/local/include/mpi.h	269;"	d
MPI_LXOR	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_LXOR <a name="MPI_LXOR"><\/a><\/B> <DD> return the logical exclusive or$/;"	a
MPI_MAX	/usr/local/include/mpi.h	261;"	d
MPI_MAX	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MAX <a name="MPI_MAX"><\/a><\/B> <DD> return the maximum$/;"	a
MPI_MAXLOC	/usr/local/include/mpi.h	272;"	d
MPI_MAXLOC	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MAXLOC <a name="MPI_MAXLOC"><\/a><\/B> <DD> return the maximum and the location$/;"	a
MPI_MAX_DATAREP_STRING	/usr/local/include/mpio.h	112;"	d
MPI_MAX_ERROR_STRING	/usr/local/include/mpi.h	471;"	d
MPI_MAX_ERROR_STRING	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MAX_ERROR_STRING           <a name="MPI_MAX_ERROR_STRING"><\/a><\/B> <DD> Maximum length of string return by$/;"	a
MPI_MAX_INFO_KEY	/usr/local/include/mpi.h	476;"	d
MPI_MAX_INFO_KEY	/usr/local/include/mpio.h	81;"	d
MPI_MAX_INFO_KEY	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MAX_INFO_KEY               <a name="MPI_MAX_INFO_KEY"><\/a><\/B> <DD> Maximum length of an info key$/;"	a
MPI_MAX_INFO_VAL	/usr/local/include/mpi.h	477;"	d
MPI_MAX_INFO_VAL	/usr/local/include/mpio.h	82;"	d
MPI_MAX_INFO_VAL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MAX_INFO_VAL               <a name="MPI_MAX_INFO_VAL"><\/a><\/B> <DD> Maximum length of an info value$/;"	a
MPI_MAX_LIBRARY_VERSION_STRING	/usr/local/include/mpi.h	470;"	d
MPI_MAX_LIBRARY_VERSION_STRING	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MAX_LIBRARY_VERSION_STRING <a name="MPI_MAX_LIBRARY_VERSION_STRING"><\/a><\/B> <DD> Maximum length of string returned by$/;"	a
MPI_MAX_OBJECT_NAME	/usr/local/include/mpi.h	473;"	d
MPI_MAX_OBJECT_NAME	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MAX_OBJECT_NAME            <a name="MPI_MAX_OBJECT_NAME"><\/a><\/B> <DD> Maximum length of an object (?)$/;"	a
MPI_MAX_PORT_NAME	/usr/local/include/mpi.h	472;"	d
MPI_MAX_PORT_NAME	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MAX_PORT_NAME              <a name="MPI_MAX_PORT_NAME"><\/a><\/B> <DD> Maximum length of a port$/;"	a
MPI_MAX_PROCESSOR_NAME	/usr/local/include/mpi.h	469;"	d
MPI_MAX_PROCESSOR_NAME	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MAX_PROCESSOR_NAME         <a name="MPI_MAX_PROCESSOR_NAME"><\/a><\/B> <DD> Maximum length of name returned by$/;"	a
MPI_MAX_PSET_NAME_LEN	/usr/local/include/mpi.h	475;"	d
MPI_MAX_STRINGTAG_LEN	/usr/local/include/mpi.h	474;"	d
MPI_MESSAGE_C2F_T	/usr/local/include/mpi_proto.h	/^    MPI_MESSAGE_C2F_T,$/;"	e	enum:QMPI_Functions_enum
MPI_MESSAGE_F2C_T	/usr/local/include/mpi_proto.h	/^    MPI_MESSAGE_F2C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_MESSAGE_NO_PROC	/usr/local/include/mpi.h	137;"	d
MPI_MESSAGE_NULL	/usr/local/include/mpi.h	136;"	d
MPI_MESSAGE_NULL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MESSAGE_NULL       <a name="MPI_MESSAGE_NULL"><\/a><\/B> <DD> Null message handle$/;"	a
MPI_MIN	/usr/local/include/mpi.h	262;"	d
MPI_MIN	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MIN <a name="MPI_MIN"><\/a><\/B> <DD> return the minimum$/;"	a
MPI_MINLOC	/usr/local/include/mpi.h	271;"	d
MPI_MINLOC	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MINLOC <a name="MPI_MINLOC"><\/a><\/B> <DD> return the minimum and the location (actually, the value of$/;"	a
MPI_MODE_APPEND	/usr/local/include/mpio.h	92;"	d
MPI_MODE_APPEND	/usr/local/include/mpiof.h	/^      INTEGER MPI_MODE_APPEND, MPI_MODE_SEQUENTIAL$/;"	v
MPI_MODE_APPEND	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MODE_APPEND          <a name="MPI_MODE_APPEND"><\/a><\/B> <DD> The initial position of all file pointers is at$/;"	a
MPI_MODE_CREATE	/usr/local/include/mpio.h	88;"	d
MPI_MODE_CREATE	/usr/local/include/mpiof.h	/^      INTEGER MPI_MODE_CREATE, MPI_MODE_EXCL$/;"	v
MPI_MODE_CREATE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MODE_CREATE          <a name="MPI_MODE_CREATE"><\/a><\/B> <DD> Create the file if it does not exist$/;"	a
MPI_MODE_DELETE_ON_CLOSE	/usr/local/include/mpio.h	90;"	d
MPI_MODE_DELETE_ON_CLOSE	/usr/local/include/mpiof.h	/^      INTEGER MPI_MODE_DELETE_ON_CLOSE, MPI_MODE_UNIQUE_OPEN$/;"	v
MPI_MODE_DELETE_ON_CLOSE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MODE_DELETE_ON_CLOSE <a name="MPI_MODE_DELETE_ON_CLOSE"><\/a><\/B> <DD> Delete the file on close$/;"	a
MPI_MODE_EXCL	/usr/local/include/mpio.h	89;"	d
MPI_MODE_EXCL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MODE_EXCL            <a name="MPI_MODE_EXCL"><\/a><\/B> <DD> It is an error if creating a file that already$/;"	a
MPI_MODE_NOCHECK	/usr/local/include/mpi.h	569;"	d
MPI_MODE_NOCHECK	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MODE_NOCHECK      <a name="MPI_MODE_NOCHECK"><\/a><\/B> <DD> The matching calls to MPI_WIN_POST or MPI_WIN_START$/;"	a
MPI_MODE_NOPRECEDE	/usr/local/include/mpi.h	572;"	d
MPI_MODE_NOPRECEDE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MODE_NOPRECEDE    <a name="MPI_MODE_NOPRECEDE"><\/a><\/B> <DD> The fence does not complete any locally issued RMA$/;"	a
MPI_MODE_NOPUT	/usr/local/include/mpi.h	571;"	d
MPI_MODE_NOPUT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MODE_NOPUT        <a name="MPI_MODE_NOPUT"><\/a><\/B> <DD> The local window will not be updated by put or$/;"	a
MPI_MODE_NOSTORE	/usr/local/include/mpi.h	570;"	d
MPI_MODE_NOSTORE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MODE_NOSTORE      <a name="MPI_MODE_NOSTORE"><\/a><\/B> <DD> The local window has not been updated by stores$/;"	a
MPI_MODE_NOSUCCEED	/usr/local/include/mpi.h	573;"	d
MPI_MODE_NOSUCCEED	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MODE_NOSUCCEED    <a name="MPI_MODE_NOSUCCEED"><\/a><\/B> <DD> The fence does not start any locally issued RMA calls$/;"	a
MPI_MODE_RDONLY	/usr/local/include/mpio.h	85;"	d
MPI_MODE_RDONLY	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MODE_RDONLY          <a name="MPI_MODE_RDONLY"><\/a><\/B> <DD> Read only$/;"	a
MPI_MODE_RDWR	/usr/local/include/mpio.h	86;"	d
MPI_MODE_RDWR	/usr/local/include/mpiof.h	/^      INTEGER MPI_MODE_RDONLY, MPI_MODE_RDWR, MPI_MODE_WRONLY$/;"	v
MPI_MODE_RDWR	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MODE_RDWR            <a name="MPI_MODE_RDWR"><\/a><\/B> <DD> Read and write$/;"	a
MPI_MODE_SEQUENTIAL	/usr/local/include/mpio.h	93;"	d
MPI_MODE_SEQUENTIAL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MODE_SEQUENTIAL      <a name="MPI_MODE_SEQUENTIAL"><\/a><\/B> <DD> File will only be accessed sequentially$/;"	a
MPI_MODE_UNIQUE_OPEN	/usr/local/include/mpio.h	91;"	d
MPI_MODE_UNIQUE_OPEN	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MODE_UNIQUE_OPEN     <a name="MPI_MODE_UNIQUE_OPEN"><\/a><\/B> <DD> The file will not be concurrently opened elsewhere$/;"	a
MPI_MODE_WRONLY	/usr/local/include/mpio.h	87;"	d
MPI_MODE_WRONLY	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_MODE_WRONLY          <a name="MPI_MODE_WRONLY"><\/a><\/B> <DD> Write only$/;"	a
MPI_MPROBE_T	/usr/local/include/mpi_proto.h	/^    MPI_MPROBE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_MRECV_C_T	/usr/local/include/mpi_proto.h	/^    MPI_MRECV_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_MRECV_T	/usr/local/include/mpi_proto.h	/^    MPI_MRECV_T,$/;"	e	enum:QMPI_Functions_enum
MPI_Message	/usr/local/include/mpi.h	/^typedef int MPI_Message;$/;"	t
MPI_NEIGHBOR_ALLGATHERV_C_T	/usr/local/include/mpi_proto.h	/^    MPI_NEIGHBOR_ALLGATHERV_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_NEIGHBOR_ALLGATHERV_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_NEIGHBOR_ALLGATHERV_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_NEIGHBOR_ALLGATHERV_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_NEIGHBOR_ALLGATHERV_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_NEIGHBOR_ALLGATHERV_T	/usr/local/include/mpi_proto.h	/^    MPI_NEIGHBOR_ALLGATHERV_T,$/;"	e	enum:QMPI_Functions_enum
MPI_NEIGHBOR_ALLGATHER_C_T	/usr/local/include/mpi_proto.h	/^    MPI_NEIGHBOR_ALLGATHER_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_NEIGHBOR_ALLGATHER_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_NEIGHBOR_ALLGATHER_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_NEIGHBOR_ALLGATHER_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_NEIGHBOR_ALLGATHER_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_NEIGHBOR_ALLGATHER_T	/usr/local/include/mpi_proto.h	/^    MPI_NEIGHBOR_ALLGATHER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_NEIGHBOR_ALLTOALLV_C_T	/usr/local/include/mpi_proto.h	/^    MPI_NEIGHBOR_ALLTOALLV_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_NEIGHBOR_ALLTOALLV_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_NEIGHBOR_ALLTOALLV_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_NEIGHBOR_ALLTOALLV_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_NEIGHBOR_ALLTOALLV_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_NEIGHBOR_ALLTOALLV_T	/usr/local/include/mpi_proto.h	/^    MPI_NEIGHBOR_ALLTOALLV_T,$/;"	e	enum:QMPI_Functions_enum
MPI_NEIGHBOR_ALLTOALLW_C_T	/usr/local/include/mpi_proto.h	/^    MPI_NEIGHBOR_ALLTOALLW_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_NEIGHBOR_ALLTOALLW_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_NEIGHBOR_ALLTOALLW_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_NEIGHBOR_ALLTOALLW_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_NEIGHBOR_ALLTOALLW_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_NEIGHBOR_ALLTOALLW_T	/usr/local/include/mpi_proto.h	/^    MPI_NEIGHBOR_ALLTOALLW_T,$/;"	e	enum:QMPI_Functions_enum
MPI_NEIGHBOR_ALLTOALL_C_T	/usr/local/include/mpi_proto.h	/^    MPI_NEIGHBOR_ALLTOALL_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_NEIGHBOR_ALLTOALL_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_NEIGHBOR_ALLTOALL_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_NEIGHBOR_ALLTOALL_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_NEIGHBOR_ALLTOALL_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_NEIGHBOR_ALLTOALL_T	/usr/local/include/mpi_proto.h	/^    MPI_NEIGHBOR_ALLTOALL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_NO_OP	/usr/local/include/mpi.h	274;"	d
MPI_NO_OP	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_NO_OP <a name="MPI_NO_OP"><\/a><\/B> <DD> perform no operation$/;"	a
MPI_NULL_COPY_FN	/usr/local/include/mpi.h	790;"	d
MPI_NULL_COPY_FN	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_NULL_COPY_FN <a name="MPI_NULL_COPY_FN"><\/a><\/B> <DD> Predefined copy function$/;"	a
MPI_NULL_DELETE_FN	/usr/local/include/mpi.h	791;"	d
MPI_NULL_DELETE_FN	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_NULL_DELETE_FN <a name="MPI_NULL_DELETE_FN"><\/a><\/B> <DD> Predefined delete function$/;"	a
MPI_OFFSET	/usr/local/include/mpi.h	224;"	d
MPI_OFFSET	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_OFFSET <a name="MPI_OFFSET"><\/a><\/B> <DD> Datatype for an <tt>MPI_Offset$/;"	a
MPI_OPEN_PORT_T	/usr/local/include/mpi_proto.h	/^    MPI_OPEN_PORT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_OP_C2F_T	/usr/local/include/mpi_proto.h	/^    MPI_OP_C2F_T,$/;"	e	enum:QMPI_Functions_enum
MPI_OP_COMMUTATIVE_T	/usr/local/include/mpi_proto.h	/^    MPI_OP_COMMUTATIVE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_OP_CREATE_C_T	/usr/local/include/mpi_proto.h	/^    MPI_OP_CREATE_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_OP_CREATE_T	/usr/local/include/mpi_proto.h	/^    MPI_OP_CREATE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_OP_F2C_T	/usr/local/include/mpi_proto.h	/^    MPI_OP_F2C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_OP_FREE_T	/usr/local/include/mpi_proto.h	/^    MPI_OP_FREE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_OP_NULL	/usr/local/include/mpi.h	131;"	d
MPI_OP_NULL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_OP_NULL            <a name="MPI_OP_NULL"><\/a><\/B> <DD> Null operation$/;"	a
MPI_ORDER_C	/usr/local/include/mpi.h	561;"	d
MPI_ORDER_C	/usr/local/include/mpio.h	121;"	d
MPI_ORDER_C	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ORDER_C              <a name="MPI_ORDER_C"><\/a><\/B> <DD> Row-major order (as used by C)$/;"	a
MPI_ORDER_FORTRAN	/usr/local/include/mpi.h	562;"	d
MPI_ORDER_FORTRAN	/usr/local/include/mpio.h	122;"	d
MPI_ORDER_FORTRAN	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_ORDER_FORTRAN        <a name="MPI_ORDER_FORTRAN"><\/a><\/B> <DD> Column-major order (as used by Fortran)$/;"	a
MPI_Offset	/usr/local/include/mpi.h	/^static const MPI_Datatype mpich_mpi_offset MPICH_ATTR_TYPE_TAG(MPI_Offset) = MPI_OFFSET;$/;"	v
MPI_Offset	/usr/local/include/mpi.h	/^typedef long long MPI_Offset;$/;"	t
MPI_Offset	/usr/local/include/mpio.h	/^typedef long long MPI_Offset;$/;"	t
MPI_Offset	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_Offset <a name="MPI_Offset"><\/a><\/B> <DD> C type that holds any valid file offset.$/;"	a
MPI_Op	/usr/local/include/mpi.h	/^typedef int MPI_Op;$/;"	t
MPI_PACKED	/usr/local/include/mpi.h	159;"	d
MPI_PACKED	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_PACKED <a name="MPI_PACKED"><\/a><\/B> <DD> For <tt>MPI_Pack<\/tt> and <tt>MPI_Unpack$/;"	a
MPI_PACK_C_T	/usr/local/include/mpi_proto.h	/^    MPI_PACK_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_PACK_EXTERNAL_C_T	/usr/local/include/mpi_proto.h	/^    MPI_PACK_EXTERNAL_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_PACK_EXTERNAL_SIZE_C_T	/usr/local/include/mpi_proto.h	/^    MPI_PACK_EXTERNAL_SIZE_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_PACK_EXTERNAL_SIZE_T	/usr/local/include/mpi_proto.h	/^    MPI_PACK_EXTERNAL_SIZE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_PACK_EXTERNAL_T	/usr/local/include/mpi_proto.h	/^    MPI_PACK_EXTERNAL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_PACK_SIZE_C_T	/usr/local/include/mpi_proto.h	/^    MPI_PACK_SIZE_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_PACK_SIZE_T	/usr/local/include/mpi_proto.h	/^    MPI_PACK_SIZE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_PACK_T	/usr/local/include/mpi_proto.h	/^    MPI_PACK_T,$/;"	e	enum:QMPI_Functions_enum
MPI_PARRIVED_T	/usr/local/include/mpi_proto.h	/^    MPI_PARRIVED_T,$/;"	e	enum:QMPI_Functions_enum
MPI_PCONTROL_T	/usr/local/include/mpi_proto.h	/^    MPI_PCONTROL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_PREADY_LIST_T	/usr/local/include/mpi_proto.h	/^    MPI_PREADY_LIST_T,$/;"	e	enum:QMPI_Functions_enum
MPI_PREADY_RANGE_T	/usr/local/include/mpi_proto.h	/^    MPI_PREADY_RANGE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_PREADY_T	/usr/local/include/mpi_proto.h	/^    MPI_PREADY_T,$/;"	e	enum:QMPI_Functions_enum
MPI_PRECV_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_PRECV_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_PROBE_T	/usr/local/include/mpi_proto.h	/^    MPI_PROBE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_PROC_NULL	/usr/local/include/mpi.h	502;"	d
MPI_PROC_NULL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_PROC_NULL                  <a name="MPI_PROC_NULL"><\/a><\/B> <DD> This rank may be used to send or receive from no-one.$/;"	a
MPI_PROD	/usr/local/include/mpi.h	264;"	d
MPI_PROD	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_PROD <a name="MPI_PROD"><\/a><\/B> <DD> return the product$/;"	a
MPI_PROTO_H_INCLUDED	/usr/local/include/mpi_proto.h	9;"	d
MPI_PSEND_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_PSEND_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_PUBLISH_NAME_T	/usr/local/include/mpi_proto.h	/^    MPI_PUBLISH_NAME_T,$/;"	e	enum:QMPI_Functions_enum
MPI_PUT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_PUT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_PUT_T	/usr/local/include/mpi_proto.h	/^    MPI_PUT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_QUERY_THREAD_T	/usr/local/include/mpi_proto.h	/^    MPI_QUERY_THREAD_T,$/;"	e	enum:QMPI_Functions_enum
MPI_RACCUMULATE_C_T	/usr/local/include/mpi_proto.h	/^    MPI_RACCUMULATE_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_RACCUMULATE_T	/usr/local/include/mpi_proto.h	/^    MPI_RACCUMULATE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REAL	/usr/local/include/mpi.h	182;"	d
MPI_REAL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_REAL <a name="MPI_REAL"><\/a><\/B> <DD> <tt>REAL$/;"	a
MPI_REAL16	/usr/local/include/mpi.h	193;"	d
MPI_REAL4	/usr/local/include/mpi.h	191;"	d
MPI_REAL4	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_REAL4     <a name="MPI_REAL4"><\/a><\/B> <DD> <tt>real*4<\/tt> if supported$/;"	a
MPI_REAL8	/usr/local/include/mpi.h	192;"	d
MPI_REAL8	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_REAL8     <a name="MPI_REAL8"><\/a><\/B> <DD> <tt>real*8<\/tt> if supported$/;"	a
MPI_RECV_C_T	/usr/local/include/mpi_proto.h	/^    MPI_RECV_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_RECV_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_RECV_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_RECV_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_RECV_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_RECV_T	/usr/local/include/mpi_proto.h	/^    MPI_RECV_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REDUCE_C_T	/usr/local/include/mpi_proto.h	/^    MPI_REDUCE_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REDUCE_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_REDUCE_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REDUCE_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_REDUCE_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REDUCE_LOCAL_C_T	/usr/local/include/mpi_proto.h	/^    MPI_REDUCE_LOCAL_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REDUCE_LOCAL_T	/usr/local/include/mpi_proto.h	/^    MPI_REDUCE_LOCAL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REDUCE_SCATTER_BLOCK_C_T	/usr/local/include/mpi_proto.h	/^    MPI_REDUCE_SCATTER_BLOCK_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REDUCE_SCATTER_BLOCK_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_REDUCE_SCATTER_BLOCK_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REDUCE_SCATTER_BLOCK_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_REDUCE_SCATTER_BLOCK_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REDUCE_SCATTER_BLOCK_T	/usr/local/include/mpi_proto.h	/^    MPI_REDUCE_SCATTER_BLOCK_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REDUCE_SCATTER_C_T	/usr/local/include/mpi_proto.h	/^    MPI_REDUCE_SCATTER_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REDUCE_SCATTER_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_REDUCE_SCATTER_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REDUCE_SCATTER_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_REDUCE_SCATTER_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REDUCE_SCATTER_T	/usr/local/include/mpi_proto.h	/^    MPI_REDUCE_SCATTER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REDUCE_T	/usr/local/include/mpi_proto.h	/^    MPI_REDUCE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REMOVE_ERROR_CLASS_T	/usr/local/include/mpi_proto.h	/^    MPI_REMOVE_ERROR_CLASS_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REMOVE_ERROR_CODE_T	/usr/local/include/mpi_proto.h	/^    MPI_REMOVE_ERROR_CODE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REMOVE_ERROR_STRING_T	/usr/local/include/mpi_proto.h	/^    MPI_REMOVE_ERROR_STRING_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REPLACE	/usr/local/include/mpi.h	273;"	d
MPI_REPLACE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_REPLACE <a name="MPI_REPLACE"><\/a><\/B> <DD> replace b with a$/;"	a
MPI_REQUEST_C2F_T	/usr/local/include/mpi_proto.h	/^    MPI_REQUEST_C2F_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REQUEST_F2C_T	/usr/local/include/mpi_proto.h	/^    MPI_REQUEST_F2C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REQUEST_FREE_T	/usr/local/include/mpi_proto.h	/^    MPI_REQUEST_FREE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REQUEST_GET_STATUS_ALL_T	/usr/local/include/mpi_proto.h	/^    MPI_REQUEST_GET_STATUS_ALL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REQUEST_GET_STATUS_ANY_T	/usr/local/include/mpi_proto.h	/^    MPI_REQUEST_GET_STATUS_ANY_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REQUEST_GET_STATUS_SOME_T	/usr/local/include/mpi_proto.h	/^    MPI_REQUEST_GET_STATUS_SOME_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REQUEST_GET_STATUS_T	/usr/local/include/mpi_proto.h	/^    MPI_REQUEST_GET_STATUS_T,$/;"	e	enum:QMPI_Functions_enum
MPI_REQUEST_NULL	/usr/local/include/mpi.h	134;"	d
MPI_REQUEST_NULL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_REQUEST_NULL       <a name="MPI_REQUEST_NULL"><\/a><\/B> <DD> Null request$/;"	a
MPI_RGET_ACCUMULATE_C_T	/usr/local/include/mpi_proto.h	/^    MPI_RGET_ACCUMULATE_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_RGET_ACCUMULATE_T	/usr/local/include/mpi_proto.h	/^    MPI_RGET_ACCUMULATE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_RGET_C_T	/usr/local/include/mpi_proto.h	/^    MPI_RGET_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_RGET_T	/usr/local/include/mpi_proto.h	/^    MPI_RGET_T,$/;"	e	enum:QMPI_Functions_enum
MPI_ROOT	/usr/local/include/mpi.h	504;"	d
MPI_RPUT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_RPUT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_RPUT_T	/usr/local/include/mpi_proto.h	/^    MPI_RPUT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_RSEND_C_T	/usr/local/include/mpi_proto.h	/^    MPI_RSEND_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_RSEND_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_RSEND_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_RSEND_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_RSEND_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_RSEND_T	/usr/local/include/mpi_proto.h	/^    MPI_RSEND_T,$/;"	e	enum:QMPI_Functions_enum
MPI_Request	/usr/local/include/mpi.h	/^typedef int MPI_Request;$/;"	t
MPI_SCAN_C_T	/usr/local/include/mpi_proto.h	/^    MPI_SCAN_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SCAN_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_SCAN_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SCAN_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_SCAN_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SCAN_T	/usr/local/include/mpi_proto.h	/^    MPI_SCAN_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SCATTERV_C_T	/usr/local/include/mpi_proto.h	/^    MPI_SCATTERV_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SCATTERV_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_SCATTERV_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SCATTERV_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_SCATTERV_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SCATTERV_T	/usr/local/include/mpi_proto.h	/^    MPI_SCATTERV_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SCATTER_C_T	/usr/local/include/mpi_proto.h	/^    MPI_SCATTER_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SCATTER_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_SCATTER_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SCATTER_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_SCATTER_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SCATTER_T	/usr/local/include/mpi_proto.h	/^    MPI_SCATTER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SEEK_CUR	/usr/local/include/mpio.h	106;"	d
MPI_SEEK_CUR	/usr/local/include/mpiof.h	/^      INTEGER MPI_SEEK_SET, MPI_SEEK_CUR, MPI_SEEK_END$/;"	v
MPI_SEEK_CUR	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_SEEK_CUR             <a name="MPI_SEEK_CUR"><\/a><\/B> <DD> Set the pointer to the current position plus <tt>offset$/;"	a
MPI_SEEK_END	/usr/local/include/mpio.h	107;"	d
MPI_SEEK_END	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_SEEK_END             <a name="MPI_SEEK_END"><\/a><\/B> <DD> Set the pointer to the end of the file plus <tt>offset$/;"	a
MPI_SEEK_SET	/usr/local/include/mpio.h	105;"	d
MPI_SEEK_SET	/usr/local/include/mpiof.h	/^      INTEGER MPI_SEEK_SET, MPI_SEEK_CUR, MPI_SEEK_END$/;"	v
MPI_SEEK_SET	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_SEEK_SET             <a name="MPI_SEEK_SET"><\/a><\/B> <DD> Set the pointer to <tt>offset$/;"	a
MPI_SENDRECV_C_T	/usr/local/include/mpi_proto.h	/^    MPI_SENDRECV_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SENDRECV_REPLACE_C_T	/usr/local/include/mpi_proto.h	/^    MPI_SENDRECV_REPLACE_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SENDRECV_REPLACE_T	/usr/local/include/mpi_proto.h	/^    MPI_SENDRECV_REPLACE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SENDRECV_T	/usr/local/include/mpi_proto.h	/^    MPI_SENDRECV_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SEND_C_T	/usr/local/include/mpi_proto.h	/^    MPI_SEND_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SEND_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_SEND_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SEND_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_SEND_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SEND_T	/usr/local/include/mpi_proto.h	/^    MPI_SEND_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SESSION_ATTACH_BUFFER_C_T	/usr/local/include/mpi_proto.h	/^    MPI_SESSION_ATTACH_BUFFER_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SESSION_ATTACH_BUFFER_T	/usr/local/include/mpi_proto.h	/^    MPI_SESSION_ATTACH_BUFFER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SESSION_C2F_T	/usr/local/include/mpi_proto.h	/^    MPI_SESSION_C2F_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SESSION_CALL_ERRHANDLER_T	/usr/local/include/mpi_proto.h	/^    MPI_SESSION_CALL_ERRHANDLER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SESSION_CREATE_ERRHANDLER_T	/usr/local/include/mpi_proto.h	/^    MPI_SESSION_CREATE_ERRHANDLER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SESSION_DETACH_BUFFER_C_T	/usr/local/include/mpi_proto.h	/^    MPI_SESSION_DETACH_BUFFER_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SESSION_DETACH_BUFFER_T	/usr/local/include/mpi_proto.h	/^    MPI_SESSION_DETACH_BUFFER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SESSION_F2C_T	/usr/local/include/mpi_proto.h	/^    MPI_SESSION_F2C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SESSION_FINALIZE_T	/usr/local/include/mpi_proto.h	/^    MPI_SESSION_FINALIZE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SESSION_FLUSH_BUFFER_T	/usr/local/include/mpi_proto.h	/^    MPI_SESSION_FLUSH_BUFFER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SESSION_GET_ERRHANDLER_T	/usr/local/include/mpi_proto.h	/^    MPI_SESSION_GET_ERRHANDLER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SESSION_GET_INFO_T	/usr/local/include/mpi_proto.h	/^    MPI_SESSION_GET_INFO_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SESSION_GET_NTH_PSET_T	/usr/local/include/mpi_proto.h	/^    MPI_SESSION_GET_NTH_PSET_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SESSION_GET_NUM_PSETS_T	/usr/local/include/mpi_proto.h	/^    MPI_SESSION_GET_NUM_PSETS_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SESSION_GET_PSET_INFO_T	/usr/local/include/mpi_proto.h	/^    MPI_SESSION_GET_PSET_INFO_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SESSION_IFLUSH_BUFFER_T	/usr/local/include/mpi_proto.h	/^    MPI_SESSION_IFLUSH_BUFFER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SESSION_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_SESSION_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SESSION_NULL	/usr/local/include/mpi.h	248;"	d
MPI_SESSION_SET_ERRHANDLER_T	/usr/local/include/mpi_proto.h	/^    MPI_SESSION_SET_ERRHANDLER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SHORT	/usr/local/include/mpi.h	146;"	d
MPI_SHORT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_SHORT <a name="MPI_SHORT"><\/a><\/B> <DD> short$/;"	a
MPI_SHORT_INT	/usr/local/include/mpi.h	174;"	d
MPI_SHORT_INT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_SHORT_INT  <a name="MPI_SHORT_INT"><\/a><\/B> <DD> <tt>struct { short, int }$/;"	a
MPI_SIGNED_CHAR	/usr/local/include/mpi.h	142;"	d
MPI_SIGNED_CHAR	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_SIGNED_CHAR <a name="MPI_SIGNED_CHAR"><\/a><\/B> <DD> signed char$/;"	a
MPI_SIMILAR	/usr/local/include/mpi.h	525;"	d
MPI_SIMILAR	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_SIMILAR <a name="MPI_SIMILAR"><\/a><\/B> <DD> Same members, but in a different order$/;"	a
MPI_SOURCE	/usr/local/include/mpi.h	/^    MPI_Fint MPI_SOURCE;$/;"	m	struct:__anon1
MPI_SOURCE	/usr/local/include/mpi.h	/^    int MPI_SOURCE;$/;"	m	struct:MPI_Status
MPI_SOURCE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_SOURCE <a name="MPI_SOURCE"><\/a><\/B> <DD> Who sent the message$/;"	a
MPI_SSEND_C_T	/usr/local/include/mpi_proto.h	/^    MPI_SSEND_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SSEND_INIT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_SSEND_INIT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SSEND_INIT_T	/usr/local/include/mpi_proto.h	/^    MPI_SSEND_INIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SSEND_T	/usr/local/include/mpi_proto.h	/^    MPI_SSEND_T,$/;"	e	enum:QMPI_Functions_enum
MPI_STARTALL_T	/usr/local/include/mpi_proto.h	/^    MPI_STARTALL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_START_T	/usr/local/include/mpi_proto.h	/^    MPI_START_T,$/;"	e	enum:QMPI_Functions_enum
MPI_STATUSES_IGNORE	/usr/local/include/mpi.h	514;"	d
MPI_STATUSES_IGNORE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_STATUSES_IGNORE <a name="MPI_STATUSES_IGNORE"><\/a><\/B> <DD> Ignore an array of <tt>MPI_Status$/;"	a
MPI_STATUS_C2F08_T	/usr/local/include/mpi_proto.h	/^    MPI_STATUS_C2F08_T,$/;"	e	enum:QMPI_Functions_enum
MPI_STATUS_C2F_T	/usr/local/include/mpi_proto.h	/^    MPI_STATUS_C2F_T,$/;"	e	enum:QMPI_Functions_enum
MPI_STATUS_F082C_T	/usr/local/include/mpi_proto.h	/^    MPI_STATUS_F082C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_STATUS_F082F_T	/usr/local/include/mpi_proto.h	/^    MPI_STATUS_F082F_T,$/;"	e	enum:QMPI_Functions_enum
MPI_STATUS_F2C_T	/usr/local/include/mpi_proto.h	/^    MPI_STATUS_F2C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_STATUS_F2F08_T	/usr/local/include/mpi_proto.h	/^    MPI_STATUS_F2F08_T,$/;"	e	enum:QMPI_Functions_enum
MPI_STATUS_GET_ERROR_T	/usr/local/include/mpi_proto.h	/^    MPI_STATUS_GET_ERROR_T,$/;"	e	enum:QMPI_Functions_enum
MPI_STATUS_GET_SOURCE_T	/usr/local/include/mpi_proto.h	/^    MPI_STATUS_GET_SOURCE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_STATUS_GET_TAG_T	/usr/local/include/mpi_proto.h	/^    MPI_STATUS_GET_TAG_T,$/;"	e	enum:QMPI_Functions_enum
MPI_STATUS_IGNORE	/usr/local/include/mpi.h	513;"	d
MPI_STATUS_IGNORE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_STATUS_IGNORE   <a name="MPI_STATUS_IGNORE"><\/a><\/B> <DD> Ignore a single <tt>MPI_Status<\/tt> argument$/;"	a
MPI_STATUS_SET_CANCELLED_T	/usr/local/include/mpi_proto.h	/^    MPI_STATUS_SET_CANCELLED_T,$/;"	e	enum:QMPI_Functions_enum
MPI_STATUS_SET_ELEMENTS_C_T	/usr/local/include/mpi_proto.h	/^    MPI_STATUS_SET_ELEMENTS_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_STATUS_SET_ELEMENTS_T	/usr/local/include/mpi_proto.h	/^    MPI_STATUS_SET_ELEMENTS_T,$/;"	e	enum:QMPI_Functions_enum
MPI_STATUS_SET_ELEMENTS_X_T	/usr/local/include/mpi_proto.h	/^    MPI_STATUS_SET_ELEMENTS_X_T,$/;"	e	enum:QMPI_Functions_enum
MPI_STATUS_SET_ERROR_T	/usr/local/include/mpi_proto.h	/^    MPI_STATUS_SET_ERROR_T,$/;"	e	enum:QMPI_Functions_enum
MPI_STATUS_SET_SOURCE_T	/usr/local/include/mpi_proto.h	/^    MPI_STATUS_SET_SOURCE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_STATUS_SET_TAG_T	/usr/local/include/mpi_proto.h	/^    MPI_STATUS_SET_TAG_T,$/;"	e	enum:QMPI_Functions_enum
MPI_SUBVERSION	/usr/local/include/mpi.h	19;"	d
MPI_SUBVERSION	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_SUBVERSION                 <a name="MPI_SUBVERSION"><\/a><\/B> <DD> Numeric value of MPI subversion (e.g., 1)$/;"	a
MPI_SUCCESS	/usr/local/include/mpi.h	591;"	d
MPI_SUCCESS	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_SUCCESS               <a name="MPI_SUCCESS"><\/a><\/B> <DD> Successful return code$/;"	a
MPI_SUM	/usr/local/include/mpi.h	263;"	d
MPI_SUM	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_SUM <a name="MPI_SUM"><\/a><\/B> <DD> return the sum$/;"	a
MPI_Session	/usr/local/include/mpi.h	/^typedef int MPI_Session;$/;"	t
MPI_Session_errhandler_fn	/usr/local/include/mpi.h	/^typedef MPI_Session_errhandler_function MPI_Session_errhandler_fn;$/;"	t
MPI_Session_errhandler_function	/usr/local/include/mpi.h	/^typedef void (MPI_Session_errhandler_function)(MPI_Session *, int *, ...);$/;"	t
MPI_Status	/usr/local/include/mpi.h	/^typedef struct MPI_Status {$/;"	s
MPI_Status	/usr/local/include/mpi.h	/^} MPI_Status;$/;"	t	typeref:struct:MPI_Status
MPI_TAG	/usr/local/include/mpi.h	/^    MPI_Fint MPI_TAG;$/;"	m	struct:__anon1
MPI_TAG	/usr/local/include/mpi.h	/^    int MPI_TAG;$/;"	m	struct:MPI_Status
MPI_TAG	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_TAG <a name="MPI_TAG"><\/a><\/B> <DD> What tag the message was sent with$/;"	a
MPI_TAG_UB	/usr/local/include/mpi.h	323;"	d
MPI_TAG_UB	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_TAG_UB <a name="MPI_TAG_UB"><\/a><\/B> <DD> Largest tag value$/;"	a
MPI_TESTALL_T	/usr/local/include/mpi_proto.h	/^    MPI_TESTALL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TESTANY_T	/usr/local/include/mpi_proto.h	/^    MPI_TESTANY_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TESTSOME_T	/usr/local/include/mpi_proto.h	/^    MPI_TESTSOME_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TEST_CANCELLED_T	/usr/local/include/mpi_proto.h	/^    MPI_TEST_CANCELLED_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TEST_T	/usr/local/include/mpi_proto.h	/^    MPI_TEST_T,$/;"	e	enum:QMPI_Functions_enum
MPI_THREAD_FUNNELED	/usr/local/include/mpi.h	586;"	d
MPI_THREAD_FUNNELED	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_THREAD_FUNNELED   <a name="MPI_THREAD_FUNNELED"><\/a><\/B> <DD> Only the main thread makes MPI calls$/;"	a
MPI_THREAD_MULTIPLE	/usr/local/include/mpi.h	588;"	d
MPI_THREAD_MULTIPLE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_THREAD_MULTIPLE   <a name="MPI_THREAD_MULTIPLE"><\/a><\/B> <DD> Multiple threads may make MPI calls$/;"	a
MPI_THREAD_SERIALIZED	/usr/local/include/mpi.h	587;"	d
MPI_THREAD_SERIALIZED	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_THREAD_SERIALIZED <a name="MPI_THREAD_SERIALIZED"><\/a><\/B> <DD> Only one thread at a time makes MPI calls$/;"	a
MPI_THREAD_SINGLE	/usr/local/include/mpi.h	585;"	d
MPI_THREAD_SINGLE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_THREAD_SINGLE     <a name="MPI_THREAD_SINGLE"><\/a><\/B> <DD> Only one thread executes$/;"	a
MPI_TOPO_TEST_T	/usr/local/include/mpi_proto.h	/^    MPI_TOPO_TEST_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPECLASS_COMPLEX	/usr/local/include/mpi.h	531;"	d
MPI_TYPECLASS_COMPLEX	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_TYPECLASS_COMPLEX <a name="MPI_TYPECLASS_COMPLEX"><\/a><\/B> <DD> <tt>COMPLEX$/;"	a
MPI_TYPECLASS_INTEGER	/usr/local/include/mpi.h	530;"	d
MPI_TYPECLASS_INTEGER	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_TYPECLASS_INTEGER <a name="MPI_TYPECLASS_INTEGER"><\/a><\/B> <DD> <tt>INTEGER$/;"	a
MPI_TYPECLASS_REAL	/usr/local/include/mpi.h	529;"	d
MPI_TYPECLASS_REAL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_TYPECLASS_REAL    <a name="MPI_TYPECLASS_REAL"><\/a><\/B> <DD> <tt>REAL$/;"	a
MPI_TYPE_C2F_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_C2F_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_COMMIT_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_COMMIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_CONTIGUOUS_C_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_CONTIGUOUS_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_CONTIGUOUS_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_CONTIGUOUS_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_CREATE_DARRAY_C_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_CREATE_DARRAY_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_CREATE_DARRAY_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_CREATE_DARRAY_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_CREATE_F90_COMPLEX_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_CREATE_F90_COMPLEX_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_CREATE_F90_INTEGER_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_CREATE_F90_INTEGER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_CREATE_F90_REAL_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_CREATE_F90_REAL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_CREATE_HINDEXED_BLOCK_C_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_CREATE_HINDEXED_BLOCK_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_CREATE_HINDEXED_BLOCK_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_CREATE_HINDEXED_BLOCK_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_CREATE_HINDEXED_C_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_CREATE_HINDEXED_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_CREATE_HINDEXED_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_CREATE_HINDEXED_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_CREATE_HVECTOR_C_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_CREATE_HVECTOR_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_CREATE_HVECTOR_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_CREATE_HVECTOR_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_CREATE_INDEXED_BLOCK_C_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_CREATE_INDEXED_BLOCK_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_CREATE_INDEXED_BLOCK_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_CREATE_INDEXED_BLOCK_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_CREATE_KEYVAL_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_CREATE_KEYVAL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_CREATE_RESIZED_C_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_CREATE_RESIZED_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_CREATE_RESIZED_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_CREATE_RESIZED_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_CREATE_STRUCT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_CREATE_STRUCT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_CREATE_STRUCT_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_CREATE_STRUCT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_CREATE_SUBARRAY_C_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_CREATE_SUBARRAY_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_CREATE_SUBARRAY_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_CREATE_SUBARRAY_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_DELETE_ATTR_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_DELETE_ATTR_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_DUP_FN	/usr/local/include/mpi.h	802;"	d
MPI_TYPE_DUP_FN	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_TYPE_DUP_FN <a name="MPI_TYPE_DUP_FN"><\/a><\/B> <DD> Predefined attribute duplicate function for datatypes$/;"	a
MPI_TYPE_DUP_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_DUP_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_EXTENT_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_EXTENT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_F2C_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_F2C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_FREE_KEYVAL_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_FREE_KEYVAL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_FREE_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_FREE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_GET_ATTR_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_GET_ATTR_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_GET_CONTENTS_C_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_GET_CONTENTS_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_GET_CONTENTS_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_GET_CONTENTS_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_GET_ENVELOPE_C_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_GET_ENVELOPE_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_GET_ENVELOPE_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_GET_ENVELOPE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_GET_EXTENT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_GET_EXTENT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_GET_EXTENT_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_GET_EXTENT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_GET_EXTENT_X_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_GET_EXTENT_X_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_GET_NAME_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_GET_NAME_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_GET_TRUE_EXTENT_C_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_GET_TRUE_EXTENT_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_GET_TRUE_EXTENT_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_GET_TRUE_EXTENT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_GET_TRUE_EXTENT_X_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_GET_TRUE_EXTENT_X_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_GET_VALUE_INDEX_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_GET_VALUE_INDEX_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_HINDEXED_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_HINDEXED_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_HVECTOR_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_HVECTOR_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_INDEXED_C_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_INDEXED_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_INDEXED_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_INDEXED_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_LB_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_LB_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_MATCH_SIZE_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_MATCH_SIZE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_NULL_COPY_FN	/usr/local/include/mpi.h	800;"	d
MPI_TYPE_NULL_COPY_FN	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_TYPE_NULL_COPY_FN <a name="MPI_TYPE_NULL_COPY_FN"><\/a><\/B> <DD> Predefined attribute copy function for datatypes$/;"	a
MPI_TYPE_NULL_DELETE_FN	/usr/local/include/mpi.h	801;"	d
MPI_TYPE_NULL_DELETE_FN	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_TYPE_NULL_DELETE_FN <a name="MPI_TYPE_NULL_DELETE_FN"><\/a><\/B> <DD> Predefined attribute delete function for datatypes$/;"	a
MPI_TYPE_SET_ATTR_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_SET_ATTR_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_SET_NAME_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_SET_NAME_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_SIZE_C_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_SIZE_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_SIZE_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_SIZE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_SIZE_X_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_SIZE_X_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_STRUCT_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_STRUCT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_UB_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_UB_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_VECTOR_C_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_VECTOR_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_TYPE_VECTOR_T	/usr/local/include/mpi_proto.h	/^    MPI_TYPE_VECTOR_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_BIND_INVALID	/usr/local/include/mpi.h	/^    MPI_T_BIND_INVALID = 0,$/;"	e	enum:MPIR_T_bind_t
MPI_T_BIND_MPI_COMM	/usr/local/include/mpi.h	/^    MPI_T_BIND_MPI_COMM,$/;"	e	enum:MPIR_T_bind_t
MPI_T_BIND_MPI_COMM	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_BIND_MPI_COMM            <a name="MPI_T_BIND_MPI_COMM"><\/a><\/B> <DD> MPI communicators$/;"	a
MPI_T_BIND_MPI_DATATYPE	/usr/local/include/mpi.h	/^    MPI_T_BIND_MPI_DATATYPE,$/;"	e	enum:MPIR_T_bind_t
MPI_T_BIND_MPI_DATATYPE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_BIND_MPI_DATATYPE        <a name="MPI_T_BIND_MPI_DATATYPE"><\/a><\/B> <DD> MPI datatypes$/;"	a
MPI_T_BIND_MPI_ERRHANDLER	/usr/local/include/mpi.h	/^    MPI_T_BIND_MPI_ERRHANDLER,$/;"	e	enum:MPIR_T_bind_t
MPI_T_BIND_MPI_ERRHANDLER	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_BIND_MPI_ERRHANDLER      <a name="MPI_T_BIND_MPI_ERRHANDLER"><\/a><\/B> <DD> MPI error handlers$/;"	a
MPI_T_BIND_MPI_FILE	/usr/local/include/mpi.h	/^    MPI_T_BIND_MPI_FILE,$/;"	e	enum:MPIR_T_bind_t
MPI_T_BIND_MPI_FILE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_BIND_MPI_FILE            <a name="MPI_T_BIND_MPI_FILE"><\/a><\/B> <DD> MPI file handles$/;"	a
MPI_T_BIND_MPI_GROUP	/usr/local/include/mpi.h	/^    MPI_T_BIND_MPI_GROUP,$/;"	e	enum:MPIR_T_bind_t
MPI_T_BIND_MPI_GROUP	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_BIND_MPI_GROUP           <a name="MPI_T_BIND_MPI_GROUP"><\/a><\/B> <DD> MPI groups$/;"	a
MPI_T_BIND_MPI_INFO	/usr/local/include/mpi.h	/^    MPI_T_BIND_MPI_INFO,$/;"	e	enum:MPIR_T_bind_t
MPI_T_BIND_MPI_INFO	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_BIND_MPI_INFO            <a name="MPI_T_BIND_MPI_INFO"><\/a><\/B> <DD> MPI info object$/;"	a
MPI_T_BIND_MPI_MESSAGE	/usr/local/include/mpi.h	/^    MPI_T_BIND_MPI_MESSAGE,$/;"	e	enum:MPIR_T_bind_t
MPI_T_BIND_MPI_MESSAGE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_BIND_MPI_MESSAGE         <a name="MPI_T_BIND_MPI_MESSAGE"><\/a><\/B> <DD> MPI message object$/;"	a
MPI_T_BIND_MPI_OP	/usr/local/include/mpi.h	/^    MPI_T_BIND_MPI_OP,$/;"	e	enum:MPIR_T_bind_t
MPI_T_BIND_MPI_OP	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_BIND_MPI_OP              <a name="MPI_T_BIND_MPI_OP"><\/a><\/B> <DD> MPI reduction operators$/;"	a
MPI_T_BIND_MPI_REQUEST	/usr/local/include/mpi.h	/^    MPI_T_BIND_MPI_REQUEST,$/;"	e	enum:MPIR_T_bind_t
MPI_T_BIND_MPI_REQUEST	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_BIND_MPI_REQUEST         <a name="MPI_T_BIND_MPI_REQUEST"><\/a><\/B> <DD> MPI requests$/;"	a
MPI_T_BIND_MPI_SESSION	/usr/local/include/mpi.h	/^    MPI_T_BIND_MPI_SESSION$/;"	e	enum:MPIR_T_bind_t
MPI_T_BIND_MPI_SESSION	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_BIND_MPI_SESSION         <a name="MPI_T_BIND_MPI_SESSION"><\/a><\/B> <DD> MPI session object$/;"	a
MPI_T_BIND_MPI_WIN	/usr/local/include/mpi.h	/^    MPI_T_BIND_MPI_WIN,$/;"	e	enum:MPIR_T_bind_t
MPI_T_BIND_MPI_WIN	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_BIND_MPI_WIN             <a name="MPI_T_BIND_MPI_WIN"><\/a><\/B> <DD> MPI windows for one-sided communication$/;"	a
MPI_T_BIND_NO_OBJECT	/usr/local/include/mpi.h	/^    MPI_T_BIND_NO_OBJECT = 9700,$/;"	e	enum:MPIR_T_bind_t
MPI_T_BIND_NO_OBJECT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_BIND_NO_OBJECT           <a name="MPI_T_BIND_NO_OBJECT"><\/a><\/B> <DD> Applies globally to entire MPI process$/;"	a
MPI_T_CATEGORY_CHANGED_T	/usr/local/include/mpi_proto.h	/^    MPI_T_CATEGORY_CHANGED_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_CATEGORY_GET_CATEGORIES_T	/usr/local/include/mpi_proto.h	/^    MPI_T_CATEGORY_GET_CATEGORIES_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_CATEGORY_GET_CVARS_T	/usr/local/include/mpi_proto.h	/^    MPI_T_CATEGORY_GET_CVARS_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_CATEGORY_GET_EVENTS_T	/usr/local/include/mpi_proto.h	/^    MPI_T_CATEGORY_GET_EVENTS_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_CATEGORY_GET_INDEX_T	/usr/local/include/mpi_proto.h	/^    MPI_T_CATEGORY_GET_INDEX_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_CATEGORY_GET_INFO_T	/usr/local/include/mpi_proto.h	/^    MPI_T_CATEGORY_GET_INFO_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_CATEGORY_GET_NUM_EVENTS_T	/usr/local/include/mpi_proto.h	/^    MPI_T_CATEGORY_GET_NUM_EVENTS_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_CATEGORY_GET_NUM_T	/usr/local/include/mpi_proto.h	/^    MPI_T_CATEGORY_GET_NUM_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_CATEGORY_GET_PVARS_T	/usr/local/include/mpi_proto.h	/^    MPI_T_CATEGORY_GET_PVARS_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_CB_REQUIRE_ASYNC_SIGNAL_SAFE	/usr/local/include/mpi.h	/^    MPI_T_CB_REQUIRE_ASYNC_SIGNAL_SAFE$/;"	e	enum:MPI_T_cb_safety
MPI_T_CB_REQUIRE_MPI_RESTRICTED	/usr/local/include/mpi.h	/^    MPI_T_CB_REQUIRE_MPI_RESTRICTED,$/;"	e	enum:MPI_T_cb_safety
MPI_T_CB_REQUIRE_NONE	/usr/local/include/mpi.h	/^    MPI_T_CB_REQUIRE_NONE = 0,$/;"	e	enum:MPI_T_cb_safety
MPI_T_CB_REQUIRE_THREAD_SAFE	/usr/local/include/mpi.h	/^    MPI_T_CB_REQUIRE_THREAD_SAFE,$/;"	e	enum:MPI_T_cb_safety
MPI_T_CVAR_GET_INDEX_T	/usr/local/include/mpi_proto.h	/^    MPI_T_CVAR_GET_INDEX_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_CVAR_GET_INFO_T	/usr/local/include/mpi_proto.h	/^    MPI_T_CVAR_GET_INFO_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_CVAR_GET_NUM_T	/usr/local/include/mpi_proto.h	/^    MPI_T_CVAR_GET_NUM_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_CVAR_HANDLE_ALLOC_T	/usr/local/include/mpi_proto.h	/^    MPI_T_CVAR_HANDLE_ALLOC_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_CVAR_HANDLE_FREE_T	/usr/local/include/mpi_proto.h	/^    MPI_T_CVAR_HANDLE_FREE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_CVAR_HANDLE_NULL	/usr/local/include/mpi.h	826;"	d
MPI_T_CVAR_HANDLE_NULL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_CVAR_HANDLE_NULL <a name="MPI_T_CVAR_HANDLE_NULL"><\/a><\/B> <DD> Null MPI_T control variable handle$/;"	a
MPI_T_CVAR_READ_T	/usr/local/include/mpi_proto.h	/^    MPI_T_CVAR_READ_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_CVAR_WRITE_T	/usr/local/include/mpi_proto.h	/^    MPI_T_CVAR_WRITE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_ENUM_GET_INFO_T	/usr/local/include/mpi_proto.h	/^    MPI_T_ENUM_GET_INFO_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_ENUM_GET_ITEM_T	/usr/local/include/mpi_proto.h	/^    MPI_T_ENUM_GET_ITEM_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_ENUM_NULL	/usr/local/include/mpi.h	825;"	d
MPI_T_ENUM_NULL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_ENUM_NULL        <a name="MPI_T_ENUM_NULL"><\/a><\/B> <DD> Null MPI_T enum$/;"	a
MPI_T_ERR_CANNOT_INIT	/usr/local/include/mpi.h	673;"	d
MPI_T_ERR_CANNOT_INIT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_ERR_CANNOT_INIT       <a name="MPI_T_ERR_CANNOT_INIT"><\/a><\/B> <DD> Interface not in the state to be initialized$/;"	a
MPI_T_ERR_CVAR_SET_NEVER	/usr/local/include/mpi.h	684;"	d
MPI_T_ERR_CVAR_SET_NEVER	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_ERR_CVAR_SET_NEVER    <a name="MPI_T_ERR_CVAR_SET_NEVER"><\/a><\/B> <DD> Cvar cannot be set until end of execution$/;"	a
MPI_T_ERR_CVAR_SET_NOT_NOW	/usr/local/include/mpi.h	683;"	d
MPI_T_ERR_CVAR_SET_NOT_NOW	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_ERR_CVAR_SET_NOT_NOW  <a name="MPI_T_ERR_CVAR_SET_NOT_NOW"><\/a><\/B> <DD> Cvar cannot be set at this moment$/;"	a
MPI_T_ERR_INVALID	/usr/local/include/mpi.h	690;"	d
MPI_T_ERR_INVALID	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_ERR_INVALID           <a name="MPI_T_ERR_INVALID"><\/a><\/B> <DD> Invalid use of the interface or bad parameter$/;"	a
MPI_T_ERR_INVALID_HANDLE	/usr/local/include/mpi.h	679;"	d
MPI_T_ERR_INVALID_HANDLE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_ERR_INVALID_HANDLE    <a name="MPI_T_ERR_INVALID_HANDLE"><\/a><\/B> <DD> The handle is invalid$/;"	a
MPI_T_ERR_INVALID_INDEX	/usr/local/include/mpi.h	675;"	d
MPI_T_ERR_INVALID_INDEX	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_ERR_INVALID_INDEX     <a name="MPI_T_ERR_INVALID_INDEX"><\/a><\/B> <DD> The index is invalid or has been deleted$/;"	a
MPI_T_ERR_INVALID_ITEM	/usr/local/include/mpi.h	677;"	d
MPI_T_ERR_INVALID_NAME	/usr/local/include/mpi.h	689;"	d
MPI_T_ERR_INVALID_NAME	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_ERR_INVALID_NAME      <a name="MPI_T_ERR_INVALID_NAME"><\/a><\/B> <DD> Name doesn't match$/;"	a
MPI_T_ERR_INVALID_SESSION	/usr/local/include/mpi.h	682;"	d
MPI_T_ERR_INVALID_SESSION	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_ERR_INVALID_SESSION   <a name="MPI_T_ERR_INVALID_SESSION"><\/a><\/B> <DD> Session argument is not valid$/;"	a
MPI_T_ERR_MEMORY	/usr/local/include/mpi.h	671;"	d
MPI_T_ERR_MEMORY	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_ERR_MEMORY            <a name="MPI_T_ERR_MEMORY"><\/a><\/B> <DD> Out of memory$/;"	a
MPI_T_ERR_NOT_ACCESSIBLE	/usr/local/include/mpi.h	697;"	d
MPI_T_ERR_NOT_INITIALIZED	/usr/local/include/mpi.h	672;"	d
MPI_T_ERR_NOT_INITIALIZED	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_ERR_NOT_INITIALIZED   <a name="MPI_T_ERR_NOT_INITIALIZED"><\/a><\/B> <DD> Interface not initialized$/;"	a
MPI_T_ERR_NOT_SUPPORTED	/usr/local/include/mpi.h	696;"	d
MPI_T_ERR_OUT_OF_HANDLES	/usr/local/include/mpi.h	680;"	d
MPI_T_ERR_OUT_OF_HANDLES	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_ERR_OUT_OF_HANDLES    <a name="MPI_T_ERR_OUT_OF_HANDLES"><\/a><\/B> <DD> No more handles available$/;"	a
MPI_T_ERR_OUT_OF_SESSIONS	/usr/local/include/mpi.h	681;"	d
MPI_T_ERR_OUT_OF_SESSIONS	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_ERR_OUT_OF_SESSIONS   <a name="MPI_T_ERR_OUT_OF_SESSIONS"><\/a><\/B> <DD> No more sessions available$/;"	a
MPI_T_ERR_PVAR_NO_ATOMIC	/usr/local/include/mpi.h	688;"	d
MPI_T_ERR_PVAR_NO_ATOMIC	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_ERR_PVAR_NO_ATOMIC    <a name="MPI_T_ERR_PVAR_NO_ATOMIC"><\/a><\/B> <DD> Pvar can't be R\/W atomically$/;"	a
MPI_T_ERR_PVAR_NO_STARTSTOP	/usr/local/include/mpi.h	686;"	d
MPI_T_ERR_PVAR_NO_STARTSTOP	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_ERR_PVAR_NO_STARTSTOP <a name="MPI_T_ERR_PVAR_NO_STARTSTOP"><\/a><\/B> <DD> Pvar can't be started or stopped$/;"	a
MPI_T_ERR_PVAR_NO_WRITE	/usr/local/include/mpi.h	687;"	d
MPI_T_ERR_PVAR_NO_WRITE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_ERR_PVAR_NO_WRITE     <a name="MPI_T_ERR_PVAR_NO_WRITE"><\/a><\/B> <DD> Pvar can't be written or reset$/;"	a
MPI_T_EVENT_CALLBACK_GET_INFO_T	/usr/local/include/mpi_proto.h	/^    MPI_T_EVENT_CALLBACK_GET_INFO_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_EVENT_CALLBACK_SET_INFO_T	/usr/local/include/mpi_proto.h	/^    MPI_T_EVENT_CALLBACK_SET_INFO_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_EVENT_COPY_T	/usr/local/include/mpi_proto.h	/^    MPI_T_EVENT_COPY_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_EVENT_GET_INDEX_T	/usr/local/include/mpi_proto.h	/^    MPI_T_EVENT_GET_INDEX_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_EVENT_GET_INFO_T	/usr/local/include/mpi_proto.h	/^    MPI_T_EVENT_GET_INFO_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_EVENT_GET_NUM_T	/usr/local/include/mpi_proto.h	/^    MPI_T_EVENT_GET_NUM_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_EVENT_GET_SOURCE_T	/usr/local/include/mpi_proto.h	/^    MPI_T_EVENT_GET_SOURCE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_EVENT_GET_TIMESTAMP_T	/usr/local/include/mpi_proto.h	/^    MPI_T_EVENT_GET_TIMESTAMP_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_EVENT_HANDLE_ALLOC_T	/usr/local/include/mpi_proto.h	/^    MPI_T_EVENT_HANDLE_ALLOC_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_EVENT_HANDLE_FREE_T	/usr/local/include/mpi_proto.h	/^    MPI_T_EVENT_HANDLE_FREE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_EVENT_HANDLE_GET_INFO_T	/usr/local/include/mpi_proto.h	/^    MPI_T_EVENT_HANDLE_GET_INFO_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_EVENT_HANDLE_SET_INFO_T	/usr/local/include/mpi_proto.h	/^    MPI_T_EVENT_HANDLE_SET_INFO_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_EVENT_READ_T	/usr/local/include/mpi_proto.h	/^    MPI_T_EVENT_READ_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_EVENT_REGISTER_CALLBACK_T	/usr/local/include/mpi_proto.h	/^    MPI_T_EVENT_REGISTER_CALLBACK_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_EVENT_SET_DROPPED_HANDLER_T	/usr/local/include/mpi_proto.h	/^    MPI_T_EVENT_SET_DROPPED_HANDLER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_FINALIZE_T	/usr/local/include/mpi_proto.h	/^    MPI_T_FINALIZE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_INIT_THREAD_T	/usr/local/include/mpi_proto.h	/^    MPI_T_INIT_THREAD_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_PVAR_CLASS_AGGREGATE	/usr/local/include/mpi.h	/^    MPI_T_PVAR_CLASS_AGGREGATE,$/;"	e	enum:MPIR_T_pvar_class_t
MPI_T_PVAR_CLASS_AGGREGATE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_PVAR_CLASS_AGGREGATE     <a name="MPI_T_PVAR_CLASS_AGGREGATE"><\/a><\/B> <DD> aggregate value over an event (e.g.,$/;"	a
MPI_T_PVAR_CLASS_COUNTER	/usr/local/include/mpi.h	/^    MPI_T_PVAR_CLASS_COUNTER,$/;"	e	enum:MPIR_T_pvar_class_t
MPI_T_PVAR_CLASS_COUNTER	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_PVAR_CLASS_COUNTER       <a name="MPI_T_PVAR_CLASS_COUNTER"><\/a><\/B> <DD> number of occurrences of an event$/;"	a
MPI_T_PVAR_CLASS_GENERIC	/usr/local/include/mpi.h	/^    MPI_T_PVAR_CLASS_GENERIC,$/;"	e	enum:MPIR_T_pvar_class_t
MPI_T_PVAR_CLASS_GENERIC	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_PVAR_CLASS_GENERIC       <a name="MPI_T_PVAR_CLASS_GENERIC"><\/a><\/B> <DD> used for any other time of performance$/;"	a
MPI_T_PVAR_CLASS_HIGHWATERMARK	/usr/local/include/mpi.h	/^    MPI_T_PVAR_CLASS_HIGHWATERMARK,$/;"	e	enum:MPIR_T_pvar_class_t
MPI_T_PVAR_CLASS_HIGHWATERMARK	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_PVAR_CLASS_HIGHWATERMARK <a name="MPI_T_PVAR_CLASS_HIGHWATERMARK"><\/a><\/B> <DD> high watermark of a resource$/;"	a
MPI_T_PVAR_CLASS_INVALID	/usr/local/include/mpi.h	/^    MPI_T_PVAR_CLASS_INVALID = 0,$/;"	e	enum:MPIR_T_pvar_class_t
MPI_T_PVAR_CLASS_LEVEL	/usr/local/include/mpi.h	/^    MPI_T_PVAR_CLASS_LEVEL,$/;"	e	enum:MPIR_T_pvar_class_t
MPI_T_PVAR_CLASS_LEVEL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_PVAR_CLASS_LEVEL         <a name="MPI_T_PVAR_CLASS_LEVEL"><\/a><\/B> <DD> utilization level of a resource$/;"	a
MPI_T_PVAR_CLASS_LOWWATERMARK	/usr/local/include/mpi.h	/^    MPI_T_PVAR_CLASS_LOWWATERMARK,$/;"	e	enum:MPIR_T_pvar_class_t
MPI_T_PVAR_CLASS_LOWWATERMARK	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_PVAR_CLASS_LOWWATERMARK  <a name="MPI_T_PVAR_CLASS_LOWWATERMARK"><\/a><\/B> <DD> low watermark of a resource$/;"	a
MPI_T_PVAR_CLASS_PERCENTAGE	/usr/local/include/mpi.h	/^    MPI_T_PVAR_CLASS_PERCENTAGE,$/;"	e	enum:MPIR_T_pvar_class_t
MPI_T_PVAR_CLASS_PERCENTAGE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_PVAR_CLASS_PERCENTAGE    <a name="MPI_T_PVAR_CLASS_PERCENTAGE"><\/a><\/B> <DD> percentage utilization of a resource$/;"	a
MPI_T_PVAR_CLASS_SIZE	/usr/local/include/mpi.h	/^    MPI_T_PVAR_CLASS_SIZE,$/;"	e	enum:MPIR_T_pvar_class_t
MPI_T_PVAR_CLASS_SIZE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_PVAR_CLASS_SIZE          <a name="MPI_T_PVAR_CLASS_SIZE"><\/a><\/B> <DD> size of a resource$/;"	a
MPI_T_PVAR_CLASS_STATE	/usr/local/include/mpi.h	/^    MPI_T_PVAR_CLASS_STATE = MPIR_T_PVAR_CLASS_FIRST,$/;"	e	enum:MPIR_T_pvar_class_t
MPI_T_PVAR_CLASS_STATE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_PVAR_CLASS_STATE         <a name="MPI_T_PVAR_CLASS_STATE"><\/a><\/B> <DD> set of discrete states (MPI_INT)$/;"	a
MPI_T_PVAR_CLASS_TIMER	/usr/local/include/mpi.h	/^    MPI_T_PVAR_CLASS_TIMER,$/;"	e	enum:MPIR_T_pvar_class_t
MPI_T_PVAR_CLASS_TIMER	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_PVAR_CLASS_TIMER         <a name="MPI_T_PVAR_CLASS_TIMER"><\/a><\/B> <DD> aggretate time spent executing event$/;"	a
MPI_T_PVAR_GET_INDEX_T	/usr/local/include/mpi_proto.h	/^    MPI_T_PVAR_GET_INDEX_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_PVAR_GET_INFO_T	/usr/local/include/mpi_proto.h	/^    MPI_T_PVAR_GET_INFO_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_PVAR_GET_NUM_T	/usr/local/include/mpi_proto.h	/^    MPI_T_PVAR_GET_NUM_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_PVAR_HANDLE_ALLOC_T	/usr/local/include/mpi_proto.h	/^    MPI_T_PVAR_HANDLE_ALLOC_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_PVAR_HANDLE_FREE_T	/usr/local/include/mpi_proto.h	/^    MPI_T_PVAR_HANDLE_FREE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_PVAR_HANDLE_NULL	/usr/local/include/mpi.h	827;"	d
MPI_T_PVAR_HANDLE_NULL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_PVAR_HANDLE_NULL <a name="MPI_T_PVAR_HANDLE_NULL"><\/a><\/B> <DD> Null MPI_T performance variable handle$/;"	a
MPI_T_PVAR_READRESET_T	/usr/local/include/mpi_proto.h	/^    MPI_T_PVAR_READRESET_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_PVAR_READ_T	/usr/local/include/mpi_proto.h	/^    MPI_T_PVAR_READ_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_PVAR_RESET_T	/usr/local/include/mpi_proto.h	/^    MPI_T_PVAR_RESET_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_PVAR_SESSION_CREATE_T	/usr/local/include/mpi_proto.h	/^    MPI_T_PVAR_SESSION_CREATE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_PVAR_SESSION_FREE_T	/usr/local/include/mpi_proto.h	/^    MPI_T_PVAR_SESSION_FREE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_PVAR_SESSION_NULL	/usr/local/include/mpi.h	828;"	d
MPI_T_PVAR_SESSION_NULL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_PVAR_SESSION_NULL<a name="MPI_T_PVAR_SESSION_NULL"><\/a><\/B> <DD> Null MPI_T performance variable session handle$/;"	a
MPI_T_PVAR_START_T	/usr/local/include/mpi_proto.h	/^    MPI_T_PVAR_START_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_PVAR_STOP_T	/usr/local/include/mpi_proto.h	/^    MPI_T_PVAR_STOP_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_PVAR_WRITE_T	/usr/local/include/mpi_proto.h	/^    MPI_T_PVAR_WRITE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_SCOPE_ALL	/usr/local/include/mpi.h	/^    MPI_T_SCOPE_ALL,$/;"	e	enum:MPIR_T_scope_t
MPI_T_SCOPE_ALL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_SCOPE_ALL                <a name="MPI_T_SCOPE_ALL"><\/a><\/B> <DD> may be writeable, must be done to all$/;"	a
MPI_T_SCOPE_ALL_EQ	/usr/local/include/mpi.h	/^    MPI_T_SCOPE_ALL_EQ$/;"	e	enum:MPIR_T_scope_t
MPI_T_SCOPE_ALL_EQ	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_SCOPE_ALL_EQ             <a name="MPI_T_SCOPE_ALL_EQ"><\/a><\/B> <DD> may be writeable, must be done to all$/;"	a
MPI_T_SCOPE_CONSTANT	/usr/local/include/mpi.h	/^    MPI_T_SCOPE_CONSTANT = 60438,$/;"	e	enum:MPIR_T_scope_t
MPI_T_SCOPE_CONSTANT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_SCOPE_CONSTANT           <a name="MPI_T_SCOPE_CONSTANT"><\/a><\/B> <DD> read-only, value is constant$/;"	a
MPI_T_SCOPE_GROUP	/usr/local/include/mpi.h	/^    MPI_T_SCOPE_GROUP,$/;"	e	enum:MPIR_T_scope_t
MPI_T_SCOPE_GROUP	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_SCOPE_GROUP              <a name="MPI_T_SCOPE_GROUP"><\/a><\/B> <DD> may be writeable, must be done to a$/;"	a
MPI_T_SCOPE_GROUP_EQ	/usr/local/include/mpi.h	/^    MPI_T_SCOPE_GROUP_EQ,$/;"	e	enum:MPIR_T_scope_t
MPI_T_SCOPE_GROUP_EQ	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_SCOPE_GROUP_EQ           <a name="MPI_T_SCOPE_GROUP_EQ"><\/a><\/B> <DD> may be writeable, must be done to a$/;"	a
MPI_T_SCOPE_INVALID	/usr/local/include/mpi.h	/^    MPI_T_SCOPE_INVALID = 0,$/;"	e	enum:MPIR_T_scope_t
MPI_T_SCOPE_LOCAL	/usr/local/include/mpi.h	/^    MPI_T_SCOPE_LOCAL,$/;"	e	enum:MPIR_T_scope_t
MPI_T_SCOPE_LOCAL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_SCOPE_LOCAL              <a name="MPI_T_SCOPE_LOCAL"><\/a><\/B> <DD> may be writeable, writing is a local$/;"	a
MPI_T_SCOPE_READONLY	/usr/local/include/mpi.h	/^    MPI_T_SCOPE_READONLY,$/;"	e	enum:MPIR_T_scope_t
MPI_T_SCOPE_READONLY	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_SCOPE_READONLY           <a name="MPI_T_SCOPE_READONLY"><\/a><\/B> <DD> read-only, cannot be written, but can$/;"	a
MPI_T_SOURCE_GET_INFO_T	/usr/local/include/mpi_proto.h	/^    MPI_T_SOURCE_GET_INFO_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_SOURCE_GET_NUM_T	/usr/local/include/mpi_proto.h	/^    MPI_T_SOURCE_GET_NUM_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_SOURCE_GET_TIMESTAMP_T	/usr/local/include/mpi_proto.h	/^    MPI_T_SOURCE_GET_TIMESTAMP_T,$/;"	e	enum:QMPI_Functions_enum
MPI_T_SOURCE_ORDERED	/usr/local/include/mpi.h	/^    MPI_T_SOURCE_ORDERED = 0,$/;"	e	enum:MPI_T_source_order
MPI_T_SOURCE_UNORDERED	/usr/local/include/mpi.h	/^    MPI_T_SOURCE_UNORDERED$/;"	e	enum:MPI_T_source_order
MPI_T_VERBOSITY_INVALID	/usr/local/include/mpi.h	/^    MPI_T_VERBOSITY_INVALID = 0,$/;"	e	enum:MPIR_T_verbosity_t
MPI_T_VERBOSITY_MPIDEV_ALL	/usr/local/include/mpi.h	/^    MPI_T_VERBOSITY_MPIDEV_ALL$/;"	e	enum:MPIR_T_verbosity_t
MPI_T_VERBOSITY_MPIDEV_ALL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_VERBOSITY_MPIDEV_ALL     <a name="MPI_T_VERBOSITY_MPIDEV_ALL"><\/a><\/B> <DD> All remaining information for MPI implementors$/;"	a
MPI_T_VERBOSITY_MPIDEV_BASIC	/usr/local/include/mpi.h	/^    MPI_T_VERBOSITY_MPIDEV_BASIC,$/;"	e	enum:MPIR_T_verbosity_t
MPI_T_VERBOSITY_MPIDEV_BASIC	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_VERBOSITY_MPIDEV_BASIC   <a name="MPI_T_VERBOSITY_MPIDEV_BASIC"><\/a><\/B> <DD> Basic information for MPI implementors$/;"	a
MPI_T_VERBOSITY_MPIDEV_DETAIL	/usr/local/include/mpi.h	/^    MPI_T_VERBOSITY_MPIDEV_DETAIL,$/;"	e	enum:MPIR_T_verbosity_t
MPI_T_VERBOSITY_MPIDEV_DETAIL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_VERBOSITY_MPIDEV_DETAIL  <a name="MPI_T_VERBOSITY_MPIDEV_DETAIL"><\/a><\/B> <DD> Detailed information for MPI implementors$/;"	a
MPI_T_VERBOSITY_TUNER_ALL	/usr/local/include/mpi.h	/^    MPI_T_VERBOSITY_TUNER_ALL,$/;"	e	enum:MPIR_T_verbosity_t
MPI_T_VERBOSITY_TUNER_ALL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_VERBOSITY_TUNER_ALL      <a name="MPI_T_VERBOSITY_TUNER_ALL"><\/a><\/B> <DD> All remaining information required for tuning$/;"	a
MPI_T_VERBOSITY_TUNER_BASIC	/usr/local/include/mpi.h	/^    MPI_T_VERBOSITY_TUNER_BASIC,$/;"	e	enum:MPIR_T_verbosity_t
MPI_T_VERBOSITY_TUNER_BASIC	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_VERBOSITY_TUNER_BASIC    <a name="MPI_T_VERBOSITY_TUNER_BASIC"><\/a><\/B> <DD> Basic information required for tuning$/;"	a
MPI_T_VERBOSITY_TUNER_DETAIL	/usr/local/include/mpi.h	/^    MPI_T_VERBOSITY_TUNER_DETAIL,$/;"	e	enum:MPIR_T_verbosity_t
MPI_T_VERBOSITY_TUNER_DETAIL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_VERBOSITY_TUNER_DETAIL   <a name="MPI_T_VERBOSITY_TUNER_DETAIL"><\/a><\/B> <DD> Detailed information required for tuning$/;"	a
MPI_T_VERBOSITY_USER_ALL	/usr/local/include/mpi.h	/^    MPI_T_VERBOSITY_USER_ALL,$/;"	e	enum:MPIR_T_verbosity_t
MPI_T_VERBOSITY_USER_ALL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_VERBOSITY_USER_ALL       <a name="MPI_T_VERBOSITY_USER_ALL"><\/a><\/B> <DD> All remaining information of interest to users$/;"	a
MPI_T_VERBOSITY_USER_BASIC	/usr/local/include/mpi.h	/^    MPI_T_VERBOSITY_USER_BASIC = 221,$/;"	e	enum:MPIR_T_verbosity_t
MPI_T_VERBOSITY_USER_BASIC	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_VERBOSITY_USER_BASIC     <a name="MPI_T_VERBOSITY_USER_BASIC"><\/a><\/B> <DD> Basic information of interest to users$/;"	a
MPI_T_VERBOSITY_USER_DETAIL	/usr/local/include/mpi.h	/^    MPI_T_VERBOSITY_USER_DETAIL,$/;"	e	enum:MPIR_T_verbosity_t
MPI_T_VERBOSITY_USER_DETAIL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_T_VERBOSITY_USER_DETAIL    <a name="MPI_T_VERBOSITY_USER_DETAIL"><\/a><\/B> <DD> Detailed information of interest to users$/;"	a
MPI_T_cb_safety	/usr/local/include/mpi.h	/^typedef enum MPI_T_cb_safety {$/;"	g
MPI_T_cb_safety	/usr/local/include/mpi.h	/^} MPI_T_cb_safety;$/;"	t	typeref:enum:MPI_T_cb_safety
MPI_T_cvar_handle	/usr/local/include/mpi.h	/^typedef struct MPIR_T_cvar_handle_s * MPI_T_cvar_handle;$/;"	t	typeref:struct:MPIR_T_cvar_handle_s
MPI_T_enum	/usr/local/include/mpi.h	/^typedef struct MPIR_T_enum_s * MPI_T_enum;$/;"	t	typeref:struct:MPIR_T_enum_s
MPI_T_event_cb_function	/usr/local/include/mpi.h	/^typedef void (MPI_T_event_cb_function)(MPI_T_event_instance event_instance, MPI_T_event_registration event_registration, MPI_T_cb_safety cb_safety, void *user_data);$/;"	t
MPI_T_event_dropped_cb_function	/usr/local/include/mpi.h	/^typedef void (MPI_T_event_dropped_cb_function)(MPI_Count count, MPI_T_event_registration event_registration, int source_index, MPI_T_cb_safety cb_safety, void *user_data);$/;"	t
MPI_T_event_free_cb_function	/usr/local/include/mpi.h	/^typedef void (MPI_T_event_free_cb_function)(MPI_T_event_registration event_registration, MPI_T_cb_safety cb_safety, void *user_data);$/;"	t
MPI_T_event_instance	/usr/local/include/mpi.h	/^typedef struct MPIR_T_event_instance_s * MPI_T_event_instance;$/;"	t	typeref:struct:MPIR_T_event_instance_s
MPI_T_event_registration	/usr/local/include/mpi.h	/^typedef struct MPIR_T_event_registration_s * MPI_T_event_registration;$/;"	t	typeref:struct:MPIR_T_event_registration_s
MPI_T_pvar_handle	/usr/local/include/mpi.h	/^typedef struct MPIR_T_pvar_handle_s * MPI_T_pvar_handle;$/;"	t	typeref:struct:MPIR_T_pvar_handle_s
MPI_T_pvar_session	/usr/local/include/mpi.h	/^typedef struct MPIR_T_pvar_session_s * MPI_T_pvar_session;$/;"	t	typeref:struct:MPIR_T_pvar_session_s
MPI_T_source_order	/usr/local/include/mpi.h	/^typedef enum MPI_T_source_order {$/;"	g
MPI_T_source_order	/usr/local/include/mpi.h	/^} MPI_T_source_order;$/;"	t	typeref:enum:MPI_T_source_order
MPI_Type_copy_attr_function	/usr/local/include/mpi.h	/^typedef int (MPI_Type_copy_attr_function)(MPI_Datatype, int, void *, void *,$/;"	t
MPI_Type_delete_attr_function	/usr/local/include/mpi.h	/^typedef int (MPI_Type_delete_attr_function)(MPI_Datatype, int, void *, void *);$/;"	t
MPI_UB	/usr/local/include/mpi.h	161;"	d
MPI_UB	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_UB <a name="MPI_UB"><\/a><\/B> <DD> For <tt>MPI_Type_struct<\/tt>; an upper-bound indicator.  Removed in MPI 3$/;"	a
MPI_UINT16_T	/usr/local/include/mpi.h	209;"	d
MPI_UINT16_T	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_UINT16_T <a name="MPI_UINT16_T"><\/a><\/B> <DD> uint16_t$/;"	a
MPI_UINT32_T	/usr/local/include/mpi.h	210;"	d
MPI_UINT32_T	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_UINT32_T <a name="MPI_UINT32_T"><\/a><\/B> <DD> uint32_t$/;"	a
MPI_UINT64_T	/usr/local/include/mpi.h	211;"	d
MPI_UINT64_T	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_UINT64_T <a name="MPI_UINT64_T"><\/a><\/B> <DD> uint64_t$/;"	a
MPI_UINT8_T	/usr/local/include/mpi.h	208;"	d
MPI_UINT8_T	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_UINT8_T  <a name="MPI_UINT8_T"><\/a><\/B> <DD> uint8_t$/;"	a
MPI_UNDEFINED	/usr/local/include/mpi.h	511;"	d
MPI_UNDEFINED	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_UNDEFINED                  <a name="MPI_UNDEFINED"><\/a><\/B> <DD> Used by many routines to indicated$/;"	a
MPI_UNDEFINED_RANK	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_UNDEFINED_RANK             <a name="MPI_UNDEFINED_RANK"><\/a><\/B> <DD> Unknown rank$/;"	a
MPI_UNEQUAL	/usr/local/include/mpi.h	526;"	d
MPI_UNEQUAL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_UNEQUAL <a name="MPI_UNEQUAL"><\/a><\/B> <DD> Different$/;"	a
MPI_UNIVERSE_SIZE	/usr/local/include/mpi.h	327;"	d
MPI_UNIVERSE_SIZE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_UNIVERSE_SIZE <a name="MPI_UNIVERSE_SIZE"><\/a><\/B> <DD> Number of available processes.  See the standard for$/;"	a
MPI_UNPACK_C_T	/usr/local/include/mpi_proto.h	/^    MPI_UNPACK_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_UNPACK_EXTERNAL_C_T	/usr/local/include/mpi_proto.h	/^    MPI_UNPACK_EXTERNAL_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_UNPACK_EXTERNAL_T	/usr/local/include/mpi_proto.h	/^    MPI_UNPACK_EXTERNAL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_UNPACK_T	/usr/local/include/mpi_proto.h	/^    MPI_UNPACK_T,$/;"	e	enum:QMPI_Functions_enum
MPI_UNPUBLISH_NAME_T	/usr/local/include/mpi_proto.h	/^    MPI_UNPUBLISH_NAME_T,$/;"	e	enum:QMPI_Functions_enum
MPI_UNSIGNED	/usr/local/include/mpi.h	149;"	d
MPI_UNSIGNED	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_UNSIGNED <a name="MPI_UNSIGNED"><\/a><\/B> <DD> unsigned int$/;"	a
MPI_UNSIGNED_CHAR	/usr/local/include/mpi.h	143;"	d
MPI_UNSIGNED_CHAR	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_UNSIGNED_CHAR <a name="MPI_UNSIGNED_CHAR"><\/a><\/B> <DD> unsigned char$/;"	a
MPI_UNSIGNED_LONG	/usr/local/include/mpi.h	151;"	d
MPI_UNSIGNED_LONG	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_UNSIGNED_LONG <a name="MPI_UNSIGNED_LONG"><\/a><\/B> <DD> unsigned long$/;"	a
MPI_UNSIGNED_LONG_LONG	/usr/local/include/mpi.h	156;"	d
MPI_UNSIGNED_LONG_LONG	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_UNSIGNED_LONG_LONG <a name="MPI_UNSIGNED_LONG_LONG"><\/a><\/B> <DD> unsigned long long$/;"	a
MPI_UNSIGNED_SHORT	/usr/local/include/mpi.h	147;"	d
MPI_UNSIGNED_SHORT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_UNSIGNED_SHORT <a name="MPI_UNSIGNED_SHORT"><\/a><\/B> <DD> unsigned short$/;"	a
MPI_UNWEIGHTED	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_UNWEIGHTED    <a name="MPI_UNWEIGHTED"><\/a><\/B> <DD> Indicates that the edges are unweighted$/;"	a
MPI_User_function	/usr/local/include/mpi.h	/^typedef void (MPI_User_function) ( void *, void *, int *, MPI_Datatype * );$/;"	t
MPI_User_function	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_User_function <a name="MPI_User_function"><\/a><\/B> <DD> C function to combine values (see collective operations$/;"	a
MPI_User_function_c	/usr/local/include/mpi.h	/^typedef void (MPI_User_function_c) ( void *, void *, MPI_Count *, MPI_Datatype * );$/;"	t
MPI_VERSION	/usr/local/include/mpi.h	18;"	d
MPI_VERSION	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_VERSION                    <a name="MPI_VERSION"><\/a><\/B> <DD> Numeric value of MPI version (e.g., 3)$/;"	a
MPI_WAITALL_T	/usr/local/include/mpi_proto.h	/^    MPI_WAITALL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WAITANY_T	/usr/local/include/mpi_proto.h	/^    MPI_WAITANY_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WAITSOME_T	/usr/local/include/mpi_proto.h	/^    MPI_WAITSOME_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WAIT_T	/usr/local/include/mpi_proto.h	/^    MPI_WAIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WCHAR	/usr/local/include/mpi.h	145;"	d
MPI_WCHAR	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_WCHAR <a name="MPI_WCHAR"><\/a><\/B> <DD> wide character (wchar_t)$/;"	a
MPI_WEIGHTS_EMPTY	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_WEIGHTS_EMPTY <a name="MPI_WEIGHTS_EMPTY"><\/a><\/B> <DD> Special address that indicates no array of weights$/;"	a
MPI_WIN_ALLOCATE_C_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_ALLOCATE_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_ALLOCATE_SHARED_C_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_ALLOCATE_SHARED_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_ALLOCATE_SHARED_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_ALLOCATE_SHARED_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_ALLOCATE_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_ALLOCATE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_ATTACH_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_ATTACH_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_BASE	/usr/local/include/mpi.h	333;"	d
MPI_WIN_BASE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_WIN_BASE <a name="MPI_WIN_BASE"><\/a><\/B> <DD> window base address.$/;"	a
MPI_WIN_C2F_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_C2F_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_CALL_ERRHANDLER_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_CALL_ERRHANDLER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_COMPLETE_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_COMPLETE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_CREATE_C_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_CREATE_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_CREATE_DYNAMIC_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_CREATE_DYNAMIC_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_CREATE_ERRHANDLER_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_CREATE_ERRHANDLER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_CREATE_FLAVOR	/usr/local/include/mpi.h	336;"	d
MPI_WIN_CREATE_FLAVOR	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_WIN_CREATE_FLAVOR <a name="MPI_WIN_CREATE_FLAVOR"><\/a><\/B> <DD> how the window was created$/;"	a
MPI_WIN_CREATE_KEYVAL_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_CREATE_KEYVAL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_CREATE_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_CREATE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_DELETE_ATTR_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_DELETE_ATTR_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_DETACH_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_DETACH_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_DISP_UNIT	/usr/local/include/mpi.h	335;"	d
MPI_WIN_DISP_UNIT	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_WIN_DISP_UNIT <a name="MPI_WIN_DISP_UNIT"><\/a><\/B> <DD> displacement unit associated with the window$/;"	a
MPI_WIN_DUP_FN	/usr/local/include/mpi.h	799;"	d
MPI_WIN_DUP_FN	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_WIN_DUP_FN   <a name="MPI_WIN_DUP_FN"><\/a><\/B> <DD> Predefined attribute duplicate function for windows$/;"	a
MPI_WIN_F2C_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_F2C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_FENCE_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_FENCE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_FLAVOR_ALLOCATE	/usr/local/include/mpi.h	/^    MPI_WIN_FLAVOR_ALLOCATE    = 2,$/;"	e	enum:MPIR_Win_flavor
MPI_WIN_FLAVOR_ALLOCATE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_WIN_FLAVOR_ALLOCATE <a name="MPI_WIN_FLAVOR_ALLOCATE"><\/a><\/B> <DD> Window was created with MPI_WIN_ALLOCATE.$/;"	a
MPI_WIN_FLAVOR_CREATE	/usr/local/include/mpi.h	/^    MPI_WIN_FLAVOR_CREATE      = 1,$/;"	e	enum:MPIR_Win_flavor
MPI_WIN_FLAVOR_CREATE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_WIN_FLAVOR_CREATE   <a name="MPI_WIN_FLAVOR_CREATE"><\/a><\/B> <DD> Window was created with MPI_WIN_CREATE.$/;"	a
MPI_WIN_FLAVOR_DYNAMIC	/usr/local/include/mpi.h	/^    MPI_WIN_FLAVOR_DYNAMIC     = 3,$/;"	e	enum:MPIR_Win_flavor
MPI_WIN_FLAVOR_DYNAMIC	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_WIN_FLAVOR_DYNAMIC  <a name="MPI_WIN_FLAVOR_DYNAMIC"><\/a><\/B> <DD> Window was created with MPI_WIN_CREATE_DYNAMIC.$/;"	a
MPI_WIN_FLAVOR_SHARED	/usr/local/include/mpi.h	/^    MPI_WIN_FLAVOR_SHARED      = 4$/;"	e	enum:MPIR_Win_flavor
MPI_WIN_FLAVOR_SHARED	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_WIN_FLAVOR_SHARED   <a name="MPI_WIN_FLAVOR_SHARED"><\/a><\/B> <DD> Window was created with MPI_WIN_ALLOCATE_SHARED.$/;"	a
MPI_WIN_FLUSH_ALL_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_FLUSH_ALL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_FLUSH_LOCAL_ALL_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_FLUSH_LOCAL_ALL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_FLUSH_LOCAL_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_FLUSH_LOCAL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_FLUSH_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_FLUSH_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_FREE_KEYVAL_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_FREE_KEYVAL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_FREE_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_FREE_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_GET_ATTR_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_GET_ATTR_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_GET_ERRHANDLER_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_GET_ERRHANDLER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_GET_GROUP_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_GET_GROUP_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_GET_INFO_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_GET_INFO_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_GET_NAME_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_GET_NAME_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_LOCK_ALL_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_LOCK_ALL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_LOCK_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_LOCK_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_MODEL	/usr/local/include/mpi.h	337;"	d
MPI_WIN_MODEL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_WIN_MODEL <a name="MPI_WIN_MODEL"><\/a><\/B> <DD> memory model for window$/;"	a
MPI_WIN_NULL	/usr/local/include/mpi.h	244;"	d
MPI_WIN_NULL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_WIN_NULL           <a name="MPI_WIN_NULL"><\/a><\/B> <DD> Null window handle$/;"	a
MPI_WIN_NULL_COPY_FN	/usr/local/include/mpi.h	797;"	d
MPI_WIN_NULL_COPY_FN	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_WIN_NULL_COPY_FN <a name="MPI_WIN_NULL_COPY_FN"><\/a><\/B> <DD> Predefined attribute copy function for windows$/;"	a
MPI_WIN_NULL_DELETE_FN	/usr/local/include/mpi.h	798;"	d
MPI_WIN_NULL_DELETE_FN	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_WIN_NULL_DELETE_FN <a name="MPI_WIN_NULL_DELETE_FN"><\/a><\/B> <DD> Predefined attribute delete function for windows$/;"	a
MPI_WIN_POST_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_POST_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_SEPARATE	/usr/local/include/mpi.h	/^    MPI_WIN_SEPARATE   = 1,$/;"	e	enum:MPIR_Win_model
MPI_WIN_SEPARATE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_WIN_SEPARATE <a name="MPI_WIN_SEPARATE"><\/a><\/B> <DD> Separate public and private copies of window memory$/;"	a
MPI_WIN_SET_ATTR_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_SET_ATTR_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_SET_ERRHANDLER_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_SET_ERRHANDLER_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_SET_INFO_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_SET_INFO_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_SET_NAME_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_SET_NAME_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_SHARED_QUERY_C_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_SHARED_QUERY_C_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_SHARED_QUERY_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_SHARED_QUERY_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_SIZE	/usr/local/include/mpi.h	334;"	d
MPI_WIN_SIZE	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_WIN_SIZE <a name="MPI_WIN_SIZE"><\/a><\/B> <DD> window size, in bytes$/;"	a
MPI_WIN_START_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_START_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_SYNC_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_SYNC_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_TEST_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_TEST_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_UNIFIED	/usr/local/include/mpi.h	/^    MPI_WIN_UNIFIED    = 2$/;"	e	enum:MPIR_Win_model
MPI_WIN_UNIFIED	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_WIN_UNIFIED <a name="MPI_WIN_UNIFIED"><\/a><\/B> <DD> The public and private copies are identical (by which$/;"	a
MPI_WIN_UNLOCK_ALL_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_UNLOCK_ALL_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_UNLOCK_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_UNLOCK_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WIN_WAIT_T	/usr/local/include/mpi_proto.h	/^    MPI_WIN_WAIT_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WTICK_T	/usr/local/include/mpi_proto.h	/^    MPI_WTICK_T,$/;"	e	enum:QMPI_Functions_enum
MPI_WTIME_IS_GLOBAL	/usr/local/include/mpi.h	326;"	d
MPI_WTIME_IS_GLOBAL	/usr/local/share/doc/mpich/www3/Constants.html	/^<DT><B>MPI_WTIME_IS_GLOBAL <a name="MPI_WTIME_IS_GLOBAL"><\/a><\/B> <DD> Has value 1 if <tt>MPI_WTIME<\/tt> is globally synchronized.$/;"	a
MPI_WTIME_T	/usr/local/include/mpi_proto.h	/^    MPI_WTIME_T,$/;"	e	enum:QMPI_Functions_enum
MPI_Win	/usr/local/include/mpi.h	/^typedef int MPI_Win;$/;"	t
MPI_Win_copy_attr_function	/usr/local/include/mpi.h	/^typedef int (MPI_Win_copy_attr_function)(MPI_Win, int, void *, void *, void *,$/;"	t
MPI_Win_delete_attr_function	/usr/local/include/mpi.h	/^typedef int (MPI_Win_delete_attr_function)(MPI_Win, int, void *, void *);$/;"	t
MPI_Win_errhandler_fn	/usr/local/include/mpi.h	/^typedef MPI_Win_errhandler_function MPI_Win_errhandler_fn;$/;"	t
MPI_Win_errhandler_function	/usr/local/include/mpi.h	/^typedef void (MPI_Win_errhandler_function)(MPI_Win *, int *, ...);$/;"	t
Map	/usr/local/include/mpicxx.h	/^    virtual int Map( int v2, const int v3[], const bool v4[] ) const$/;"	f	class:MPI::Cartcomm
Map	/usr/local/include/mpicxx.h	/^    virtual int Map( int v2, const int v3[], const int v4[] ) const$/;"	f	class:MPI::Graphcomm
Match_size	/usr/local/include/mpicxx.h	/^    static Datatype Match_size( int v1, int v2 ) $/;"	f	class:MPI::Datatype
NO_TAGS_WITH_MODIFIERS	/usr/local/include/mpi.h	63;"	d
NULL_COPY_FN	/usr/local/include/mpicxx.h	/^    static int NULL_COPY_FN( const Comm &oldcomm MPIR_ARGUNUSED, $/;"	f	class:MPI::Comm
NULL_COPY_FN	/usr/local/include/mpicxx.h	/^    static int NULL_COPY_FN( const Datatype &oldtype MPIR_ARGUNUSED, $/;"	f	class:MPI::Datatype
NULL_COPY_FN	/usr/local/include/mpicxx.h	/^    static int NULL_COPY_FN( const Win &oldwin MPIR_ARGUNUSED, $/;"	f	class:MPI::Win
NULL_DELETE_FN	/usr/local/include/mpicxx.h	/^    static int NULL_DELETE_FN( Comm &comm MPIR_ARGUNUSED, $/;"	f	class:MPI::Comm
NULL_DELETE_FN	/usr/local/include/mpicxx.h	/^    static int NULL_DELETE_FN( Datatype &type MPIR_ARGUNUSED, $/;"	f	class:MPI::Datatype
NULL_DELETE_FN	/usr/local/include/mpicxx.h	/^    static int NULL_DELETE_FN( Win &win MPIR_ARGUNUSED, $/;"	f	class:MPI::Win
Nullcomm	/usr/local/include/mpicxx.h	/^    Nullcomm(const Nullcomm &obj) : Comm(obj) {}$/;"	f	class:MPI::Nullcomm
Nullcomm	/usr/local/include/mpicxx.h	/^    inline Nullcomm(MPI_Comm obj) : Comm(obj) {}$/;"	f	class:MPI::Nullcomm
Nullcomm	/usr/local/include/mpicxx.h	/^    inline Nullcomm(void) : Comm() {}$/;"	f	class:MPI::Nullcomm
Nullcomm	/usr/local/include/mpicxx.h	/^class Nullcomm : public Comm {$/;"	c	namespace:MPI
Offset	/usr/local/include/mpicxx.h	/^typedef MPI_Offset Offset;$/;"	t	namespace:MPI
Op	/usr/local/include/mpicxx.h	/^    Op(const Op &obj) : the_real_op(obj.the_real_op){}$/;"	f	class:MPI::Op
Op	/usr/local/include/mpicxx.h	/^    inline Op(MPI_Op obj) : the_real_op(obj) {}$/;"	f	class:MPI::Op
Op	/usr/local/include/mpicxx.h	/^    inline Op(void) : the_real_op(MPI_OP_NULL) {}$/;"	f	class:MPI::Op
Op	/usr/local/include/mpicxx.h	/^class Op  {$/;"	c	namespace:MPI
Open	/usr/local/include/mpicxx.h	/^    static File Open( const Intracomm &v1, const char * v2, int v3, const Info &v4 ) $/;"	f	class:MPI::File
PMPIO_Test	/usr/local/include/mpio.h	43;"	d
PMPIO_Wait	/usr/local/include/mpio.h	42;"	d
Pack_external	/usr/local/include/mpicxx.h	/^    virtual void Pack_external( const char * v1, const void * v2, const int v3, void * v5, Aint v6, Aint & v7 ) const$/;"	f	class:MPI::Datatype
Pack_external_size	/usr/local/include/mpicxx.h	/^    virtual Aint Pack_external_size( const char * v1, int v2 ) const$/;"	f	class:MPI::Datatype
Post	/usr/local/include/mpicxx.h	/^    virtual void Post( const Group &v1, int v2 ) const$/;"	f	class:MPI::Win
Preallocate	/usr/local/include/mpicxx.h	/^    virtual void Preallocate( Offset v2 ) $/;"	f	class:MPI::File
Prequest	/usr/local/include/mpicxx.h	/^    Prequest(const Prequest &obj) : Request(obj) {}$/;"	f	class:MPI::Prequest
Prequest	/usr/local/include/mpicxx.h	/^    inline Prequest(MPI_Request obj) : Request(obj) {}$/;"	f	class:MPI::Prequest
Prequest	/usr/local/include/mpicxx.h	/^    inline Prequest(void) : Request() {}$/;"	f	class:MPI::Prequest
Prequest	/usr/local/include/mpicxx.h	/^class Prequest : public Request {$/;"	c	namespace:MPI
Probe	/usr/local/include/mpicxx.h	/^    virtual void Probe( int v1, int v2 ) const$/;"	f	class:MPI::Comm
Probe	/usr/local/include/mpicxx.h	/^    virtual void Probe( int v1, int v2, Status & v4 ) const$/;"	f	class:MPI::Comm
Put	/usr/local/include/mpicxx.h	/^    virtual void Put( const void * v1, int v2, const Datatype &v3, int v4, Aint v5, int v6, const Datatype &v7 ) const$/;"	f	class:MPI::Win
QMPIX_Allreduce_enqueue_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Allreduce_enqueue_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPIX_Allreduce_enqueue_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Allreduce_enqueue_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPIX_Comm_agree_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Comm_agree_t) (QMPI_Context context, int tool_id, MPI_Comm comm, int *flag);$/;"	t
QMPIX_Comm_failure_ack_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Comm_failure_ack_t) (QMPI_Context context, int tool_id, MPI_Comm comm);$/;"	t
QMPIX_Comm_failure_get_acked_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Comm_failure_get_acked_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPIX_Comm_get_failed_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Comm_get_failed_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPIX_Comm_get_stream_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Comm_get_stream_t) (QMPI_Context context, int tool_id, MPI_Comm comm, int idx,$/;"	t
QMPIX_Comm_revoke_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Comm_revoke_t) (QMPI_Context context, int tool_id, MPI_Comm comm);$/;"	t
QMPIX_Comm_shrink_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Comm_shrink_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPIX_Comm_test_threadcomm_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Comm_test_threadcomm_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPIX_GPU_query_support_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_GPU_query_support_t) (QMPI_Context context, int tool_id, int gpu_type,$/;"	t
QMPIX_Grequest_class_allocate_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Grequest_class_allocate_t) (QMPI_Context context, int tool_id,$/;"	t
QMPIX_Grequest_class_create_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Grequest_class_create_t) (QMPI_Context context, int tool_id,$/;"	t
QMPIX_Grequest_start_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Grequest_start_t) (QMPI_Context context, int tool_id,$/;"	t
QMPIX_Info_set_hex_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Info_set_hex_t) (QMPI_Context context, int tool_id, MPI_Info info,$/;"	t
QMPIX_Irecv_enqueue_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Irecv_enqueue_c_t) (QMPI_Context context, int tool_id, void *buf,$/;"	t
QMPIX_Irecv_enqueue_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Irecv_enqueue_t) (QMPI_Context context, int tool_id, void *buf, int count,$/;"	t
QMPIX_Isend_enqueue_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Isend_enqueue_c_t) (QMPI_Context context, int tool_id, const void *buf,$/;"	t
QMPIX_Isend_enqueue_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Isend_enqueue_t) (QMPI_Context context, int tool_id, const void *buf, int count,$/;"	t
QMPIX_Query_cuda_support_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Query_cuda_support_t) (QMPI_Context context, int tool_id);$/;"	t
QMPIX_Query_hip_support_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Query_hip_support_t) (QMPI_Context context, int tool_id);$/;"	t
QMPIX_Query_ze_support_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Query_ze_support_t) (QMPI_Context context, int tool_id);$/;"	t
QMPIX_Recv_enqueue_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Recv_enqueue_c_t) (QMPI_Context context, int tool_id, void *buf, MPI_Count count,$/;"	t
QMPIX_Recv_enqueue_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Recv_enqueue_t) (QMPI_Context context, int tool_id, void *buf, int count,$/;"	t
QMPIX_Send_enqueue_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Send_enqueue_c_t) (QMPI_Context context, int tool_id, const void *buf,$/;"	t
QMPIX_Send_enqueue_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Send_enqueue_t) (QMPI_Context context, int tool_id, const void *buf, int count,$/;"	t
QMPIX_Start_progress_thread_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Start_progress_thread_t) (QMPI_Context context, int tool_id,$/;"	t
QMPIX_Stop_progress_thread_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Stop_progress_thread_t) (QMPI_Context context, int tool_id, MPIX_Stream stream);$/;"	t
QMPIX_Stream_comm_create_multiplex_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Stream_comm_create_multiplex_t) (QMPI_Context context, int tool_id,$/;"	t
QMPIX_Stream_comm_create_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Stream_comm_create_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPIX_Stream_create_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Stream_create_t) (QMPI_Context context, int tool_id, MPI_Info info,$/;"	t
QMPIX_Stream_free_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Stream_free_t) (QMPI_Context context, int tool_id, MPIX_Stream *stream);$/;"	t
QMPIX_Stream_irecv_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Stream_irecv_c_t) (QMPI_Context context, int tool_id, void *buf, MPI_Count count,$/;"	t
QMPIX_Stream_irecv_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Stream_irecv_t) (QMPI_Context context, int tool_id, void *buf, int count,$/;"	t
QMPIX_Stream_isend_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Stream_isend_c_t) (QMPI_Context context, int tool_id, const void *buf,$/;"	t
QMPIX_Stream_isend_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Stream_isend_t) (QMPI_Context context, int tool_id, const void *buf, int count,$/;"	t
QMPIX_Stream_progress_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Stream_progress_t) (QMPI_Context context, int tool_id, MPIX_Stream stream);$/;"	t
QMPIX_Stream_recv_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Stream_recv_c_t) (QMPI_Context context, int tool_id, void *buf, MPI_Count count,$/;"	t
QMPIX_Stream_recv_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Stream_recv_t) (QMPI_Context context, int tool_id, void *buf, int count,$/;"	t
QMPIX_Stream_send_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Stream_send_c_t) (QMPI_Context context, int tool_id, const void *buf,$/;"	t
QMPIX_Stream_send_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Stream_send_t) (QMPI_Context context, int tool_id, const void *buf, int count,$/;"	t
QMPIX_Threadcomm_finish_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Threadcomm_finish_t) (QMPI_Context context, int tool_id, MPI_Comm threadcomm);$/;"	t
QMPIX_Threadcomm_free_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Threadcomm_free_t) (QMPI_Context context, int tool_id, MPI_Comm *threadcomm);$/;"	t
QMPIX_Threadcomm_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Threadcomm_init_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPIX_Threadcomm_start_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Threadcomm_start_t) (QMPI_Context context, int tool_id, MPI_Comm threadcomm);$/;"	t
QMPIX_Type_iov_len_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Type_iov_len_t) (QMPI_Context context, int tool_id, MPI_Datatype datatype,$/;"	t
QMPIX_Type_iov_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Type_iov_t) (QMPI_Context context, int tool_id, MPI_Datatype datatype,$/;"	t
QMPIX_Wait_enqueue_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Wait_enqueue_t) (QMPI_Context context, int tool_id, MPI_Request *request,$/;"	t
QMPIX_Waitall_enqueue_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPIX_Waitall_enqueue_t) (QMPI_Context context, int tool_id, int count,$/;"	t
QMPI_Abort_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Abort_t) (QMPI_Context context, int tool_id, MPI_Comm comm, int errorcode);$/;"	t
QMPI_Accumulate_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Accumulate_c_t) (QMPI_Context context, int tool_id, const void *origin_addr,$/;"	t
QMPI_Accumulate_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Accumulate_t) (QMPI_Context context, int tool_id, const void *origin_addr,$/;"	t
QMPI_Add_error_class_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Add_error_class_t) (QMPI_Context context, int tool_id, int *errorclass);$/;"	t
QMPI_Add_error_code_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Add_error_code_t) (QMPI_Context context, int tool_id, int errorclass,$/;"	t
QMPI_Add_error_string_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Add_error_string_t) (QMPI_Context context, int tool_id, int errorcode,$/;"	t
QMPI_Address_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Address_t) (QMPI_Context context, int tool_id, void *location,$/;"	t
QMPI_Aint_add_t	/usr/local/include/mpi_proto.h	/^typedef MPI_Aint (QMPI_Aint_add_t) (QMPI_Context context, int tool_id, MPI_Aint base,$/;"	t
QMPI_Aint_diff_t	/usr/local/include/mpi_proto.h	/^typedef MPI_Aint (QMPI_Aint_diff_t) (QMPI_Context context, int tool_id, MPI_Aint addr1,$/;"	t
QMPI_Allgather_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Allgather_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Allgather_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Allgather_init_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Allgather_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Allgather_init_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Allgather_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Allgather_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Allgatherv_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Allgatherv_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Allgatherv_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Allgatherv_init_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Allgatherv_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Allgatherv_init_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Allgatherv_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Allgatherv_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Alloc_mem_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Alloc_mem_t) (QMPI_Context context, int tool_id, MPI_Aint size, MPI_Info info,$/;"	t
QMPI_Allreduce_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Allreduce_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Allreduce_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Allreduce_init_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Allreduce_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Allreduce_init_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Allreduce_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Allreduce_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Alltoall_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Alltoall_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Alltoall_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Alltoall_init_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Alltoall_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Alltoall_init_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Alltoall_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Alltoall_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Alltoallv_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Alltoallv_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Alltoallv_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Alltoallv_init_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Alltoallv_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Alltoallv_init_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Alltoallv_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Alltoallv_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Alltoallw_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Alltoallw_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Alltoallw_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Alltoallw_init_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Alltoallw_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Alltoallw_init_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Alltoallw_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Alltoallw_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Attr_delete_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Attr_delete_t) (QMPI_Context context, int tool_id, MPI_Comm comm, int keyval);$/;"	t
QMPI_Attr_get_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Attr_get_t) (QMPI_Context context, int tool_id, MPI_Comm comm, int keyval,$/;"	t
QMPI_Attr_put_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Attr_put_t) (QMPI_Context context, int tool_id, MPI_Comm comm, int keyval,$/;"	t
QMPI_Barrier_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Barrier_init_t) (QMPI_Context context, int tool_id, MPI_Comm comm, MPI_Info info,$/;"	t
QMPI_Barrier_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Barrier_t) (QMPI_Context context, int tool_id, MPI_Comm comm);$/;"	t
QMPI_Bcast_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Bcast_c_t) (QMPI_Context context, int tool_id, void *buffer, MPI_Count count,$/;"	t
QMPI_Bcast_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Bcast_init_c_t) (QMPI_Context context, int tool_id, void *buffer, MPI_Count count,$/;"	t
QMPI_Bcast_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Bcast_init_t) (QMPI_Context context, int tool_id, void *buffer, int count,$/;"	t
QMPI_Bcast_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Bcast_t) (QMPI_Context context, int tool_id, void *buffer, int count,$/;"	t
QMPI_Bsend_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Bsend_c_t) (QMPI_Context context, int tool_id, const void *buf, MPI_Count count,$/;"	t
QMPI_Bsend_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Bsend_init_c_t) (QMPI_Context context, int tool_id, const void *buf,$/;"	t
QMPI_Bsend_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Bsend_init_t) (QMPI_Context context, int tool_id, const void *buf, int count,$/;"	t
QMPI_Bsend_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Bsend_t) (QMPI_Context context, int tool_id, const void *buf, int count,$/;"	t
QMPI_Buffer_attach_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Buffer_attach_c_t) (QMPI_Context context, int tool_id, void *buffer,$/;"	t
QMPI_Buffer_attach_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Buffer_attach_t) (QMPI_Context context, int tool_id, void *buffer, int size);$/;"	t
QMPI_Buffer_detach_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Buffer_detach_c_t) (QMPI_Context context, int tool_id, void *buffer_addr,$/;"	t
QMPI_Buffer_detach_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Buffer_detach_t) (QMPI_Context context, int tool_id, void *buffer_addr,$/;"	t
QMPI_Buffer_flush_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Buffer_flush_t) (QMPI_Context context, int tool_id);$/;"	t
QMPI_Buffer_iflush_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Buffer_iflush_t) (QMPI_Context context, int tool_id, MPI_Request *request);$/;"	t
QMPI_Cancel_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Cancel_t) (QMPI_Context context, int tool_id, MPI_Request *request);$/;"	t
QMPI_Cart_coords_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Cart_coords_t) (QMPI_Context context, int tool_id, MPI_Comm comm, int rank,$/;"	t
QMPI_Cart_create_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Cart_create_t) (QMPI_Context context, int tool_id, MPI_Comm comm_old, int ndims,$/;"	t
QMPI_Cart_get_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Cart_get_t) (QMPI_Context context, int tool_id, MPI_Comm comm, int maxdims,$/;"	t
QMPI_Cart_map_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Cart_map_t) (QMPI_Context context, int tool_id, MPI_Comm comm, int ndims,$/;"	t
QMPI_Cart_rank_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Cart_rank_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Cart_shift_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Cart_shift_t) (QMPI_Context context, int tool_id, MPI_Comm comm, int direction,$/;"	t
QMPI_Cart_sub_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Cart_sub_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Cartdim_get_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Cartdim_get_t) (QMPI_Context context, int tool_id, MPI_Comm comm, int *ndims);$/;"	t
QMPI_Close_port_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Close_port_t) (QMPI_Context context, int tool_id, const char *port_name);$/;"	t
QMPI_Comm_accept_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_accept_t) (QMPI_Context context, int tool_id, const char *port_name,$/;"	t
QMPI_Comm_attach_buffer_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_attach_buffer_c_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Comm_attach_buffer_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_attach_buffer_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Comm_c2f_t	/usr/local/include/mpi_proto.h	/^typedef MPI_Fint (QMPI_Comm_c2f_t) (QMPI_Context context, int tool_id, MPI_Comm comm);$/;"	t
QMPI_Comm_call_errhandler_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_call_errhandler_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Comm_compare_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_compare_t) (QMPI_Context context, int tool_id, MPI_Comm comm1,$/;"	t
QMPI_Comm_connect_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_connect_t) (QMPI_Context context, int tool_id, const char *port_name,$/;"	t
QMPI_Comm_create_errhandler_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_create_errhandler_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Comm_create_from_group_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_create_from_group_t) (QMPI_Context context, int tool_id, MPI_Group group,$/;"	t
QMPI_Comm_create_group_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_create_group_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Comm_create_keyval_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_create_keyval_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Comm_create_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_create_t) (QMPI_Context context, int tool_id, MPI_Comm comm, MPI_Group group,$/;"	t
QMPI_Comm_delete_attr_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_delete_attr_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Comm_detach_buffer_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_detach_buffer_c_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Comm_detach_buffer_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_detach_buffer_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Comm_disconnect_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_disconnect_t) (QMPI_Context context, int tool_id, MPI_Comm *comm);$/;"	t
QMPI_Comm_dup_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_dup_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Comm_dup_with_info_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_dup_with_info_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Comm_f2c_t	/usr/local/include/mpi_proto.h	/^typedef MPI_Comm (QMPI_Comm_f2c_t) (QMPI_Context context, int tool_id, MPI_Fint comm);$/;"	t
QMPI_Comm_flush_buffer_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_flush_buffer_t) (QMPI_Context context, int tool_id, MPI_Comm comm);$/;"	t
QMPI_Comm_free_keyval_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_free_keyval_t) (QMPI_Context context, int tool_id, int *comm_keyval);$/;"	t
QMPI_Comm_free_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_free_t) (QMPI_Context context, int tool_id, MPI_Comm *comm);$/;"	t
QMPI_Comm_get_attr_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_get_attr_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Comm_get_errhandler_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_get_errhandler_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Comm_get_info_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_get_info_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Comm_get_name_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_get_name_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Comm_get_parent_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_get_parent_t) (QMPI_Context context, int tool_id, MPI_Comm *parent);$/;"	t
QMPI_Comm_group_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_group_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Comm_idup_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_idup_t) (QMPI_Context context, int tool_id, MPI_Comm comm, MPI_Comm *newcomm,$/;"	t
QMPI_Comm_idup_with_info_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_idup_with_info_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Comm_iflush_buffer_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_iflush_buffer_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Comm_join_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_join_t) (QMPI_Context context, int tool_id, int fd, MPI_Comm *intercomm);$/;"	t
QMPI_Comm_rank_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_rank_t) (QMPI_Context context, int tool_id, MPI_Comm comm, int *rank);$/;"	t
QMPI_Comm_remote_group_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_remote_group_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Comm_remote_size_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_remote_size_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Comm_set_attr_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_set_attr_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Comm_set_errhandler_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_set_errhandler_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Comm_set_info_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_set_info_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Comm_set_name_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_set_name_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Comm_size_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_size_t) (QMPI_Context context, int tool_id, MPI_Comm comm, int *size);$/;"	t
QMPI_Comm_spawn_multiple_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_spawn_multiple_t) (QMPI_Context context, int tool_id, int count,$/;"	t
QMPI_Comm_spawn_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_spawn_t) (QMPI_Context context, int tool_id, const char *command,$/;"	t
QMPI_Comm_split_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_split_t) (QMPI_Context context, int tool_id, MPI_Comm comm, int color,$/;"	t
QMPI_Comm_split_type_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_split_type_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Comm_test_inter_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Comm_test_inter_t) (QMPI_Context context, int tool_id, MPI_Comm comm, int *flag);$/;"	t
QMPI_Compare_and_swap_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Compare_and_swap_t) (QMPI_Context context, int tool_id, const void *origin_addr,$/;"	t
QMPI_Context	/usr/local/include/mpi.h	/^} QMPI_Context;$/;"	t	typeref:struct:__anon2
QMPI_Dims_create_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Dims_create_t) (QMPI_Context context, int tool_id, int nnodes, int ndims,$/;"	t
QMPI_Dist_graph_create_adjacent_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Dist_graph_create_adjacent_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Dist_graph_create_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Dist_graph_create_t) (QMPI_Context context, int tool_id, MPI_Comm comm_old, int n,$/;"	t
QMPI_Dist_graph_neighbors_count_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Dist_graph_neighbors_count_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Dist_graph_neighbors_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Dist_graph_neighbors_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Errhandler_c2f_t	/usr/local/include/mpi_proto.h	/^typedef MPI_Fint (QMPI_Errhandler_c2f_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Errhandler_create_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Errhandler_create_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Errhandler_f2c_t	/usr/local/include/mpi_proto.h	/^typedef MPI_Errhandler (QMPI_Errhandler_f2c_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Errhandler_free_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Errhandler_free_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Errhandler_get_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Errhandler_get_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Errhandler_set_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Errhandler_set_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Error_class_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Error_class_t) (QMPI_Context context, int tool_id, int errorcode,$/;"	t
QMPI_Error_string_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Error_string_t) (QMPI_Context context, int tool_id, int errorcode, char *string,$/;"	t
QMPI_Exscan_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Exscan_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Exscan_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Exscan_init_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Exscan_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Exscan_init_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Exscan_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Exscan_t) (QMPI_Context context, int tool_id, const void *sendbuf, void *recvbuf,$/;"	t
QMPI_Fetch_and_op_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Fetch_and_op_t) (QMPI_Context context, int tool_id, const void *origin_addr,$/;"	t
QMPI_File_call_errhandler_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_File_call_errhandler_t) (QMPI_Context context, int tool_id, MPI_File fh,$/;"	t
QMPI_File_create_errhandler_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_File_create_errhandler_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_File_get_errhandler_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_File_get_errhandler_t) (QMPI_Context context, int tool_id, MPI_File file,$/;"	t
QMPI_File_set_errhandler_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_File_set_errhandler_t) (QMPI_Context context, int tool_id, MPI_File file,$/;"	t
QMPI_Finalize_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Finalize_t) (QMPI_Context context, int tool_id);$/;"	t
QMPI_Finalized_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Finalized_t) (QMPI_Context context, int tool_id, int *flag);$/;"	t
QMPI_Free_mem_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Free_mem_t) (QMPI_Context context, int tool_id, void *base);$/;"	t
QMPI_Functions_enum	/usr/local/include/mpi_proto.h	/^enum QMPI_Functions_enum {$/;"	g
QMPI_Gather_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Gather_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Gather_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Gather_init_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Gather_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Gather_init_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Gather_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Gather_t) (QMPI_Context context, int tool_id, const void *sendbuf, int sendcount,$/;"	t
QMPI_Gatherv_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Gatherv_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Gatherv_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Gatherv_init_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Gatherv_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Gatherv_init_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Gatherv_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Gatherv_t) (QMPI_Context context, int tool_id, const void *sendbuf, int sendcount,$/;"	t
QMPI_Get_accumulate_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Get_accumulate_c_t) (QMPI_Context context, int tool_id, const void *origin_addr,$/;"	t
QMPI_Get_accumulate_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Get_accumulate_t) (QMPI_Context context, int tool_id, const void *origin_addr,$/;"	t
QMPI_Get_address_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Get_address_t) (QMPI_Context context, int tool_id, const void *location,$/;"	t
QMPI_Get_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Get_c_t) (QMPI_Context context, int tool_id, void *origin_addr,$/;"	t
QMPI_Get_count_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Get_count_c_t) (QMPI_Context context, int tool_id, const MPI_Status *status,$/;"	t
QMPI_Get_count_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Get_count_t) (QMPI_Context context, int tool_id, const MPI_Status *status,$/;"	t
QMPI_Get_elements_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Get_elements_c_t) (QMPI_Context context, int tool_id, const MPI_Status *status,$/;"	t
QMPI_Get_elements_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Get_elements_t) (QMPI_Context context, int tool_id, const MPI_Status *status,$/;"	t
QMPI_Get_elements_x_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Get_elements_x_t) (QMPI_Context context, int tool_id, const MPI_Status *status,$/;"	t
QMPI_Get_hw_resource_info_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Get_hw_resource_info_t) (QMPI_Context context, int tool_id, MPI_Info *hw_info);$/;"	t
QMPI_Get_library_version_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Get_library_version_t) (QMPI_Context context, int tool_id, char *version,$/;"	t
QMPI_Get_processor_name_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Get_processor_name_t) (QMPI_Context context, int tool_id, char *name,$/;"	t
QMPI_Get_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Get_t) (QMPI_Context context, int tool_id, void *origin_addr, int origin_count,$/;"	t
QMPI_Get_version_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Get_version_t) (QMPI_Context context, int tool_id, int *version,$/;"	t
QMPI_Graph_create_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Graph_create_t) (QMPI_Context context, int tool_id, MPI_Comm comm_old, int nnodes,$/;"	t
QMPI_Graph_get_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Graph_get_t) (QMPI_Context context, int tool_id, MPI_Comm comm, int maxindex,$/;"	t
QMPI_Graph_map_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Graph_map_t) (QMPI_Context context, int tool_id, MPI_Comm comm, int nnodes,$/;"	t
QMPI_Graph_neighbors_count_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Graph_neighbors_count_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Graph_neighbors_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Graph_neighbors_t) (QMPI_Context context, int tool_id, MPI_Comm comm, int rank,$/;"	t
QMPI_Graphdims_get_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Graphdims_get_t) (QMPI_Context context, int tool_id, MPI_Comm comm, int *nnodes,$/;"	t
QMPI_Grequest_complete_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Grequest_complete_t) (QMPI_Context context, int tool_id, MPI_Request request);$/;"	t
QMPI_Grequest_start_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Grequest_start_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Group_c2f_t	/usr/local/include/mpi_proto.h	/^typedef MPI_Fint (QMPI_Group_c2f_t) (QMPI_Context context, int tool_id, MPI_Group group);$/;"	t
QMPI_Group_compare_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Group_compare_t) (QMPI_Context context, int tool_id, MPI_Group group1,$/;"	t
QMPI_Group_difference_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Group_difference_t) (QMPI_Context context, int tool_id, MPI_Group group1,$/;"	t
QMPI_Group_excl_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Group_excl_t) (QMPI_Context context, int tool_id, MPI_Group group, int n,$/;"	t
QMPI_Group_f2c_t	/usr/local/include/mpi_proto.h	/^typedef MPI_Group (QMPI_Group_f2c_t) (QMPI_Context context, int tool_id, MPI_Fint group);$/;"	t
QMPI_Group_free_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Group_free_t) (QMPI_Context context, int tool_id, MPI_Group *group);$/;"	t
QMPI_Group_from_session_pset_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Group_from_session_pset_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Group_incl_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Group_incl_t) (QMPI_Context context, int tool_id, MPI_Group group, int n,$/;"	t
QMPI_Group_intersection_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Group_intersection_t) (QMPI_Context context, int tool_id, MPI_Group group1,$/;"	t
QMPI_Group_range_excl_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Group_range_excl_t) (QMPI_Context context, int tool_id, MPI_Group group, int n,$/;"	t
QMPI_Group_range_incl_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Group_range_incl_t) (QMPI_Context context, int tool_id, MPI_Group group, int n,$/;"	t
QMPI_Group_rank_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Group_rank_t) (QMPI_Context context, int tool_id, MPI_Group group, int *rank);$/;"	t
QMPI_Group_size_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Group_size_t) (QMPI_Context context, int tool_id, MPI_Group group, int *size);$/;"	t
QMPI_Group_translate_ranks_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Group_translate_ranks_t) (QMPI_Context context, int tool_id, MPI_Group group1,$/;"	t
QMPI_Group_union_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Group_union_t) (QMPI_Context context, int tool_id, MPI_Group group1,$/;"	t
QMPI_Iallgather_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Iallgather_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Iallgather_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Iallgather_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Iallgatherv_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Iallgatherv_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Iallgatherv_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Iallgatherv_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Iallreduce_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Iallreduce_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Iallreduce_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Iallreduce_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Ialltoall_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ialltoall_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Ialltoall_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ialltoall_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Ialltoallv_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ialltoallv_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Ialltoallv_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ialltoallv_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Ialltoallw_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ialltoallw_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Ialltoallw_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ialltoallw_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Ibarrier_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ibarrier_t) (QMPI_Context context, int tool_id, MPI_Comm comm,$/;"	t
QMPI_Ibcast_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ibcast_c_t) (QMPI_Context context, int tool_id, void *buffer, MPI_Count count,$/;"	t
QMPI_Ibcast_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ibcast_t) (QMPI_Context context, int tool_id, void *buffer, int count,$/;"	t
QMPI_Ibsend_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ibsend_c_t) (QMPI_Context context, int tool_id, const void *buf, MPI_Count count,$/;"	t
QMPI_Ibsend_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ibsend_t) (QMPI_Context context, int tool_id, const void *buf, int count,$/;"	t
QMPI_Iexscan_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Iexscan_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Iexscan_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Iexscan_t) (QMPI_Context context, int tool_id, const void *sendbuf, void *recvbuf,$/;"	t
QMPI_Igather_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Igather_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Igather_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Igather_t) (QMPI_Context context, int tool_id, const void *sendbuf, int sendcount,$/;"	t
QMPI_Igatherv_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Igatherv_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Igatherv_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Igatherv_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Improbe_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Improbe_t) (QMPI_Context context, int tool_id, int source, int tag, MPI_Comm comm,$/;"	t
QMPI_Imrecv_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Imrecv_c_t) (QMPI_Context context, int tool_id, void *buf, MPI_Count count,$/;"	t
QMPI_Imrecv_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Imrecv_t) (QMPI_Context context, int tool_id, void *buf, int count,$/;"	t
QMPI_Ineighbor_allgather_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ineighbor_allgather_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Ineighbor_allgather_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ineighbor_allgather_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Ineighbor_allgatherv_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ineighbor_allgatherv_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Ineighbor_allgatherv_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ineighbor_allgatherv_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Ineighbor_alltoall_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ineighbor_alltoall_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Ineighbor_alltoall_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ineighbor_alltoall_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Ineighbor_alltoallv_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ineighbor_alltoallv_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Ineighbor_alltoallv_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ineighbor_alltoallv_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Ineighbor_alltoallw_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ineighbor_alltoallw_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Ineighbor_alltoallw_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ineighbor_alltoallw_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Info_c2f_t	/usr/local/include/mpi_proto.h	/^typedef MPI_Fint (QMPI_Info_c2f_t) (QMPI_Context context, int tool_id, MPI_Info info);$/;"	t
QMPI_Info_create_env_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Info_create_env_t) (QMPI_Context context, int tool_id, int argc, char *argv[],$/;"	t
QMPI_Info_create_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Info_create_t) (QMPI_Context context, int tool_id, MPI_Info *info);$/;"	t
QMPI_Info_delete_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Info_delete_t) (QMPI_Context context, int tool_id, MPI_Info info,$/;"	t
QMPI_Info_dup_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Info_dup_t) (QMPI_Context context, int tool_id, MPI_Info info,$/;"	t
QMPI_Info_f2c_t	/usr/local/include/mpi_proto.h	/^typedef MPI_Info (QMPI_Info_f2c_t) (QMPI_Context context, int tool_id, MPI_Fint info);$/;"	t
QMPI_Info_free_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Info_free_t) (QMPI_Context context, int tool_id, MPI_Info *info);$/;"	t
QMPI_Info_get_nkeys_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Info_get_nkeys_t) (QMPI_Context context, int tool_id, MPI_Info info, int *nkeys);$/;"	t
QMPI_Info_get_nthkey_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Info_get_nthkey_t) (QMPI_Context context, int tool_id, MPI_Info info, int n,$/;"	t
QMPI_Info_get_string_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Info_get_string_t) (QMPI_Context context, int tool_id, MPI_Info info,$/;"	t
QMPI_Info_get_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Info_get_t) (QMPI_Context context, int tool_id, MPI_Info info, const char *key,$/;"	t
QMPI_Info_get_valuelen_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Info_get_valuelen_t) (QMPI_Context context, int tool_id, MPI_Info info,$/;"	t
QMPI_Info_set_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Info_set_t) (QMPI_Context context, int tool_id, MPI_Info info, const char *key,$/;"	t
QMPI_Init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Init_t) (QMPI_Context context, int tool_id, int *argc, char ***argv);$/;"	t
QMPI_Init_thread_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Init_thread_t) (QMPI_Context context, int tool_id, int *argc, char ***argv,$/;"	t
QMPI_Initialized_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Initialized_t) (QMPI_Context context, int tool_id, int *flag);$/;"	t
QMPI_Intercomm_create_from_groups_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Intercomm_create_from_groups_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Intercomm_create_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Intercomm_create_t) (QMPI_Context context, int tool_id, MPI_Comm local_comm,$/;"	t
QMPI_Intercomm_merge_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Intercomm_merge_t) (QMPI_Context context, int tool_id, MPI_Comm intercomm,$/;"	t
QMPI_Iprobe_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Iprobe_t) (QMPI_Context context, int tool_id, int source, int tag, MPI_Comm comm,$/;"	t
QMPI_Irecv_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Irecv_c_t) (QMPI_Context context, int tool_id, void *buf, MPI_Count count,$/;"	t
QMPI_Irecv_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Irecv_t) (QMPI_Context context, int tool_id, void *buf, int count,$/;"	t
QMPI_Ireduce_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ireduce_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Ireduce_scatter_block_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ireduce_scatter_block_c_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Ireduce_scatter_block_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ireduce_scatter_block_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Ireduce_scatter_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ireduce_scatter_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Ireduce_scatter_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ireduce_scatter_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Ireduce_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ireduce_t) (QMPI_Context context, int tool_id, const void *sendbuf, void *recvbuf,$/;"	t
QMPI_Irsend_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Irsend_c_t) (QMPI_Context context, int tool_id, const void *buf, MPI_Count count,$/;"	t
QMPI_Irsend_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Irsend_t) (QMPI_Context context, int tool_id, const void *buf, int count,$/;"	t
QMPI_Is_thread_main_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Is_thread_main_t) (QMPI_Context context, int tool_id, int *flag);$/;"	t
QMPI_Iscan_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Iscan_c_t) (QMPI_Context context, int tool_id, const void *sendbuf, void *recvbuf,$/;"	t
QMPI_Iscan_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Iscan_t) (QMPI_Context context, int tool_id, const void *sendbuf, void *recvbuf,$/;"	t
QMPI_Iscatter_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Iscatter_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Iscatter_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Iscatter_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Iscatterv_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Iscatterv_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Iscatterv_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Iscatterv_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Isend_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Isend_c_t) (QMPI_Context context, int tool_id, const void *buf, MPI_Count count,$/;"	t
QMPI_Isend_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Isend_t) (QMPI_Context context, int tool_id, const void *buf, int count,$/;"	t
QMPI_Isendrecv_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Isendrecv_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Isendrecv_replace_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Isendrecv_replace_c_t) (QMPI_Context context, int tool_id, void *buf,$/;"	t
QMPI_Isendrecv_replace_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Isendrecv_replace_t) (QMPI_Context context, int tool_id, void *buf, int count,$/;"	t
QMPI_Isendrecv_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Isendrecv_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Issend_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Issend_c_t) (QMPI_Context context, int tool_id, const void *buf, MPI_Count count,$/;"	t
QMPI_Issend_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Issend_t) (QMPI_Context context, int tool_id, const void *buf, int count,$/;"	t
QMPI_Keyval_create_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Keyval_create_t) (QMPI_Context context, int tool_id, MPI_Copy_function *copy_fn,$/;"	t
QMPI_Keyval_free_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Keyval_free_t) (QMPI_Context context, int tool_id, int *keyval);$/;"	t
QMPI_Lookup_name_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Lookup_name_t) (QMPI_Context context, int tool_id, const char *service_name,$/;"	t
QMPI_MAX_TOOL_NAME_LENGTH	/usr/local/include/mpi.h	927;"	d
QMPI_Message_c2f_t	/usr/local/include/mpi_proto.h	/^typedef MPI_Fint (QMPI_Message_c2f_t) (QMPI_Context context, int tool_id, MPI_Message message);$/;"	t
QMPI_Message_f2c_t	/usr/local/include/mpi_proto.h	/^typedef MPI_Message (QMPI_Message_f2c_t) (QMPI_Context context, int tool_id, MPI_Fint message);$/;"	t
QMPI_Mprobe_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Mprobe_t) (QMPI_Context context, int tool_id, int source, int tag, MPI_Comm comm,$/;"	t
QMPI_Mrecv_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Mrecv_c_t) (QMPI_Context context, int tool_id, void *buf, MPI_Count count,$/;"	t
QMPI_Mrecv_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Mrecv_t) (QMPI_Context context, int tool_id, void *buf, int count,$/;"	t
QMPI_Neighbor_allgather_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Neighbor_allgather_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Neighbor_allgather_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Neighbor_allgather_init_c_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Neighbor_allgather_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Neighbor_allgather_init_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Neighbor_allgather_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Neighbor_allgather_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Neighbor_allgatherv_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Neighbor_allgatherv_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Neighbor_allgatherv_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Neighbor_allgatherv_init_c_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Neighbor_allgatherv_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Neighbor_allgatherv_init_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Neighbor_allgatherv_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Neighbor_allgatherv_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Neighbor_alltoall_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Neighbor_alltoall_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Neighbor_alltoall_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Neighbor_alltoall_init_c_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Neighbor_alltoall_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Neighbor_alltoall_init_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Neighbor_alltoall_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Neighbor_alltoall_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Neighbor_alltoallv_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Neighbor_alltoallv_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Neighbor_alltoallv_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Neighbor_alltoallv_init_c_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Neighbor_alltoallv_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Neighbor_alltoallv_init_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Neighbor_alltoallv_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Neighbor_alltoallv_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Neighbor_alltoallw_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Neighbor_alltoallw_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Neighbor_alltoallw_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Neighbor_alltoallw_init_c_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Neighbor_alltoallw_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Neighbor_alltoallw_init_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Neighbor_alltoallw_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Neighbor_alltoallw_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Op_c2f_t	/usr/local/include/mpi_proto.h	/^typedef MPI_Fint (QMPI_Op_c2f_t) (QMPI_Context context, int tool_id, MPI_Op op);$/;"	t
QMPI_Op_commutative_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Op_commutative_t) (QMPI_Context context, int tool_id, MPI_Op op, int *commute);$/;"	t
QMPI_Op_create_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Op_create_c_t) (QMPI_Context context, int tool_id, MPI_User_function_c *user_fn,$/;"	t
QMPI_Op_create_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Op_create_t) (QMPI_Context context, int tool_id, MPI_User_function *user_fn,$/;"	t
QMPI_Op_f2c_t	/usr/local/include/mpi_proto.h	/^typedef MPI_Op (QMPI_Op_f2c_t) (QMPI_Context context, int tool_id, MPI_Fint op);$/;"	t
QMPI_Op_free_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Op_free_t) (QMPI_Context context, int tool_id, MPI_Op *op);$/;"	t
QMPI_Open_port_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Open_port_t) (QMPI_Context context, int tool_id, MPI_Info info, char *port_name);$/;"	t
QMPI_Pack_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Pack_c_t) (QMPI_Context context, int tool_id, const void *inbuf,$/;"	t
QMPI_Pack_external_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Pack_external_c_t) (QMPI_Context context, int tool_id, const char *datarep,$/;"	t
QMPI_Pack_external_size_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Pack_external_size_c_t) (QMPI_Context context, int tool_id, const char *datarep,$/;"	t
QMPI_Pack_external_size_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Pack_external_size_t) (QMPI_Context context, int tool_id, const char *datarep,$/;"	t
QMPI_Pack_external_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Pack_external_t) (QMPI_Context context, int tool_id, const char *datarep,$/;"	t
QMPI_Pack_size_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Pack_size_c_t) (QMPI_Context context, int tool_id, MPI_Count incount,$/;"	t
QMPI_Pack_size_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Pack_size_t) (QMPI_Context context, int tool_id, int incount,$/;"	t
QMPI_Pack_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Pack_t) (QMPI_Context context, int tool_id, const void *inbuf, int incount,$/;"	t
QMPI_Parrived_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Parrived_t) (QMPI_Context context, int tool_id, MPI_Request request,$/;"	t
QMPI_Pcontrol_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Pcontrol_t) (QMPI_Context context, int tool_id, const int level, ...);$/;"	t
QMPI_Pready_list_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Pready_list_t) (QMPI_Context context, int tool_id, int length,$/;"	t
QMPI_Pready_range_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Pready_range_t) (QMPI_Context context, int tool_id, int partition_low,$/;"	t
QMPI_Pready_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Pready_t) (QMPI_Context context, int tool_id, int partition,$/;"	t
QMPI_Precv_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Precv_init_t) (QMPI_Context context, int tool_id, void *buf, int partitions,$/;"	t
QMPI_Probe_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Probe_t) (QMPI_Context context, int tool_id, int source, int tag, MPI_Comm comm,$/;"	t
QMPI_Psend_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Psend_init_t) (QMPI_Context context, int tool_id, const void *buf, int partitions,$/;"	t
QMPI_Publish_name_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Publish_name_t) (QMPI_Context context, int tool_id, const char *service_name,$/;"	t
QMPI_Put_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Put_c_t) (QMPI_Context context, int tool_id, const void *origin_addr,$/;"	t
QMPI_Put_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Put_t) (QMPI_Context context, int tool_id, const void *origin_addr,$/;"	t
QMPI_Query_thread_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Query_thread_t) (QMPI_Context context, int tool_id, int *provided);$/;"	t
QMPI_Raccumulate_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Raccumulate_c_t) (QMPI_Context context, int tool_id, const void *origin_addr,$/;"	t
QMPI_Raccumulate_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Raccumulate_t) (QMPI_Context context, int tool_id, const void *origin_addr,$/;"	t
QMPI_Recv_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Recv_c_t) (QMPI_Context context, int tool_id, void *buf, MPI_Count count,$/;"	t
QMPI_Recv_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Recv_init_c_t) (QMPI_Context context, int tool_id, void *buf, MPI_Count count,$/;"	t
QMPI_Recv_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Recv_init_t) (QMPI_Context context, int tool_id, void *buf, int count,$/;"	t
QMPI_Recv_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Recv_t) (QMPI_Context context, int tool_id, void *buf, int count,$/;"	t
QMPI_Reduce_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Reduce_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Reduce_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Reduce_init_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Reduce_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Reduce_init_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Reduce_local_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Reduce_local_c_t) (QMPI_Context context, int tool_id, const void *inbuf,$/;"	t
QMPI_Reduce_local_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Reduce_local_t) (QMPI_Context context, int tool_id, const void *inbuf,$/;"	t
QMPI_Reduce_scatter_block_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Reduce_scatter_block_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Reduce_scatter_block_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Reduce_scatter_block_init_c_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Reduce_scatter_block_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Reduce_scatter_block_init_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Reduce_scatter_block_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Reduce_scatter_block_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Reduce_scatter_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Reduce_scatter_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Reduce_scatter_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Reduce_scatter_init_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Reduce_scatter_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Reduce_scatter_init_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Reduce_scatter_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Reduce_scatter_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Reduce_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Reduce_t) (QMPI_Context context, int tool_id, const void *sendbuf, void *recvbuf,$/;"	t
QMPI_Remove_error_class_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Remove_error_class_t) (QMPI_Context context, int tool_id, int errorclass);$/;"	t
QMPI_Remove_error_code_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Remove_error_code_t) (QMPI_Context context, int tool_id, int errorcode);$/;"	t
QMPI_Remove_error_string_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Remove_error_string_t) (QMPI_Context context, int tool_id, int errorcode);$/;"	t
QMPI_Request_c2f_t	/usr/local/include/mpi_proto.h	/^typedef MPI_Fint (QMPI_Request_c2f_t) (QMPI_Context context, int tool_id, MPI_Request request);$/;"	t
QMPI_Request_f2c_t	/usr/local/include/mpi_proto.h	/^typedef MPI_Request (QMPI_Request_f2c_t) (QMPI_Context context, int tool_id, MPI_Fint request);$/;"	t
QMPI_Request_free_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Request_free_t) (QMPI_Context context, int tool_id, MPI_Request *request);$/;"	t
QMPI_Request_get_status_all_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Request_get_status_all_t) (QMPI_Context context, int tool_id, int count,$/;"	t
QMPI_Request_get_status_any_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Request_get_status_any_t) (QMPI_Context context, int tool_id, int count,$/;"	t
QMPI_Request_get_status_some_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Request_get_status_some_t) (QMPI_Context context, int tool_id, int incount,$/;"	t
QMPI_Request_get_status_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Request_get_status_t) (QMPI_Context context, int tool_id, MPI_Request request,$/;"	t
QMPI_Rget_accumulate_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Rget_accumulate_c_t) (QMPI_Context context, int tool_id, const void *origin_addr,$/;"	t
QMPI_Rget_accumulate_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Rget_accumulate_t) (QMPI_Context context, int tool_id, const void *origin_addr,$/;"	t
QMPI_Rget_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Rget_c_t) (QMPI_Context context, int tool_id, void *origin_addr,$/;"	t
QMPI_Rget_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Rget_t) (QMPI_Context context, int tool_id, void *origin_addr, int origin_count,$/;"	t
QMPI_Rput_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Rput_c_t) (QMPI_Context context, int tool_id, const void *origin_addr,$/;"	t
QMPI_Rput_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Rput_t) (QMPI_Context context, int tool_id, const void *origin_addr,$/;"	t
QMPI_Rsend_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Rsend_c_t) (QMPI_Context context, int tool_id, const void *buf, MPI_Count count,$/;"	t
QMPI_Rsend_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Rsend_init_c_t) (QMPI_Context context, int tool_id, const void *buf,$/;"	t
QMPI_Rsend_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Rsend_init_t) (QMPI_Context context, int tool_id, const void *buf, int count,$/;"	t
QMPI_Rsend_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Rsend_t) (QMPI_Context context, int tool_id, const void *buf, int count,$/;"	t
QMPI_Scan_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Scan_c_t) (QMPI_Context context, int tool_id, const void *sendbuf, void *recvbuf,$/;"	t
QMPI_Scan_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Scan_init_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Scan_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Scan_init_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Scan_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Scan_t) (QMPI_Context context, int tool_id, const void *sendbuf, void *recvbuf,$/;"	t
QMPI_Scatter_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Scatter_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Scatter_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Scatter_init_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Scatter_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Scatter_init_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Scatter_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Scatter_t) (QMPI_Context context, int tool_id, const void *sendbuf, int sendcount,$/;"	t
QMPI_Scatterv_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Scatterv_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Scatterv_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Scatterv_init_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Scatterv_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Scatterv_init_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Scatterv_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Scatterv_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Send_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Send_c_t) (QMPI_Context context, int tool_id, const void *buf, MPI_Count count,$/;"	t
QMPI_Send_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Send_init_c_t) (QMPI_Context context, int tool_id, const void *buf,$/;"	t
QMPI_Send_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Send_init_t) (QMPI_Context context, int tool_id, const void *buf, int count,$/;"	t
QMPI_Send_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Send_t) (QMPI_Context context, int tool_id, const void *buf, int count,$/;"	t
QMPI_Sendrecv_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Sendrecv_c_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Sendrecv_replace_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Sendrecv_replace_c_t) (QMPI_Context context, int tool_id, void *buf,$/;"	t
QMPI_Sendrecv_replace_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Sendrecv_replace_t) (QMPI_Context context, int tool_id, void *buf, int count,$/;"	t
QMPI_Sendrecv_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Sendrecv_t) (QMPI_Context context, int tool_id, const void *sendbuf,$/;"	t
QMPI_Session_attach_buffer_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Session_attach_buffer_c_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Session_attach_buffer_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Session_attach_buffer_t) (QMPI_Context context, int tool_id, MPI_Session session,$/;"	t
QMPI_Session_c2f_t	/usr/local/include/mpi_proto.h	/^typedef MPI_Fint (QMPI_Session_c2f_t) (QMPI_Context context, int tool_id, MPI_Session session);$/;"	t
QMPI_Session_call_errhandler_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Session_call_errhandler_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Session_create_errhandler_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Session_create_errhandler_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Session_detach_buffer_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Session_detach_buffer_c_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Session_detach_buffer_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Session_detach_buffer_t) (QMPI_Context context, int tool_id, MPI_Session session,$/;"	t
QMPI_Session_f2c_t	/usr/local/include/mpi_proto.h	/^typedef MPI_Session (QMPI_Session_f2c_t) (QMPI_Context context, int tool_id, MPI_Fint session);$/;"	t
QMPI_Session_finalize_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Session_finalize_t) (QMPI_Context context, int tool_id, MPI_Session *session);$/;"	t
QMPI_Session_flush_buffer_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Session_flush_buffer_t) (QMPI_Context context, int tool_id, MPI_Session session);$/;"	t
QMPI_Session_get_errhandler_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Session_get_errhandler_t) (QMPI_Context context, int tool_id, MPI_Session session,$/;"	t
QMPI_Session_get_info_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Session_get_info_t) (QMPI_Context context, int tool_id, MPI_Session session,$/;"	t
QMPI_Session_get_nth_pset_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Session_get_nth_pset_t) (QMPI_Context context, int tool_id, MPI_Session session,$/;"	t
QMPI_Session_get_num_psets_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Session_get_num_psets_t) (QMPI_Context context, int tool_id, MPI_Session session,$/;"	t
QMPI_Session_get_pset_info_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Session_get_pset_info_t) (QMPI_Context context, int tool_id, MPI_Session session,$/;"	t
QMPI_Session_iflush_buffer_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Session_iflush_buffer_t) (QMPI_Context context, int tool_id, MPI_Session session,$/;"	t
QMPI_Session_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Session_init_t) (QMPI_Context context, int tool_id, MPI_Info info,$/;"	t
QMPI_Session_set_errhandler_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Session_set_errhandler_t) (QMPI_Context context, int tool_id, MPI_Session session,$/;"	t
QMPI_Ssend_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ssend_c_t) (QMPI_Context context, int tool_id, const void *buf, MPI_Count count,$/;"	t
QMPI_Ssend_init_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ssend_init_c_t) (QMPI_Context context, int tool_id, const void *buf,$/;"	t
QMPI_Ssend_init_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ssend_init_t) (QMPI_Context context, int tool_id, const void *buf, int count,$/;"	t
QMPI_Ssend_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Ssend_t) (QMPI_Context context, int tool_id, const void *buf, int count,$/;"	t
QMPI_Start_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Start_t) (QMPI_Context context, int tool_id, MPI_Request *request);$/;"	t
QMPI_Startall_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Startall_t) (QMPI_Context context, int tool_id, int count,$/;"	t
QMPI_Status_c2f08_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Status_c2f08_t) (QMPI_Context context, int tool_id, const MPI_Status *c_status,$/;"	t
QMPI_Status_c2f_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Status_c2f_t) (QMPI_Context context, int tool_id, const MPI_Status *c_status,$/;"	t
QMPI_Status_f082c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Status_f082c_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Status_f082f_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Status_f082f_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Status_f2c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Status_f2c_t) (QMPI_Context context, int tool_id, const MPI_Fint *f_status,$/;"	t
QMPI_Status_f2f08_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Status_f2f08_t) (QMPI_Context context, int tool_id, const MPI_Fint *f_status,$/;"	t
QMPI_Status_get_error_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Status_get_error_t) (QMPI_Context context, int tool_id, MPI_Status *status,$/;"	t
QMPI_Status_get_source_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Status_get_source_t) (QMPI_Context context, int tool_id, MPI_Status *status,$/;"	t
QMPI_Status_get_tag_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Status_get_tag_t) (QMPI_Context context, int tool_id, MPI_Status *status,$/;"	t
QMPI_Status_set_cancelled_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Status_set_cancelled_t) (QMPI_Context context, int tool_id, MPI_Status *status,$/;"	t
QMPI_Status_set_elements_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Status_set_elements_c_t) (QMPI_Context context, int tool_id, MPI_Status *status,$/;"	t
QMPI_Status_set_elements_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Status_set_elements_t) (QMPI_Context context, int tool_id, MPI_Status *status,$/;"	t
QMPI_Status_set_elements_x_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Status_set_elements_x_t) (QMPI_Context context, int tool_id, MPI_Status *status,$/;"	t
QMPI_Status_set_error_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Status_set_error_t) (QMPI_Context context, int tool_id, MPI_Status *status,$/;"	t
QMPI_Status_set_source_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Status_set_source_t) (QMPI_Context context, int tool_id, MPI_Status *status,$/;"	t
QMPI_Status_set_tag_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Status_set_tag_t) (QMPI_Context context, int tool_id, MPI_Status *status,$/;"	t
QMPI_T_category_changed_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_category_changed_t) (QMPI_Context context, int tool_id, int *update_number);$/;"	t
QMPI_T_category_get_categories_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_category_get_categories_t) (QMPI_Context context, int tool_id, int cat_index,$/;"	t
QMPI_T_category_get_cvars_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_category_get_cvars_t) (QMPI_Context context, int tool_id, int cat_index,$/;"	t
QMPI_T_category_get_events_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_category_get_events_t) (QMPI_Context context, int tool_id, int cat_index,$/;"	t
QMPI_T_category_get_index_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_category_get_index_t) (QMPI_Context context, int tool_id, const char *name,$/;"	t
QMPI_T_category_get_info_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_category_get_info_t) (QMPI_Context context, int tool_id, int cat_index,$/;"	t
QMPI_T_category_get_num_events_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_category_get_num_events_t) (QMPI_Context context, int tool_id, int cat_index,$/;"	t
QMPI_T_category_get_num_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_category_get_num_t) (QMPI_Context context, int tool_id, int *num_cat);$/;"	t
QMPI_T_category_get_pvars_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_category_get_pvars_t) (QMPI_Context context, int tool_id, int cat_index,$/;"	t
QMPI_T_cvar_get_index_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_cvar_get_index_t) (QMPI_Context context, int tool_id, const char *name,$/;"	t
QMPI_T_cvar_get_info_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_cvar_get_info_t) (QMPI_Context context, int tool_id, int cvar_index, char *name,$/;"	t
QMPI_T_cvar_get_num_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_cvar_get_num_t) (QMPI_Context context, int tool_id, int *num_cvar);$/;"	t
QMPI_T_cvar_handle_alloc_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_cvar_handle_alloc_t) (QMPI_Context context, int tool_id, int cvar_index,$/;"	t
QMPI_T_cvar_handle_free_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_cvar_handle_free_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_T_cvar_read_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_cvar_read_t) (QMPI_Context context, int tool_id, MPI_T_cvar_handle handle,$/;"	t
QMPI_T_cvar_write_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_cvar_write_t) (QMPI_Context context, int tool_id, MPI_T_cvar_handle handle,$/;"	t
QMPI_T_enum_get_info_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_enum_get_info_t) (QMPI_Context context, int tool_id, MPI_T_enum enumtype,$/;"	t
QMPI_T_enum_get_item_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_enum_get_item_t) (QMPI_Context context, int tool_id, MPI_T_enum enumtype,$/;"	t
QMPI_T_event_callback_get_info_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_event_callback_get_info_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_T_event_callback_set_info_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_event_callback_set_info_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_T_event_copy_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_event_copy_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_T_event_get_index_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_event_get_index_t) (QMPI_Context context, int tool_id, const char *name,$/;"	t
QMPI_T_event_get_info_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_event_get_info_t) (QMPI_Context context, int tool_id, int event_index,$/;"	t
QMPI_T_event_get_num_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_event_get_num_t) (QMPI_Context context, int tool_id, int *num_events);$/;"	t
QMPI_T_event_get_source_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_event_get_source_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_T_event_get_timestamp_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_event_get_timestamp_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_T_event_handle_alloc_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_event_handle_alloc_t) (QMPI_Context context, int tool_id, int event_index,$/;"	t
QMPI_T_event_handle_free_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_event_handle_free_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_T_event_handle_get_info_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_event_handle_get_info_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_T_event_handle_set_info_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_event_handle_set_info_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_T_event_read_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_event_read_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_T_event_register_callback_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_event_register_callback_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_T_event_set_dropped_handler_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_event_set_dropped_handler_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_T_finalize_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_finalize_t) (QMPI_Context context, int tool_id);$/;"	t
QMPI_T_init_thread_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_init_thread_t) (QMPI_Context context, int tool_id, int required,$/;"	t
QMPI_T_pvar_get_index_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_pvar_get_index_t) (QMPI_Context context, int tool_id, const char *name,$/;"	t
QMPI_T_pvar_get_info_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_pvar_get_info_t) (QMPI_Context context, int tool_id, int pvar_index, char *name,$/;"	t
QMPI_T_pvar_get_num_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_pvar_get_num_t) (QMPI_Context context, int tool_id, int *num_pvar);$/;"	t
QMPI_T_pvar_handle_alloc_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_pvar_handle_alloc_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_T_pvar_handle_free_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_pvar_handle_free_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_T_pvar_read_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_pvar_read_t) (QMPI_Context context, int tool_id, MPI_T_pvar_session session,$/;"	t
QMPI_T_pvar_readreset_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_pvar_readreset_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_T_pvar_reset_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_pvar_reset_t) (QMPI_Context context, int tool_id, MPI_T_pvar_session session,$/;"	t
QMPI_T_pvar_session_create_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_pvar_session_create_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_T_pvar_session_free_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_pvar_session_free_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_T_pvar_start_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_pvar_start_t) (QMPI_Context context, int tool_id, MPI_T_pvar_session session,$/;"	t
QMPI_T_pvar_stop_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_pvar_stop_t) (QMPI_Context context, int tool_id, MPI_T_pvar_session session,$/;"	t
QMPI_T_pvar_write_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_pvar_write_t) (QMPI_Context context, int tool_id, MPI_T_pvar_session session,$/;"	t
QMPI_T_source_get_info_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_source_get_info_t) (QMPI_Context context, int tool_id, int source_index,$/;"	t
QMPI_T_source_get_num_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_source_get_num_t) (QMPI_Context context, int tool_id, int *num_sources);$/;"	t
QMPI_T_source_get_timestamp_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_T_source_get_timestamp_t) (QMPI_Context context, int tool_id, int source_index,$/;"	t
QMPI_Test_cancelled_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Test_cancelled_t) (QMPI_Context context, int tool_id, const MPI_Status *status,$/;"	t
QMPI_Test_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Test_t) (QMPI_Context context, int tool_id, MPI_Request *request, int *flag,$/;"	t
QMPI_Testall_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Testall_t) (QMPI_Context context, int tool_id, int count,$/;"	t
QMPI_Testany_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Testany_t) (QMPI_Context context, int tool_id, int count,$/;"	t
QMPI_Testsome_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Testsome_t) (QMPI_Context context, int tool_id, int incount,$/;"	t
QMPI_Topo_test_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Topo_test_t) (QMPI_Context context, int tool_id, MPI_Comm comm, int *status);$/;"	t
QMPI_Type_c2f_t	/usr/local/include/mpi_proto.h	/^typedef MPI_Fint (QMPI_Type_c2f_t) (QMPI_Context context, int tool_id, MPI_Datatype datatype);$/;"	t
QMPI_Type_commit_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_commit_t) (QMPI_Context context, int tool_id, MPI_Datatype *datatype);$/;"	t
QMPI_Type_contiguous_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_contiguous_c_t) (QMPI_Context context, int tool_id, MPI_Count count,$/;"	t
QMPI_Type_contiguous_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_contiguous_t) (QMPI_Context context, int tool_id, int count,$/;"	t
QMPI_Type_create_darray_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_create_darray_c_t) (QMPI_Context context, int tool_id, int size, int rank,$/;"	t
QMPI_Type_create_darray_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_create_darray_t) (QMPI_Context context, int tool_id, int size, int rank,$/;"	t
QMPI_Type_create_f90_complex_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_create_f90_complex_t) (QMPI_Context context, int tool_id, int p, int r,$/;"	t
QMPI_Type_create_f90_integer_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_create_f90_integer_t) (QMPI_Context context, int tool_id, int r,$/;"	t
QMPI_Type_create_f90_real_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_create_f90_real_t) (QMPI_Context context, int tool_id, int p, int r,$/;"	t
QMPI_Type_create_hindexed_block_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_create_hindexed_block_c_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Type_create_hindexed_block_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_create_hindexed_block_t) (QMPI_Context context, int tool_id, int count,$/;"	t
QMPI_Type_create_hindexed_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_create_hindexed_c_t) (QMPI_Context context, int tool_id, MPI_Count count,$/;"	t
QMPI_Type_create_hindexed_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_create_hindexed_t) (QMPI_Context context, int tool_id, int count,$/;"	t
QMPI_Type_create_hvector_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_create_hvector_c_t) (QMPI_Context context, int tool_id, MPI_Count count,$/;"	t
QMPI_Type_create_hvector_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_create_hvector_t) (QMPI_Context context, int tool_id, int count,$/;"	t
QMPI_Type_create_indexed_block_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_create_indexed_block_c_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Type_create_indexed_block_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_create_indexed_block_t) (QMPI_Context context, int tool_id, int count,$/;"	t
QMPI_Type_create_keyval_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_create_keyval_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Type_create_resized_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_create_resized_c_t) (QMPI_Context context, int tool_id, MPI_Datatype oldtype,$/;"	t
QMPI_Type_create_resized_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_create_resized_t) (QMPI_Context context, int tool_id, MPI_Datatype oldtype,$/;"	t
QMPI_Type_create_struct_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_create_struct_c_t) (QMPI_Context context, int tool_id, MPI_Count count,$/;"	t
QMPI_Type_create_struct_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_create_struct_t) (QMPI_Context context, int tool_id, int count,$/;"	t
QMPI_Type_create_subarray_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_create_subarray_c_t) (QMPI_Context context, int tool_id, int ndims,$/;"	t
QMPI_Type_create_subarray_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_create_subarray_t) (QMPI_Context context, int tool_id, int ndims,$/;"	t
QMPI_Type_delete_attr_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_delete_attr_t) (QMPI_Context context, int tool_id, MPI_Datatype datatype,$/;"	t
QMPI_Type_dup_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_dup_t) (QMPI_Context context, int tool_id, MPI_Datatype oldtype,$/;"	t
QMPI_Type_extent_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_extent_t) (QMPI_Context context, int tool_id, MPI_Datatype datatype,$/;"	t
QMPI_Type_f2c_t	/usr/local/include/mpi_proto.h	/^typedef MPI_Datatype (QMPI_Type_f2c_t) (QMPI_Context context, int tool_id, MPI_Fint datatype);$/;"	t
QMPI_Type_free_keyval_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_free_keyval_t) (QMPI_Context context, int tool_id, int *type_keyval);$/;"	t
QMPI_Type_free_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_free_t) (QMPI_Context context, int tool_id, MPI_Datatype *datatype);$/;"	t
QMPI_Type_get_attr_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_get_attr_t) (QMPI_Context context, int tool_id, MPI_Datatype datatype,$/;"	t
QMPI_Type_get_contents_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_get_contents_c_t) (QMPI_Context context, int tool_id, MPI_Datatype datatype,$/;"	t
QMPI_Type_get_contents_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_get_contents_t) (QMPI_Context context, int tool_id, MPI_Datatype datatype,$/;"	t
QMPI_Type_get_envelope_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_get_envelope_c_t) (QMPI_Context context, int tool_id, MPI_Datatype datatype,$/;"	t
QMPI_Type_get_envelope_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_get_envelope_t) (QMPI_Context context, int tool_id, MPI_Datatype datatype,$/;"	t
QMPI_Type_get_extent_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_get_extent_c_t) (QMPI_Context context, int tool_id, MPI_Datatype datatype,$/;"	t
QMPI_Type_get_extent_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_get_extent_t) (QMPI_Context context, int tool_id, MPI_Datatype datatype,$/;"	t
QMPI_Type_get_extent_x_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_get_extent_x_t) (QMPI_Context context, int tool_id, MPI_Datatype datatype,$/;"	t
QMPI_Type_get_name_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_get_name_t) (QMPI_Context context, int tool_id, MPI_Datatype datatype,$/;"	t
QMPI_Type_get_true_extent_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_get_true_extent_c_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Type_get_true_extent_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_get_true_extent_t) (QMPI_Context context, int tool_id, MPI_Datatype datatype,$/;"	t
QMPI_Type_get_true_extent_x_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_get_true_extent_x_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Type_get_value_index_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_get_value_index_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Type_hindexed_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_hindexed_t) (QMPI_Context context, int tool_id, int count,$/;"	t
QMPI_Type_hvector_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_hvector_t) (QMPI_Context context, int tool_id, int count, int blocklength,$/;"	t
QMPI_Type_indexed_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_indexed_c_t) (QMPI_Context context, int tool_id, MPI_Count count,$/;"	t
QMPI_Type_indexed_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_indexed_t) (QMPI_Context context, int tool_id, int count,$/;"	t
QMPI_Type_lb_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_lb_t) (QMPI_Context context, int tool_id, MPI_Datatype datatype,$/;"	t
QMPI_Type_match_size_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_match_size_t) (QMPI_Context context, int tool_id, int typeclass, int size,$/;"	t
QMPI_Type_set_attr_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_set_attr_t) (QMPI_Context context, int tool_id, MPI_Datatype datatype,$/;"	t
QMPI_Type_set_name_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_set_name_t) (QMPI_Context context, int tool_id, MPI_Datatype datatype,$/;"	t
QMPI_Type_size_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_size_c_t) (QMPI_Context context, int tool_id, MPI_Datatype datatype,$/;"	t
QMPI_Type_size_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_size_t) (QMPI_Context context, int tool_id, MPI_Datatype datatype,$/;"	t
QMPI_Type_size_x_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_size_x_t) (QMPI_Context context, int tool_id, MPI_Datatype datatype,$/;"	t
QMPI_Type_struct_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_struct_t) (QMPI_Context context, int tool_id, int count,$/;"	t
QMPI_Type_ub_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_ub_t) (QMPI_Context context, int tool_id, MPI_Datatype datatype,$/;"	t
QMPI_Type_vector_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_vector_c_t) (QMPI_Context context, int tool_id, MPI_Count count,$/;"	t
QMPI_Type_vector_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Type_vector_t) (QMPI_Context context, int tool_id, int count, int blocklength,$/;"	t
QMPI_Unpack_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Unpack_c_t) (QMPI_Context context, int tool_id, const void *inbuf,$/;"	t
QMPI_Unpack_external_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Unpack_external_c_t) (QMPI_Context context, int tool_id, const char datarep[],$/;"	t
QMPI_Unpack_external_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Unpack_external_t) (QMPI_Context context, int tool_id, const char datarep[],$/;"	t
QMPI_Unpack_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Unpack_t) (QMPI_Context context, int tool_id, const void *inbuf, int insize,$/;"	t
QMPI_Unpublish_name_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Unpublish_name_t) (QMPI_Context context, int tool_id, const char *service_name,$/;"	t
QMPI_Wait_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Wait_t) (QMPI_Context context, int tool_id, MPI_Request *request,$/;"	t
QMPI_Waitall_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Waitall_t) (QMPI_Context context, int tool_id, int count,$/;"	t
QMPI_Waitany_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Waitany_t) (QMPI_Context context, int tool_id, int count,$/;"	t
QMPI_Waitsome_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Waitsome_t) (QMPI_Context context, int tool_id, int incount,$/;"	t
QMPI_Win_allocate_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_allocate_c_t) (QMPI_Context context, int tool_id, MPI_Aint size,$/;"	t
QMPI_Win_allocate_shared_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_allocate_shared_c_t) (QMPI_Context context, int tool_id, MPI_Aint size,$/;"	t
QMPI_Win_allocate_shared_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_allocate_shared_t) (QMPI_Context context, int tool_id, MPI_Aint size,$/;"	t
QMPI_Win_allocate_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_allocate_t) (QMPI_Context context, int tool_id, MPI_Aint size, int disp_unit,$/;"	t
QMPI_Win_attach_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_attach_t) (QMPI_Context context, int tool_id, MPI_Win win, void *base,$/;"	t
QMPI_Win_c2f_t	/usr/local/include/mpi_proto.h	/^typedef MPI_Fint (QMPI_Win_c2f_t) (QMPI_Context context, int tool_id, MPI_Win win);$/;"	t
QMPI_Win_call_errhandler_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_call_errhandler_t) (QMPI_Context context, int tool_id, MPI_Win win,$/;"	t
QMPI_Win_complete_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_complete_t) (QMPI_Context context, int tool_id, MPI_Win win);$/;"	t
QMPI_Win_create_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_create_c_t) (QMPI_Context context, int tool_id, void *base, MPI_Aint size,$/;"	t
QMPI_Win_create_dynamic_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_create_dynamic_t) (QMPI_Context context, int tool_id, MPI_Info info,$/;"	t
QMPI_Win_create_errhandler_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_create_errhandler_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Win_create_keyval_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_create_keyval_t) (QMPI_Context context, int tool_id,$/;"	t
QMPI_Win_create_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_create_t) (QMPI_Context context, int tool_id, void *base, MPI_Aint size,$/;"	t
QMPI_Win_delete_attr_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_delete_attr_t) (QMPI_Context context, int tool_id, MPI_Win win,$/;"	t
QMPI_Win_detach_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_detach_t) (QMPI_Context context, int tool_id, MPI_Win win, const void *base);$/;"	t
QMPI_Win_f2c_t	/usr/local/include/mpi_proto.h	/^typedef MPI_Win (QMPI_Win_f2c_t) (QMPI_Context context, int tool_id, MPI_Fint win);$/;"	t
QMPI_Win_fence_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_fence_t) (QMPI_Context context, int tool_id, int assert, MPI_Win win);$/;"	t
QMPI_Win_flush_all_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_flush_all_t) (QMPI_Context context, int tool_id, MPI_Win win);$/;"	t
QMPI_Win_flush_local_all_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_flush_local_all_t) (QMPI_Context context, int tool_id, MPI_Win win);$/;"	t
QMPI_Win_flush_local_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_flush_local_t) (QMPI_Context context, int tool_id, int rank, MPI_Win win);$/;"	t
QMPI_Win_flush_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_flush_t) (QMPI_Context context, int tool_id, int rank, MPI_Win win);$/;"	t
QMPI_Win_free_keyval_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_free_keyval_t) (QMPI_Context context, int tool_id, int *win_keyval);$/;"	t
QMPI_Win_free_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_free_t) (QMPI_Context context, int tool_id, MPI_Win *win);$/;"	t
QMPI_Win_get_attr_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_get_attr_t) (QMPI_Context context, int tool_id, MPI_Win win, int win_keyval,$/;"	t
QMPI_Win_get_errhandler_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_get_errhandler_t) (QMPI_Context context, int tool_id, MPI_Win win,$/;"	t
QMPI_Win_get_group_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_get_group_t) (QMPI_Context context, int tool_id, MPI_Win win,$/;"	t
QMPI_Win_get_info_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_get_info_t) (QMPI_Context context, int tool_id, MPI_Win win,$/;"	t
QMPI_Win_get_name_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_get_name_t) (QMPI_Context context, int tool_id, MPI_Win win, char *win_name,$/;"	t
QMPI_Win_lock_all_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_lock_all_t) (QMPI_Context context, int tool_id, int assert, MPI_Win win);$/;"	t
QMPI_Win_lock_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_lock_t) (QMPI_Context context, int tool_id, int lock_type, int rank,$/;"	t
QMPI_Win_post_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_post_t) (QMPI_Context context, int tool_id, MPI_Group group, int assert,$/;"	t
QMPI_Win_set_attr_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_set_attr_t) (QMPI_Context context, int tool_id, MPI_Win win, int win_keyval,$/;"	t
QMPI_Win_set_errhandler_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_set_errhandler_t) (QMPI_Context context, int tool_id, MPI_Win win,$/;"	t
QMPI_Win_set_info_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_set_info_t) (QMPI_Context context, int tool_id, MPI_Win win, MPI_Info info);$/;"	t
QMPI_Win_set_name_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_set_name_t) (QMPI_Context context, int tool_id, MPI_Win win,$/;"	t
QMPI_Win_shared_query_c_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_shared_query_c_t) (QMPI_Context context, int tool_id, MPI_Win win, int rank,$/;"	t
QMPI_Win_shared_query_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_shared_query_t) (QMPI_Context context, int tool_id, MPI_Win win, int rank,$/;"	t
QMPI_Win_start_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_start_t) (QMPI_Context context, int tool_id, MPI_Group group, int assert,$/;"	t
QMPI_Win_sync_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_sync_t) (QMPI_Context context, int tool_id, MPI_Win win);$/;"	t
QMPI_Win_test_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_test_t) (QMPI_Context context, int tool_id, MPI_Win win, int *flag);$/;"	t
QMPI_Win_unlock_all_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_unlock_all_t) (QMPI_Context context, int tool_id, MPI_Win win);$/;"	t
QMPI_Win_unlock_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_unlock_t) (QMPI_Context context, int tool_id, int rank, MPI_Win win);$/;"	t
QMPI_Win_wait_t	/usr/local/include/mpi_proto.h	/^typedef int (QMPI_Win_wait_t) (QMPI_Context context, int tool_id, MPI_Win win);$/;"	t
QMPI_Wtick_t	/usr/local/include/mpi_proto.h	/^typedef double (QMPI_Wtick_t) (QMPI_Context context, int tool_id);$/;"	t
QMPI_Wtime_t	/usr/local/include/mpi_proto.h	/^typedef double (QMPI_Wtime_t) (QMPI_Context context, int tool_id);$/;"	t
Query_function	/usr/local/include/mpicxx.h	/^    typedef int Query_function( void *, Status & );$/;"	t	class:MPI::Grequest
ROMIO_API_PUBLIC	/usr/local/include/mpio.h	14;"	d
ROMIO_API_PUBLIC	/usr/local/include/mpio.h	16;"	d
ROMIO_VERSION	/usr/local/include/mpio.h	23;"	d
Range_excl	/usr/local/include/mpicxx.h	/^    virtual Group Range_excl( int v2, const int v3[][3] ) const$/;"	f	class:MPI::Group
Range_incl	/usr/local/include/mpicxx.h	/^    virtual Group Range_incl( int v2, const int v3[][3] ) const$/;"	f	class:MPI::Group
Read	/usr/local/include/mpicxx.h	/^    virtual void Read( void * v2, int v3, const Datatype &v4 ) $/;"	f	class:MPI::File
Read	/usr/local/include/mpicxx.h	/^    virtual void Read( void * v2, int v3, const Datatype &v4, Status & v5 ) $/;"	f	class:MPI::File
Read_all	/usr/local/include/mpicxx.h	/^    virtual void Read_all( void * v2, int v3, const Datatype &v4 ) $/;"	f	class:MPI::File
Read_all	/usr/local/include/mpicxx.h	/^    virtual void Read_all( void * v2, int v3, const Datatype &v4, Status & v5 ) $/;"	f	class:MPI::File
Read_all_begin	/usr/local/include/mpicxx.h	/^    virtual void Read_all_begin( void * v2, int v3, const Datatype &v4 ) $/;"	f	class:MPI::File
Read_all_end	/usr/local/include/mpicxx.h	/^    virtual void Read_all_end( void * v2 ) $/;"	f	class:MPI::File
Read_all_end	/usr/local/include/mpicxx.h	/^    virtual void Read_all_end( void * v2, Status & v3 ) $/;"	f	class:MPI::File
Read_at	/usr/local/include/mpicxx.h	/^    virtual void Read_at( Offset v2, void * v3, int v4, const Datatype &v5 ) $/;"	f	class:MPI::File
Read_at	/usr/local/include/mpicxx.h	/^    virtual void Read_at( Offset v2, void * v3, int v4, const Datatype &v5, Status & v6 ) $/;"	f	class:MPI::File
Read_at_all	/usr/local/include/mpicxx.h	/^    virtual void Read_at_all( Offset v2, void * v3, int v4, const Datatype &v5 ) $/;"	f	class:MPI::File
Read_at_all	/usr/local/include/mpicxx.h	/^    virtual void Read_at_all( Offset v2, void * v3, int v4, const Datatype &v5, Status & v6 ) $/;"	f	class:MPI::File
Read_at_all_begin	/usr/local/include/mpicxx.h	/^    virtual void Read_at_all_begin( Offset v2, void * v3, int v4, const Datatype &v5 ) $/;"	f	class:MPI::File
Read_at_all_end	/usr/local/include/mpicxx.h	/^    virtual void Read_at_all_end( void * v2 ) $/;"	f	class:MPI::File
Read_at_all_end	/usr/local/include/mpicxx.h	/^    virtual void Read_at_all_end( void * v2, Status & v3 ) $/;"	f	class:MPI::File
Read_ordered	/usr/local/include/mpicxx.h	/^    virtual void Read_ordered( void * v2, int v3, const Datatype &v4 ) $/;"	f	class:MPI::File
Read_ordered	/usr/local/include/mpicxx.h	/^    virtual void Read_ordered( void * v2, int v3, const Datatype &v4, Status & v5 ) $/;"	f	class:MPI::File
Read_ordered_begin	/usr/local/include/mpicxx.h	/^    virtual void Read_ordered_begin( void * v2, int v3, const Datatype &v4 ) $/;"	f	class:MPI::File
Read_ordered_end	/usr/local/include/mpicxx.h	/^    virtual void Read_ordered_end( void * v2 ) $/;"	f	class:MPI::File
Read_ordered_end	/usr/local/include/mpicxx.h	/^    virtual void Read_ordered_end( void * v2, Status & v3 ) $/;"	f	class:MPI::File
Read_shared	/usr/local/include/mpicxx.h	/^    virtual void Read_shared( void * v2, int v3, const Datatype &v4 ) $/;"	f	class:MPI::File
Read_shared	/usr/local/include/mpicxx.h	/^    virtual void Read_shared( void * v2, int v3, const Datatype &v4, Status & v5 ) $/;"	f	class:MPI::File
Recv	/usr/local/include/mpicxx.h	/^    virtual void Recv( void * v1, int v2, const Datatype &v3, int v4, int v5 ) const$/;"	f	class:MPI::Comm
Recv	/usr/local/include/mpicxx.h	/^    virtual void Recv( void * v1, int v2, const Datatype &v3, int v4, int v5, Status & v7 ) const$/;"	f	class:MPI::Comm
Recv_init	/usr/local/include/mpicxx.h	/^    virtual Prequest Recv_init( void * v1, int v2, const Datatype &v3, int v4, int v5 ) const$/;"	f	class:MPI::Comm
Reduce	/usr/local/include/mpicxx.h	/^    virtual void Reduce( const void * v1, void * v2, int v3, const Datatype &v4, const Op &v5, int v6 ) const$/;"	f	class:MPI::Comm
Reduce_local	/usr/local/include/mpicxx.h	/^    virtual void Reduce_local( const void * v1, void * v2, int v3, const Datatype &v4 ) const$/;"	f	class:MPI::Op
Reduce_scatter	/usr/local/include/mpicxx.h	/^    virtual void Reduce_scatter( const void * v1, void * v2, const int v3[], const Datatype &v4, const Op &v5 ) const$/;"	f	class:MPI::Comm
Reduce_scatter_block	/usr/local/include/mpicxx.h	/^    virtual void Reduce_scatter_block( const void * v1, void * v2, int v3, const Datatype &v4, const Op &v5 ) const$/;"	f	class:MPI::Comm
Request	/usr/local/include/mpicxx.h	/^    Request(const Request &obj) : the_real_request(obj.the_real_request){}$/;"	f	class:MPI::Request
Request	/usr/local/include/mpicxx.h	/^    inline Request(MPI_Request obj) : the_real_request(obj) {}$/;"	f	class:MPI::Request
Request	/usr/local/include/mpicxx.h	/^    inline Request(void) : the_real_request(MPI_REQUEST_NULL) {}$/;"	f	class:MPI::Request
Request	/usr/local/include/mpicxx.h	/^class Request  {$/;"	c	namespace:MPI
Rsend	/usr/local/include/mpicxx.h	/^    virtual void Rsend( const void * v1, int v2, const Datatype &v3, int v4, int v5 ) const$/;"	f	class:MPI::Comm
Rsend_init	/usr/local/include/mpicxx.h	/^    virtual Prequest Rsend_init( const void * v1, int v2, const Datatype &v3, int v4, int v5 ) const$/;"	f	class:MPI::Comm
SEEK_CUR	/usr/local/include/mpicxx.h	/^    , SEEK_CUR = MPIR_SEEK_CUR$/;"	e	enum:MPIR_Dummy_seek_type
SEEK_CUR	/usr/local/include/mpicxx.h	53;"	d
SEEK_END	/usr/local/include/mpicxx.h	/^    , SEEK_END = MPIR_SEEK_END$/;"	e	enum:MPIR_Dummy_seek_type
SEEK_END	/usr/local/include/mpicxx.h	58;"	d
SEEK_SET	/usr/local/include/mpicxx.h	/^    , SEEK_SET = MPIR_SEEK_SET$/;"	e	enum:MPIR_Dummy_seek_type
SEEK_SET	/usr/local/include/mpicxx.h	48;"	d
Scan	/usr/local/include/mpicxx.h	/^    virtual void Scan( const void * v1, void * v2, int v3, const Datatype &v4, const Op &v5 ) const$/;"	f	class:MPI::Intracomm
Scatter	/usr/local/include/mpicxx.h	/^    virtual void Scatter( const void * v1, int v2, const Datatype &v3, void * v4, int v5, const Datatype &v6, int v7 ) const$/;"	f	class:MPI::Comm
Scatterv	/usr/local/include/mpicxx.h	/^    virtual void Scatterv( const void * v1, const int v2[], const int v3[], const Datatype &v4, void * v5, int v6, const Datatype &v7, int v8 ) const$/;"	f	class:MPI::Comm
Seek	/usr/local/include/mpicxx.h	/^    virtual void Seek( Offset v2, int v3 ) $/;"	f	class:MPI::File
Seek_shared	/usr/local/include/mpicxx.h	/^    virtual void Seek_shared( Offset v2, int v3 ) $/;"	f	class:MPI::File
Send	/usr/local/include/mpicxx.h	/^    virtual void Send( const void * v1, int v2, const Datatype &v3, int v4, int v5 ) const$/;"	f	class:MPI::Comm
Send_init	/usr/local/include/mpicxx.h	/^    virtual Prequest Send_init( const void * v1, int v2, const Datatype &v3, int v4, int v5 ) const$/;"	f	class:MPI::Comm
Sendrecv	/usr/local/include/mpicxx.h	/^    virtual void Sendrecv( const void * v1, int v2, const Datatype &v3, int v4, int v5, void * v6, int v7, const Datatype &v8, int v9, int v10 ) const$/;"	f	class:MPI::Comm
Sendrecv	/usr/local/include/mpicxx.h	/^    virtual void Sendrecv( const void * v1, int v2, const Datatype &v3, int v4, int v5, void * v6, int v7, const Datatype &v8, int v9, int v10, Status & v12 ) const$/;"	f	class:MPI::Comm
Sendrecv_replace	/usr/local/include/mpicxx.h	/^    virtual void Sendrecv_replace( void * v1, int v2, const Datatype &v3, int v4, int v5, int v6, int v7 ) const$/;"	f	class:MPI::Comm
Sendrecv_replace	/usr/local/include/mpicxx.h	/^    virtual void Sendrecv_replace( void * v1, int v2, const Datatype &v3, int v4, int v5, int v6, int v7, Status & v9 ) const$/;"	f	class:MPI::Comm
Set	/usr/local/include/mpicxx.h	/^    virtual void Set( const char * v2, const char * v3 ) $/;"	f	class:MPI::Info
Set_atomicity	/usr/local/include/mpicxx.h	/^    virtual void Set_atomicity( bool v2 ) $/;"	f	class:MPI::File
Set_attr	/usr/local/include/mpicxx.h	/^    virtual void Set_attr( int v2, const void * v3 ) $/;"	f	class:MPI::Comm
Set_attr	/usr/local/include/mpicxx.h	/^    virtual void Set_attr( int v2, const void * v3 ) $/;"	f	class:MPI::Datatype
Set_attr	/usr/local/include/mpicxx.h	/^    virtual void Set_attr( int v2, const void * v3 ) $/;"	f	class:MPI::Win
Set_cancelled	/usr/local/include/mpicxx.h	/^    virtual void Set_cancelled( bool v2 ) $/;"	f	class:MPI::Status
Set_elements	/usr/local/include/mpicxx.h	/^    virtual void Set_elements( const Datatype &v2, int v3 ) $/;"	f	class:MPI::Status
Set_errhandler	/usr/local/include/mpicxx.h	/^    virtual void Set_errhandler( const Errhandler &v2 ) $/;"	f	class:MPI::Comm
Set_errhandler	/usr/local/include/mpicxx.h	/^    virtual void Set_errhandler( const Errhandler &v2 ) $/;"	f	class:MPI::File
Set_errhandler	/usr/local/include/mpicxx.h	/^    virtual void Set_errhandler( const Errhandler &v2 ) $/;"	f	class:MPI::Win
Set_error	/usr/local/include/mpicxx.h	/^    void Set_error(int error) { the_real_status.MPI_ERROR = error; }$/;"	f	class:MPI::Status
Set_info	/usr/local/include/mpicxx.h	/^    virtual void Set_info( const Info &v2 ) $/;"	f	class:MPI::File
Set_name	/usr/local/include/mpicxx.h	/^    virtual void Set_name( const char * v2 ) $/;"	f	class:MPI::Comm
Set_name	/usr/local/include/mpicxx.h	/^    virtual void Set_name( const char * v2 ) $/;"	f	class:MPI::Datatype
Set_name	/usr/local/include/mpicxx.h	/^    virtual void Set_name( const char * v2 ) $/;"	f	class:MPI::Win
Set_size	/usr/local/include/mpicxx.h	/^    virtual void Set_size( Offset v2 ) $/;"	f	class:MPI::File
Set_source	/usr/local/include/mpicxx.h	/^    void Set_source(int source) { the_real_status.MPI_SOURCE = source; }$/;"	f	class:MPI::Status
Set_tag	/usr/local/include/mpicxx.h	/^    void Set_tag(int tag) { the_real_status.MPI_TAG = tag; }$/;"	f	class:MPI::Status
Set_view	/usr/local/include/mpicxx.h	/^    virtual void Set_view( Offset v2, const Datatype &v3, const Datatype v4, const char * v5, const Info &v6 ) $/;"	f	class:MPI::File
Shift	/usr/local/include/mpicxx.h	/^    virtual void Shift( int v2, int v3, int &v4, int &v5 ) const$/;"	f	class:MPI::Cartcomm
Spawn	/usr/local/include/mpicxx.h	/^Intercomm Spawn(const char* command, const char* argv[], int maxprocs, const MPI::Info& info, int root) const {$/;"	f	class:MPI::Intracomm
Spawn	/usr/local/include/mpicxx.h	/^Intercomm Spawn(const char* command, const char* argv[], int maxprocs, const MPI::Info& info, int root, int array_of_errcodes[]) const {$/;"	f	class:MPI::Intracomm
Spawn_multiple	/usr/local/include/mpicxx.h	/^Intercomm Spawn_multiple(int count, const char* array_of_commands[], const char** array_of_argv[], const int array_of_maxprocs[], const MPI::Info array_of_info[], int root) {$/;"	f	class:MPI::Intracomm
Spawn_multiple	/usr/local/include/mpicxx.h	/^Intercomm Spawn_multiple(int count, const char* array_of_commands[], const char** array_of_argv[], const int array_of_maxprocs[], const MPI::Info array_of_info[], int root, int array_of_errcodes[]) {$/;"	f	class:MPI::Intracomm
Split	/usr/local/include/mpicxx.h	/^    virtual Intercomm Split( int v2, int v3 ) const$/;"	f	class:MPI::Intercomm
Split	/usr/local/include/mpicxx.h	/^    virtual Intracomm Split( int v2, int v3 ) const$/;"	f	class:MPI::Intracomm
Ssend	/usr/local/include/mpicxx.h	/^    virtual void Ssend( const void * v1, int v2, const Datatype &v3, int v4, int v5 ) const$/;"	f	class:MPI::Comm
Ssend_init	/usr/local/include/mpicxx.h	/^    virtual Prequest Ssend_init( const void * v1, int v2, const Datatype &v3, int v4, int v5 ) const$/;"	f	class:MPI::Comm
Start	/usr/local/include/mpicxx.h	/^    virtual void Start( const Group &v1, int v2 ) const$/;"	f	class:MPI::Win
Start	/usr/local/include/mpicxx.h	/^    virtual void Start( void ) $/;"	f	class:MPI::Prequest
Startall	/usr/local/include/mpicxx.h	/^    static void Startall( int v1, Prequest v2[] ) $/;"	f	class:MPI::Prequest
Status	/usr/local/include/mpicxx.h	/^    Status(const Status &obj) : the_real_status(obj.the_real_status){}$/;"	f	class:MPI::Status
Status	/usr/local/include/mpicxx.h	/^    inline Status(MPI_Status obj) : the_real_status(obj) {}$/;"	f	class:MPI::Status
Status	/usr/local/include/mpicxx.h	/^    inline Status(void) : the_real_status() {}$/;"	f	class:MPI::Status
Status	/usr/local/include/mpicxx.h	/^class Status  {$/;"	c	namespace:MPI
Sub	/usr/local/include/mpicxx.h	/^    virtual Cartcomm Sub( const bool v2[] ) const$/;"	f	class:MPI::Cartcomm
Sync	/usr/local/include/mpicxx.h	/^    virtual void Sync( void ) $/;"	f	class:MPI::File
Test	/usr/local/include/mpicxx.h	/^    virtual bool Test( Status & v3 ) $/;"	f	class:MPI::Request
Test	/usr/local/include/mpicxx.h	/^    virtual bool Test( void ) $/;"	f	class:MPI::Request
Test	/usr/local/include/mpicxx.h	/^    virtual bool Test( void ) const$/;"	f	class:MPI::Win
Testall	/usr/local/include/mpicxx.h	/^    static bool Testall( int v1, Request v2[] ) $/;"	f	class:MPI::Request
Testall	/usr/local/include/mpicxx.h	/^    static bool Testall( int v1, Request v2[], Status v4[] ) $/;"	f	class:MPI::Request
Testany	/usr/local/include/mpicxx.h	/^    static bool Testany( int v1, Request v2[], int &v3 ) $/;"	f	class:MPI::Request
Testany	/usr/local/include/mpicxx.h	/^    static bool Testany( int v1, Request v2[], int &v3, Status & v5 ) $/;"	f	class:MPI::Request
Testsome	/usr/local/include/mpicxx.h	/^    static int Testsome( int v1, Request v2[], int v4[] ) $/;"	f	class:MPI::Request
Testsome	/usr/local/include/mpicxx.h	/^    static int Testsome( int v1, Request v2[], int v4[], Status v5[] ) $/;"	f	class:MPI::Request
Translate_ranks	/usr/local/include/mpicxx.h	/^    static void Translate_ranks( const Group &v1, int v2, const int v3[], const Group &v4, int v5[] ) $/;"	f	class:MPI::Group
Union	/usr/local/include/mpicxx.h	/^    static Group Union( const Group &v1, const Group &v2 ) $/;"	f	class:MPI::Group
Unlock	/usr/local/include/mpicxx.h	/^    virtual void Unlock( int v1 ) const$/;"	f	class:MPI::Win
Unpack_external	/usr/local/include/mpicxx.h	/^    virtual void Unpack_external( const char v1[], const void * v2, const Aint v3, Aint & v4, void * v5, int v6 ) const$/;"	f	class:MPI::Datatype
User_function	/usr/local/include/mpicxx.h	/^    typedef void User_function(const void *, void*, int, const Datatype&); $/;"	t	namespace:MPI
Wait	/usr/local/include/mpicxx.h	/^    virtual void Wait( Status & v2 ) $/;"	f	class:MPI::Request
Wait	/usr/local/include/mpicxx.h	/^    virtual void Wait( void ) $/;"	f	class:MPI::Request
Wait	/usr/local/include/mpicxx.h	/^    virtual void Wait( void ) const$/;"	f	class:MPI::Win
Waitall	/usr/local/include/mpicxx.h	/^    static void Waitall( int v1, Request v2[] ) $/;"	f	class:MPI::Request
Waitall	/usr/local/include/mpicxx.h	/^    static void Waitall( int v1, Request v2[], Status v3[] ) $/;"	f	class:MPI::Request
Waitany	/usr/local/include/mpicxx.h	/^    static int Waitany( int v1, Request v2[] ) $/;"	f	class:MPI::Request
Waitany	/usr/local/include/mpicxx.h	/^    static int Waitany( int v1, Request v2[], Status & v4 ) $/;"	f	class:MPI::Request
Waitsome	/usr/local/include/mpicxx.h	/^    static int Waitsome( int v1, Request v2[], int v4[] ) $/;"	f	class:MPI::Request
Waitsome	/usr/local/include/mpicxx.h	/^    static int Waitsome( int v1, Request v2[], int v4[], Status v5[] ) $/;"	f	class:MPI::Request
Win	/usr/local/include/mpicxx.h	/^    Win(const Win &obj) : the_real_win(obj.the_real_win){}$/;"	f	class:MPI::Win
Win	/usr/local/include/mpicxx.h	/^    inline Win(MPI_Win obj) : the_real_win(obj) {}$/;"	f	class:MPI::Win
Win	/usr/local/include/mpicxx.h	/^    inline Win(void) : the_real_win(MPI_WIN_NULL) {}$/;"	f	class:MPI::Win
Win	/usr/local/include/mpicxx.h	/^class Win  {$/;"	c	namespace:MPI
Write	/usr/local/include/mpicxx.h	/^    virtual void Write( const void * v2, int v3, const Datatype &v4 ) $/;"	f	class:MPI::File
Write	/usr/local/include/mpicxx.h	/^    virtual void Write( const void * v2, int v3, const Datatype &v4, Status & v5 ) $/;"	f	class:MPI::File
Write_all	/usr/local/include/mpicxx.h	/^    virtual void Write_all( const void * v2, int v3, const Datatype &v4 ) $/;"	f	class:MPI::File
Write_all	/usr/local/include/mpicxx.h	/^    virtual void Write_all( const void * v2, int v3, const Datatype &v4, Status & v5 ) $/;"	f	class:MPI::File
Write_all_begin	/usr/local/include/mpicxx.h	/^    virtual void Write_all_begin( const void * v2, int v3, const Datatype &v4 ) $/;"	f	class:MPI::File
Write_all_end	/usr/local/include/mpicxx.h	/^    virtual void Write_all_end( const void * v2 ) $/;"	f	class:MPI::File
Write_all_end	/usr/local/include/mpicxx.h	/^    virtual void Write_all_end( const void * v2, Status & v3 ) $/;"	f	class:MPI::File
Write_at	/usr/local/include/mpicxx.h	/^    virtual void Write_at( Offset v2, const void * v3, int v4, const Datatype &v5 ) $/;"	f	class:MPI::File
Write_at	/usr/local/include/mpicxx.h	/^    virtual void Write_at( Offset v2, const void * v3, int v4, const Datatype &v5, Status & v6 ) $/;"	f	class:MPI::File
Write_at_all	/usr/local/include/mpicxx.h	/^    virtual void Write_at_all( Offset v2, const void * v3, int v4, const Datatype &v5 ) $/;"	f	class:MPI::File
Write_at_all	/usr/local/include/mpicxx.h	/^    virtual void Write_at_all( Offset v2, const void * v3, int v4, const Datatype &v5, Status & v6 ) $/;"	f	class:MPI::File
Write_at_all_begin	/usr/local/include/mpicxx.h	/^    virtual void Write_at_all_begin( Offset v2, const void * v3, int v4, const Datatype &v5 ) $/;"	f	class:MPI::File
Write_at_all_end	/usr/local/include/mpicxx.h	/^    virtual void Write_at_all_end( const void * v2 ) $/;"	f	class:MPI::File
Write_at_all_end	/usr/local/include/mpicxx.h	/^    virtual void Write_at_all_end( const void * v2, Status & v3 ) $/;"	f	class:MPI::File
Write_ordered	/usr/local/include/mpicxx.h	/^    virtual void Write_ordered( const void * v2, int v3, const Datatype &v4 ) $/;"	f	class:MPI::File
Write_ordered	/usr/local/include/mpicxx.h	/^    virtual void Write_ordered( const void * v2, int v3, const Datatype &v4, Status & v5 ) $/;"	f	class:MPI::File
Write_ordered_begin	/usr/local/include/mpicxx.h	/^    virtual void Write_ordered_begin( const void * v2, int v3, const Datatype &v4 ) $/;"	f	class:MPI::File
Write_ordered_end	/usr/local/include/mpicxx.h	/^    virtual void Write_ordered_end( const void * v2 ) $/;"	f	class:MPI::File
Write_ordered_end	/usr/local/include/mpicxx.h	/^    virtual void Write_ordered_end( const void * v2, Status & v3 ) $/;"	f	class:MPI::File
Write_shared	/usr/local/include/mpicxx.h	/^    virtual void Write_shared( const void * v2, int v3, const Datatype &v4 ) $/;"	f	class:MPI::File
Write_shared	/usr/local/include/mpicxx.h	/^    virtual void Write_shared( const void * v2, int v3, const Datatype &v4, Status & v5 ) $/;"	f	class:MPI::File
_Bool	/usr/local/include/mpi.h	/^static const MPI_Datatype mpich_mpi_c_bool                MPICH_ATTR_TYPE_TAG_C99(_Bool)           = MPI_C_BOOL;$/;"	v
count_hi_and_cancelled	/usr/local/include/mpi.h	/^    MPI_Fint count_hi_and_cancelled;$/;"	m	struct:__anon1
count_hi_and_cancelled	/usr/local/include/mpi.h	/^    int count_hi_and_cancelled;$/;"	m	struct:MPI_Status
count_lo	/usr/local/include/mpi.h	/^    MPI_Fint count_lo;$/;"	m	struct:__anon1
count_lo	/usr/local/include/mpi.h	/^    int count_lo;$/;"	m	struct:MPI_Status
d	/usr/local/include/mpi.h	/^struct mpich_struct_mpi_double_int      { double d; int i; };$/;"	m	struct:mpich_struct_mpi_double_int
f	/usr/local/include/mpi.h	/^struct mpich_struct_mpi_float_int       { float f; int i; };$/;"	m	struct:mpich_struct_mpi_float_int
i	/usr/local/include/mpi.h	/^struct mpich_struct_mpi_double_int      { double d; int i; };$/;"	m	struct:mpich_struct_mpi_double_int
i	/usr/local/include/mpi.h	/^struct mpich_struct_mpi_float_int       { float f; int i; };$/;"	m	struct:mpich_struct_mpi_float_int
i	/usr/local/include/mpi.h	/^struct mpich_struct_mpi_long_int        { long l; int i; };$/;"	m	struct:mpich_struct_mpi_long_int
i	/usr/local/include/mpi.h	/^struct mpich_struct_mpi_short_int       { short s; int i; };$/;"	m	struct:mpich_struct_mpi_short_int
i1	/usr/local/include/mpi.h	/^struct mpich_struct_mpi_2int            { int i1; int i2; };$/;"	m	struct:mpich_struct_mpi_2int
i2	/usr/local/include/mpi.h	/^struct mpich_struct_mpi_2int            { int i1; int i2; };$/;"	m	struct:mpich_struct_mpi_2int
int16_t	/usr/local/include/mpi.h	/^static const MPI_Datatype mpich_mpi_int16_t  MPICH_ATTR_TYPE_TAG_STDINT(int16_t)  = MPI_INT16_T;$/;"	v
int32_t	/usr/local/include/mpi.h	/^static const MPI_Datatype mpich_mpi_int32_t  MPICH_ATTR_TYPE_TAG_STDINT(int32_t)  = MPI_INT32_T;$/;"	v
int64_t	/usr/local/include/mpi.h	/^static const MPI_Datatype mpich_mpi_int64_t  MPICH_ATTR_TYPE_TAG_STDINT(int64_t)  = MPI_INT64_T;$/;"	v
int8_t	/usr/local/include/mpi.h	/^static const MPI_Datatype mpich_mpi_int8_t   MPICH_ATTR_TYPE_TAG_STDINT(int8_t)   = MPI_INT8_T;$/;"	v
iov_base	/usr/local/include/mpi.h	/^    void *iov_base;$/;"	m	struct:MPIX_Iov
iov_len	/usr/local/include/mpi.h	/^    MPI_Aint iov_len;$/;"	m	struct:MPIX_Iov
l	/usr/local/include/mpi.h	/^struct mpich_struct_mpi_long_int        { long l; int i; };$/;"	m	struct:mpich_struct_mpi_long_int
main	send_recv.c	/^int main(int argc, char** argv) {$/;"	f
mpich_struct_mpi_2int	/usr/local/include/mpi.h	/^struct mpich_struct_mpi_2int            { int i1; int i2; };$/;"	s
mpich_struct_mpi_double_int	/usr/local/include/mpi.h	/^struct mpich_struct_mpi_double_int      { double d; int i; };$/;"	s
mpich_struct_mpi_float_int	/usr/local/include/mpi.h	/^struct mpich_struct_mpi_float_int       { float f; int i; };$/;"	s
mpich_struct_mpi_long_int	/usr/local/include/mpi.h	/^struct mpich_struct_mpi_long_int        { long l; int i; };$/;"	s
mpich_struct_mpi_short_int	/usr/local/include/mpi.h	/^struct mpich_struct_mpi_short_int       { short s; int i; };$/;"	s
operator !=	/usr/local/include/mpicxx.h	/^    bool operator!= (const Comm &obj) {$/;"	f	class:MPI::Comm
operator !=	/usr/local/include/mpicxx.h	/^    bool operator!= (const Datatype &obj) {$/;"	f	class:MPI::Datatype
operator !=	/usr/local/include/mpicxx.h	/^    bool operator!= (const Errhandler &obj) {$/;"	f	class:MPI::Errhandler
operator !=	/usr/local/include/mpicxx.h	/^    bool operator!= (const Exception &obj) {$/;"	f	class:MPI::Exception
operator !=	/usr/local/include/mpicxx.h	/^    bool operator!= (const File &obj) {$/;"	f	class:MPI::File
operator !=	/usr/local/include/mpicxx.h	/^    bool operator!= (const Grequest &obj) {$/;"	f	class:MPI::Grequest
operator !=	/usr/local/include/mpicxx.h	/^    bool operator!= (const Group &obj) {$/;"	f	class:MPI::Group
operator !=	/usr/local/include/mpicxx.h	/^    bool operator!= (const Info &obj) {$/;"	f	class:MPI::Info
operator !=	/usr/local/include/mpicxx.h	/^    bool operator!= (const Op &obj) {$/;"	f	class:MPI::Op
operator !=	/usr/local/include/mpicxx.h	/^    bool operator!= (const Request &obj) {$/;"	f	class:MPI::Request
operator !=	/usr/local/include/mpicxx.h	/^    bool operator!= (const Win &obj) {$/;"	f	class:MPI::Win
operator =	/usr/local/include/mpicxx.h	/^    Cartcomm& operator=(const Cartcomm &obj) {$/;"	f	class:MPI::Cartcomm
operator =	/usr/local/include/mpicxx.h	/^    Cartcomm& operator=(const MPI_Comm& obj) {$/;"	f	class:MPI::Cartcomm
operator =	/usr/local/include/mpicxx.h	/^    Comm& operator=(const Comm &obj) {$/;"	f	class:MPI::Comm
operator =	/usr/local/include/mpicxx.h	/^    Comm& operator=(const MPI_Comm& obj) {$/;"	f	class:MPI::Comm
operator =	/usr/local/include/mpicxx.h	/^    Datatype& operator=(const Datatype &obj) {$/;"	f	class:MPI::Datatype
operator =	/usr/local/include/mpicxx.h	/^    Datatype& operator=(const MPI_Datatype& obj) {$/;"	f	class:MPI::Datatype
operator =	/usr/local/include/mpicxx.h	/^    Errhandler& operator=(const Errhandler &obj) {$/;"	f	class:MPI::Errhandler
operator =	/usr/local/include/mpicxx.h	/^    Errhandler& operator=(const MPI_Errhandler& obj) {$/;"	f	class:MPI::Errhandler
operator =	/usr/local/include/mpicxx.h	/^    Exception& operator=(const Exception &obj) {$/;"	f	class:MPI::Exception
operator =	/usr/local/include/mpicxx.h	/^    Exception& operator=(const int& obj) {$/;"	f	class:MPI::Exception
operator =	/usr/local/include/mpicxx.h	/^    File& operator=(const File &obj) {$/;"	f	class:MPI::File
operator =	/usr/local/include/mpicxx.h	/^    File& operator=(const MPI_File& obj) {$/;"	f	class:MPI::File
operator =	/usr/local/include/mpicxx.h	/^    Graphcomm& operator=(const Graphcomm &obj) {$/;"	f	class:MPI::Graphcomm
operator =	/usr/local/include/mpicxx.h	/^    Graphcomm& operator=(const MPI_Comm& obj) {$/;"	f	class:MPI::Graphcomm
operator =	/usr/local/include/mpicxx.h	/^    Grequest& operator=(const Grequest &obj) {$/;"	f	class:MPI::Grequest
operator =	/usr/local/include/mpicxx.h	/^    Grequest& operator=(const MPI_Request& obj) {$/;"	f	class:MPI::Grequest
operator =	/usr/local/include/mpicxx.h	/^    Group& operator=(const Group &obj) {$/;"	f	class:MPI::Group
operator =	/usr/local/include/mpicxx.h	/^    Group& operator=(const MPI_Group& obj) {$/;"	f	class:MPI::Group
operator =	/usr/local/include/mpicxx.h	/^    Info& operator=(const Info &obj) {$/;"	f	class:MPI::Info
operator =	/usr/local/include/mpicxx.h	/^    Info& operator=(const MPI_Info& obj) {$/;"	f	class:MPI::Info
operator =	/usr/local/include/mpicxx.h	/^    Intercomm& operator=(const Intercomm &obj) {$/;"	f	class:MPI::Intercomm
operator =	/usr/local/include/mpicxx.h	/^    Intercomm& operator=(const MPI_Comm& obj) {$/;"	f	class:MPI::Intercomm
operator =	/usr/local/include/mpicxx.h	/^    Intracomm& operator=(const Intracomm &obj) {$/;"	f	class:MPI::Intracomm
operator =	/usr/local/include/mpicxx.h	/^    Intracomm& operator=(const MPI_Comm& obj) {$/;"	f	class:MPI::Intracomm
operator =	/usr/local/include/mpicxx.h	/^    Nullcomm& operator=(const MPI_Comm& obj) {$/;"	f	class:MPI::Nullcomm
operator =	/usr/local/include/mpicxx.h	/^    Nullcomm& operator=(const Nullcomm &obj) {$/;"	f	class:MPI::Nullcomm
operator =	/usr/local/include/mpicxx.h	/^    Op& operator=(const MPI_Op& obj) {$/;"	f	class:MPI::Op
operator =	/usr/local/include/mpicxx.h	/^    Op& operator=(const Op &obj) {$/;"	f	class:MPI::Op
operator =	/usr/local/include/mpicxx.h	/^    Prequest& operator=(const MPI_Request& obj) {$/;"	f	class:MPI::Prequest
operator =	/usr/local/include/mpicxx.h	/^    Prequest& operator=(const Prequest &obj) {$/;"	f	class:MPI::Prequest
operator =	/usr/local/include/mpicxx.h	/^    Request& operator=(const MPI_Request& obj) {$/;"	f	class:MPI::Request
operator =	/usr/local/include/mpicxx.h	/^    Request& operator=(const Request &obj) {$/;"	f	class:MPI::Request
operator =	/usr/local/include/mpicxx.h	/^    Status& operator=(const MPI_Status& obj) {$/;"	f	class:MPI::Status
operator =	/usr/local/include/mpicxx.h	/^    Status& operator=(const Status &obj) {$/;"	f	class:MPI::Status
operator =	/usr/local/include/mpicxx.h	/^    Win& operator=(const MPI_Win& obj) {$/;"	f	class:MPI::Win
operator =	/usr/local/include/mpicxx.h	/^    Win& operator=(const Win &obj) {$/;"	f	class:MPI::Win
operator ==	/usr/local/include/mpicxx.h	/^    bool operator== (const Comm &obj) {$/;"	f	class:MPI::Comm
operator ==	/usr/local/include/mpicxx.h	/^    bool operator== (const Datatype &obj) {$/;"	f	class:MPI::Datatype
operator ==	/usr/local/include/mpicxx.h	/^    bool operator== (const Errhandler &obj) {$/;"	f	class:MPI::Errhandler
operator ==	/usr/local/include/mpicxx.h	/^    bool operator== (const Exception &obj) {$/;"	f	class:MPI::Exception
operator ==	/usr/local/include/mpicxx.h	/^    bool operator== (const File &obj) {$/;"	f	class:MPI::File
operator ==	/usr/local/include/mpicxx.h	/^    bool operator== (const Grequest &obj) {$/;"	f	class:MPI::Grequest
operator ==	/usr/local/include/mpicxx.h	/^    bool operator== (const Group &obj) {$/;"	f	class:MPI::Group
operator ==	/usr/local/include/mpicxx.h	/^    bool operator== (const Info &obj) {$/;"	f	class:MPI::Info
operator ==	/usr/local/include/mpicxx.h	/^    bool operator== (const Op &obj) {$/;"	f	class:MPI::Op
operator ==	/usr/local/include/mpicxx.h	/^    bool operator== (const Request &obj) {$/;"	f	class:MPI::Request
operator ==	/usr/local/include/mpicxx.h	/^    bool operator== (const Win &obj) {$/;"	f	class:MPI::Win
operator MPI_Comm	/usr/local/include/mpicxx.h	/^    inline operator MPI_Comm() const { return the_real_comm; }$/;"	f	class:MPI::Cartcomm
operator MPI_Comm	/usr/local/include/mpicxx.h	/^    inline operator MPI_Comm() const { return the_real_comm; }$/;"	f	class:MPI::Comm
operator MPI_Comm	/usr/local/include/mpicxx.h	/^    inline operator MPI_Comm() const { return the_real_comm; }$/;"	f	class:MPI::Graphcomm
operator MPI_Comm	/usr/local/include/mpicxx.h	/^    inline operator MPI_Comm() const { return the_real_comm; }$/;"	f	class:MPI::Intercomm
operator MPI_Comm	/usr/local/include/mpicxx.h	/^    inline operator MPI_Comm() const { return the_real_comm; }$/;"	f	class:MPI::Intracomm
operator MPI_Comm	/usr/local/include/mpicxx.h	/^    inline operator MPI_Comm() const { return the_real_comm; }$/;"	f	class:MPI::Nullcomm
operator MPI_Comm*	/usr/local/include/mpicxx.h	/^    inline operator MPI_Comm*() { return &the_real_comm; }$/;"	f	class:MPI::Cartcomm
operator MPI_Comm*	/usr/local/include/mpicxx.h	/^    inline operator MPI_Comm*() { return &the_real_comm; }$/;"	f	class:MPI::Comm
operator MPI_Comm*	/usr/local/include/mpicxx.h	/^    inline operator MPI_Comm*() { return &the_real_comm; }$/;"	f	class:MPI::Graphcomm
operator MPI_Comm*	/usr/local/include/mpicxx.h	/^    inline operator MPI_Comm*() { return &the_real_comm; }$/;"	f	class:MPI::Intercomm
operator MPI_Comm*	/usr/local/include/mpicxx.h	/^    inline operator MPI_Comm*() { return &the_real_comm; }$/;"	f	class:MPI::Intracomm
operator MPI_Comm*	/usr/local/include/mpicxx.h	/^    inline operator MPI_Comm*() { return &the_real_comm; }$/;"	f	class:MPI::Nullcomm
operator MPI_Datatype	/usr/local/include/mpicxx.h	/^    inline operator MPI_Datatype() const { return the_real_datatype; }$/;"	f	class:MPI::Datatype
operator MPI_Datatype*	/usr/local/include/mpicxx.h	/^    inline operator MPI_Datatype*() { return &the_real_datatype; }$/;"	f	class:MPI::Datatype
operator MPI_Errhandler	/usr/local/include/mpicxx.h	/^    inline operator MPI_Errhandler() const { return the_real_errhandler; }$/;"	f	class:MPI::Errhandler
operator MPI_Errhandler*	/usr/local/include/mpicxx.h	/^    inline operator MPI_Errhandler*() { return &the_real_errhandler; }$/;"	f	class:MPI::Errhandler
operator MPI_File	/usr/local/include/mpicxx.h	/^    inline operator MPI_File() const { return the_real_file; }$/;"	f	class:MPI::File
operator MPI_File*	/usr/local/include/mpicxx.h	/^    inline operator MPI_File*() { return &the_real_file; }$/;"	f	class:MPI::File
operator MPI_Group	/usr/local/include/mpicxx.h	/^    inline operator MPI_Group() const { return the_real_group; }$/;"	f	class:MPI::Group
operator MPI_Group*	/usr/local/include/mpicxx.h	/^    inline operator MPI_Group*() { return &the_real_group; }$/;"	f	class:MPI::Group
operator MPI_Info	/usr/local/include/mpicxx.h	/^    inline operator MPI_Info() const { return the_real_info; }$/;"	f	class:MPI::Info
operator MPI_Info*	/usr/local/include/mpicxx.h	/^    inline operator MPI_Info*() { return &the_real_info; }$/;"	f	class:MPI::Info
operator MPI_Op	/usr/local/include/mpicxx.h	/^    inline operator MPI_Op() const { return the_real_op; }$/;"	f	class:MPI::Op
operator MPI_Op*	/usr/local/include/mpicxx.h	/^    inline operator MPI_Op*() { return &the_real_op; }$/;"	f	class:MPI::Op
operator MPI_Request	/usr/local/include/mpicxx.h	/^    inline operator MPI_Request() const { return the_real_request; }$/;"	f	class:MPI::Grequest
operator MPI_Request	/usr/local/include/mpicxx.h	/^    inline operator MPI_Request() const { return the_real_request; }$/;"	f	class:MPI::Prequest
operator MPI_Request	/usr/local/include/mpicxx.h	/^    inline operator MPI_Request() const { return the_real_request; }$/;"	f	class:MPI::Request
operator MPI_Request*	/usr/local/include/mpicxx.h	/^    inline operator MPI_Request*() { return &the_real_request; }$/;"	f	class:MPI::Grequest
operator MPI_Request*	/usr/local/include/mpicxx.h	/^    inline operator MPI_Request*() { return &the_real_request; }$/;"	f	class:MPI::Prequest
operator MPI_Request*	/usr/local/include/mpicxx.h	/^    inline operator MPI_Request*() { return &the_real_request; }$/;"	f	class:MPI::Request
operator MPI_Status	/usr/local/include/mpicxx.h	/^    inline operator MPI_Status() const { return the_real_status; }$/;"	f	class:MPI::Status
operator MPI_Status*	/usr/local/include/mpicxx.h	/^    inline operator MPI_Status*() { return &the_real_status; }$/;"	f	class:MPI::Status
operator MPI_Win	/usr/local/include/mpicxx.h	/^    inline operator MPI_Win() const { return the_real_win; }$/;"	f	class:MPI::Win
operator MPI_Win*	/usr/local/include/mpicxx.h	/^    inline operator MPI_Win*() { return &the_real_win; }$/;"	f	class:MPI::Win
operator int	/usr/local/include/mpicxx.h	/^    inline operator int() const { return the_real_exception; }$/;"	f	class:MPI::Exception
operator int*	/usr/local/include/mpicxx.h	/^    inline operator int*() { return &the_real_exception; }$/;"	f	class:MPI::Exception
s	/usr/local/include/mpi.h	/^struct mpich_struct_mpi_short_int       { short s; int i; };$/;"	m	struct:mpich_struct_mpi_short_int
storage_stack	/usr/local/include/mpi.h	/^    void **storage_stack;$/;"	m	struct:__anon2
the_error_message	/usr/local/include/mpicxx.h	/^    char the_error_message[MPI_MAX_ERROR_STRING];$/;"	m	class:MPI::Exception
the_real_comm	/usr/local/include/mpicxx.h	/^    MPI_Comm the_real_comm;$/;"	m	class:MPI::Comm
the_real_datatype	/usr/local/include/mpicxx.h	/^    MPI_Datatype the_real_datatype;$/;"	m	class:MPI::Datatype
the_real_errhandler	/usr/local/include/mpicxx.h	/^    MPI_Errhandler the_real_errhandler;$/;"	m	class:MPI::Errhandler
the_real_exception	/usr/local/include/mpicxx.h	/^    int the_real_exception;$/;"	m	class:MPI::Exception
the_real_file	/usr/local/include/mpicxx.h	/^    MPI_File the_real_file;$/;"	m	class:MPI::File
the_real_group	/usr/local/include/mpicxx.h	/^    MPI_Group the_real_group;$/;"	m	class:MPI::Group
the_real_info	/usr/local/include/mpicxx.h	/^    MPI_Info the_real_info;$/;"	m	class:MPI::Info
the_real_op	/usr/local/include/mpicxx.h	/^    MPI_Op the_real_op;$/;"	m	class:MPI::Op
the_real_request	/usr/local/include/mpicxx.h	/^    MPI_Request the_real_request;$/;"	m	class:MPI::Request
the_real_status	/usr/local/include/mpicxx.h	/^    MPI_Status the_real_status;$/;"	m	class:MPI::Status
the_real_win	/usr/local/include/mpicxx.h	/^    MPI_Win the_real_win;$/;"	m	class:MPI::Win
uint16_t	/usr/local/include/mpi.h	/^static const MPI_Datatype mpich_mpi_uint16_t MPICH_ATTR_TYPE_TAG_STDINT(uint16_t) = MPI_UINT16_T;$/;"	v
uint32_t	/usr/local/include/mpi.h	/^static const MPI_Datatype mpich_mpi_uint32_t MPICH_ATTR_TYPE_TAG_STDINT(uint32_t) = MPI_UINT32_T;$/;"	v
uint64_t	/usr/local/include/mpi.h	/^static const MPI_Datatype mpich_mpi_uint64_t MPICH_ATTR_TYPE_TAG_STDINT(uint64_t) = MPI_UINT64_T;$/;"	v
uint8_t	/usr/local/include/mpi.h	/^static const MPI_Datatype mpich_mpi_uint8_t  MPICH_ATTR_TYPE_TAG_STDINT(uint8_t)  = MPI_UINT8_T;$/;"	v
~Cartcomm	/usr/local/include/mpicxx.h	/^    virtual ~Cartcomm() {}$/;"	f	class:MPI::Cartcomm
~Comm	/usr/local/include/mpicxx.h	/^    virtual ~Comm() {}$/;"	f	class:MPI::Comm
~Datatype	/usr/local/include/mpicxx.h	/^    virtual ~Datatype() {}$/;"	f	class:MPI::Datatype
~Errhandler	/usr/local/include/mpicxx.h	/^    virtual ~Errhandler() {}$/;"	f	class:MPI::Errhandler
~Exception	/usr/local/include/mpicxx.h	/^    virtual ~Exception() {}$/;"	f	class:MPI::Exception
~File	/usr/local/include/mpicxx.h	/^    virtual ~File() {}$/;"	f	class:MPI::File
~Graphcomm	/usr/local/include/mpicxx.h	/^    virtual ~Graphcomm() {}$/;"	f	class:MPI::Graphcomm
~Grequest	/usr/local/include/mpicxx.h	/^    virtual ~Grequest() {}$/;"	f	class:MPI::Grequest
~Group	/usr/local/include/mpicxx.h	/^    virtual ~Group() {}$/;"	f	class:MPI::Group
~Info	/usr/local/include/mpicxx.h	/^    virtual ~Info() {}$/;"	f	class:MPI::Info
~Intercomm	/usr/local/include/mpicxx.h	/^    virtual ~Intercomm() {}$/;"	f	class:MPI::Intercomm
~Intracomm	/usr/local/include/mpicxx.h	/^    virtual ~Intracomm() {}$/;"	f	class:MPI::Intracomm
~Nullcomm	/usr/local/include/mpicxx.h	/^    virtual ~Nullcomm() {}$/;"	f	class:MPI::Nullcomm
~Op	/usr/local/include/mpicxx.h	/^    virtual ~Op() {}$/;"	f	class:MPI::Op
~Prequest	/usr/local/include/mpicxx.h	/^    virtual ~Prequest() {}$/;"	f	class:MPI::Prequest
~Request	/usr/local/include/mpicxx.h	/^    virtual ~Request() {}$/;"	f	class:MPI::Request
~Status	/usr/local/include/mpicxx.h	/^    virtual ~Status() {}$/;"	f	class:MPI::Status
~Win	/usr/local/include/mpicxx.h	/^    virtual ~Win() {}$/;"	f	class:MPI::Win
